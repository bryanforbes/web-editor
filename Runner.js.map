{"version":3,"file":"Runner.js","sourceRoot":"","sources":["../src/Runner.ts"],"names":[],"mappings":"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","sourcesContent":["import { ProjectFileType } from '@dojo/cli-export-project/interfaces/project.json';\nimport Evented from '@dojo/core/Evented';\nimport { createHandle } from '@dojo/core/lang';\nimport project from './project';\nimport DOMParser from './support/DOMParser';\n\nexport interface GetDocOptions {\n\tcss?: { name: string; text: string; }[];\n\tbodyAttributes?: { [attr: string]: string; };\n\tdependencies: { [pkg: string]: string; };\n\tloaderSrc: string;\n\thtml?: string;\n\tmodules: { [mid: string]: string; };\n\tscripts?: string[];\n}\n\nconst TSLIB_SEMVER = '^1.6.0';\n\n/**\n * A map of custom package data that needs to be added if this package is part of project that is being run\n */\nconst PACKAGE_DATA: { [pkg: string]: string } = {\n\tcldrjs: `{ name: 'cldr', location: 'https://unpkg.com/cldrjs@<%SEMVER>/dist/cldr', main: '../cldr' }`,\n\tglobalize: `{ name: 'globalize', main: '/dist/globalize' }`,\n\tmaquette: `{ name: 'maquette', main: '/dist/maquette.min' }`,\n\tpepjs: `{ name: 'pepjs', main: 'dist/pep' }`,\n\ttslib: `{ name: 'tslib', location: 'https://unpkg.com/tslib@${TSLIB_SEMVER}/', main: 'tslib' }`\n};\n\n/**\n * Generate an HTML document source\n * @param strings Array of template strings\n * @param css The CSS as an array of strings\n * @param html The HTML to be used in the body of the document\n * @param dependencies A map of package dependencies required\n * @param modules Any modules to be injected into the page\n */\nfunction docSrc(\n\tstrings: TemplateStringsArray,\n\tscripts: string[],\n\tcss: { name: string; text: string; }[],\n\tbodyAttributes: { [attr: string]: string; },\n\thtml: string,\n\tloaderSrc: string,\n\tdependencies: { [pkg: string]: string; },\n\tpackages: string[],\n\tmodules: { [mid: string]: string }\n): string {\n\tconst paths: string[] = [];\n\tfor (const pkg in dependencies) {\n\t\tpaths.push(`'${pkg}': 'https://unpkg.com/${pkg}@${dependencies[pkg]}'`);\n\t}\n\tconst pathsText = `{\\n\\t\\t\\t\\t\\t\\t\\t${paths.join(',\\n\\t\\t\\t\\t\\t\\t\\t')}\\n\\t\\t\\t\\t\\t\\t}`;\n\n\tconst packagesText = `[\n\t\t\t\t\t\t\t${packages.join(',\\n\\t\\t\\t\\t\\t\\t\\t')}\n\t\t\t\t\t\t]`;\n\n\tlet modulesText = `var cache = {\\n`;\n\tfor (const mid in modules) {\n\t\tmodulesText += `\\t'${mid}': function () {\\n${modules[mid]}\\n},\\n`;\n\t}\n\tmodulesText += `};\\nrequire.cache(cache);\\n/* workaround for dojo/loader#124 */\\nrequire.cache({});\\n`;\n\n\tconst cssText = css.map(({ name, text }) => {\n\t\t/* when external CSS is brought into a document, its URL URIs might not be encoded, this will encode them */\n\t\tconst encoded = text.replace(/url\\(['\"]?(.*?)[\"']?\\)/ig, (match, p1: string) => `url('${encodeURI(p1)}')`);\n\t\treturn `<style>\\n/* from: ${name} */\\n\\n${encoded}\\n</style>`;\n\t}).join('\\n');\n\n\tlet scriptsText = '';\n\tscripts.forEach((src) => {\n\t\tscriptsText += `<script src=\"${src}\"></script>\\n\\t`;\n\t});\n\n\tlet bodyAttributesText = '';\n\tfor (const attr in bodyAttributes) {\n\t\tbodyAttributesText += ` ${attr}=\"${bodyAttributes[attr]}\"`;\n\t}\n\n\tconst parts = [ scriptsText, cssText, bodyAttributesText, html, loaderSrc, pathsText, packagesText, modulesText ];\n\n\tconst text = parts\n\t\t.reduce((previous, text, index) => {\n\t\t\treturn previous + strings[index] + text + '\\n';\n\t\t}, '');\n\n\treturn text + strings.slice(parts.length).join('\\n');\n}\n\n/**\n * Return the information for packages based on dependencies for the project\n * @param dependencies The project dependencies\n */\nfunction getPackages(dependencies: { [pkg: string]: string; }): string[] {\n\tconst packages: string[] = [];\n\tObject.keys(PACKAGE_DATA).forEach((key) => {\n\t\tif (key in dependencies && key !== 'tslib') {\n\t\t\tpackages.push(PACKAGE_DATA[key].replace('<%SEMVER>', dependencies[key]));\n\t\t}\n\t});\n\tpackages.push(PACKAGE_DATA['tslib']); /* we are always going to inject this one */\n\treturn packages;\n}\n\n/**\n * Determine if a string is a local or remote URI, returning `true` if remote, otherwise `false`\n * @param text string of text to check\n */\nfunction isRemoteURI(text: string): boolean {\n\tconst currenthost = `${window.location.protocol}//${window.location.hostname}`;\n\tif (text.indexOf(currenthost) >= 0) {\n\t\treturn false;\n\t}\n\treturn /^http(?:s)?:\\/{2}/.test(text);\n}\n\n/**\n * Extract some specific content from an HTML document and return it\n * @param content The source HTML content\n */\nfunction parseHtml(content: string): { css: string, body: string, scripts: string[] } {\n\tconst parser = new DOMParser();\n\tconst doc = parser.parseFromString(content, 'text/html');\n\tconst scriptNodes = doc.querySelectorAll('script');\n\tconst scripts: string[] = [];\n\tfor (let i = 0; i < scriptNodes.length; i++) {\n\t\tconst script = scriptNodes[i];\n\t\tscript.parentElement && script.parentElement.removeChild(script);\n\t\tif (script.src && isRemoteURI(script.src)) {\n\t\t\tscripts.push(script.src);\n\t\t}\n\t}\n\tconst css: string[] = [];\n\tconst styles = doc.querySelectorAll('style');\n\tfor (let i = 0; i < styles.length; i++) {\n\t\tconst style = styles[i];\n\t\tif (style.textContent && style.getAttribute('scoped') === null) {\n\t\t\tcss.push(style.textContent);\n\t\t}\n\t}\n\treturn {\n\t\tcss: css.join('\\n'),\n\t\tbody: doc.body && doc.body.innerHTML || '',\n\t\tscripts\n\t};\n}\n\nexport default class Runner extends Evented {\n\n\t/**\n\t * The private iframe that the project will run in\n\t */\n\tprivate _iframe: HTMLIFrameElement;\n\n\t/**\n\t * A private handler for re-emitting iframe errors\n\t * @param evt The iframe's contentWindow error event\n\t */\n\tprivate _onIframeError = (evt: ErrorEvent) => {\n\t\tevt.preventDefault();\n\t\tthis.emit(evt);\n\t}\n\n\t/**\n\t * Create a runner instance attached to a specific `iframe`\n\t * @param iframe The `iframe` that should be used\n\t */\n\tconstructor(iframe: HTMLIFrameElement) {\n\t\tsuper();\n\t\tthis._iframe = iframe;\n\t\tthis.own(createHandle(() => {\n\t\t\tif (this._iframe.contentWindow) {\n\t\t\t\tthis._iframe.contentWindow.removeEventListener('error', this._onIframeError);\n\t\t\t}\n\t\t}));\n\t}\n\n\t/**\n\t * Writes to the document of an `iframe`\n\t * @param iframe The target `iframe`\n\t * @param source The source to be written\n\t */\n\tprivate async _writeIframeDoc(source: string): Promise<void> {\n\t\tconst iframe = this._iframe;\n\t\tconst onIframeError = this._onIframeError;\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tfunction onLoadListener() {\n\t\t\t\tiframe.removeEventListener('load', onLoadListener);\n\t\t\t\tiframe.contentWindow.document.write(source);\n\t\t\t\tiframe.contentWindow.document.close();\n\t\t\t\tiframe.contentWindow.addEventListener('error', onIframeError);\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tiframe.contentWindow.removeEventListener('error', onIframeError);\n\t\t\tiframe.addEventListener('load', onLoadListener);\n\t\t\tiframe.contentWindow.location.reload();\n\t\t});\n\t}\n\n\t/**\n\t * Generate the document\n\t * @param param0 The options to use\n\t */\n\tgetDoc({ css = [], bodyAttributes = {}, dependencies, loaderSrc, html = '', modules, scripts = [] }: GetDocOptions): string {\n\t\treturn docSrc`<!DOCTYPE html>\n\t\t\t<html>\n\t\t\t<head>\n\t\t\t\t${scripts}\n\t\t\t\t${css}\n\t\t\t</head>\n\t\t\t<body${bodyAttributes}>\n\t\t\t\t${html}\n\t\t\t\t<script src=\"${loaderSrc}\"></script>\n\t\t\t\t<script>\n\t\t\t\t\trequire.config({\n\t\t\t\t\t\tpaths: ${dependencies},\n\t\t\t\t\t\tpackages: ${getPackages(dependencies)}\n\t\t\t\t\t});\n\t\t\t\t\t${modules}\n\t\t\t\t\trequire([ 'tslib', '@dojo/core/request', '../support/providers/amdRequire' ], function () {\n\t\t\t\t\t\tvar request = require('@dojo/core/request').default;\n\t\t\t\t\t\tvar getProvider = require('../support/providers/amdRequire').default;\n\t\t\t\t\t\trequest.setDefaultProvider(getProvider(require));\n\t\t\t\t\t\trequire([ 'src/main' ], function () { });\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t</body>\n\t\t\t</html>`;\n\t}\n\n\t/**\n\t * Get the emit from the current project and run it in the runner's `iframe`\n\t */\n\tasync run(): Promise<void> {\n\t\tif (!project.isLoaded()) {\n\t\t\tthrow new Error('Project not loaded.');\n\t\t}\n\n\t\tconst program = await project.emit();\n\n\t\tconst modules = program\n\t\t\t.filter(({ type }) => type === ProjectFileType.JavaScript)\n\t\t\t.reduce((map, { name, text }) => {\n\t\t\t\tmap[name.replace(/\\.js$/, '')] = text;\n\t\t\t\treturn map;\n\t\t\t}, {} as { [mid: string]: string });\n\n\t\tconst css = program\n\t\t\t.filter(({ type }) => type === ProjectFileType.CSS)\n\t\t\t.map(({ name, text }) => { return { name, text }; });\n\n\t\tconst dependencies = project.getDependencies();\n\n\t\tconst { css: text, body: html, scripts } = parseHtml(project.getIndexHtml());\n\t\tif (text) {\n\t\t\tcss.unshift({ name: 'project index', text });\n\t\t}\n\n\t\tconst source = this.getDoc({\n\t\t\tcss,\n\t\t\thtml,\n\t\t\tdependencies,\n\t\t\tloaderSrc: 'https://unpkg.com/@dojo/loader/loader.min.js',\n\t\t\tmodules,\n\t\t\tscripts\n\t\t});\n\t\tawait this._writeIframeDoc(source);\n\t}\n}\n"]}