{"version":3,"file":"Runner.js","sourceRoot":"","sources":["../src/Runner.ts"],"names":[],"mappings":"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","sourcesContent":["import { ProjectFileType } from '@dojo/cli-emit-editor/interfaces/editor';\nimport Evented from '@dojo/core/Evented';\nimport project from './project';\n\n/**\n * Generate an HTML document source\n * @param strings Array of template strings\n * @param css The CSS as an array of strings\n * @param html The HTML to be used in the body of the document\n * @param dependencies A map of package dependencies required\n * @param modules Any modules to be injected into the page\n */\nfunction docSrc(\n\tstrings: TemplateStringsArray,\n\tscripts: string[],\n\tcss: { name: string; text: string; }[],\n\tbodyAttributes: { [attr: string]: string; },\n\thtml: string,\n\tdependencies: { [pkg: string]: string; },\n\tmodules: { [mid: string]: string }\n): string {\n\tconst [ preScripts, preCss, preBodyAttributes, preHtml, preDependencies, preModules, ...postscript ] = strings;\n\tlet pathsText = `{\\n`;\n\tfor (const pkg in dependencies) {\n\t\tpathsText += `\\t'${pkg}': 'https://unpkg.com/${pkg}@${dependencies[pkg]}',\\n`;\n\t}\n\tpathsText += `}\\n`;\n\n\tlet modulesText = `var cache = {\\n`;\n\tfor (const mid in modules) {\n\t\tmodulesText += `\\t'${mid}': function () {\\n${modules[mid]}\\n},\\n`;\n\t}\n\tmodulesText += `};\\nrequire.cache(cache);\\n/* workaround for dojo/loader#124 */\\nrequire.cache({});\\n`;\n\n\tconst cssText = css.map(({ name, text }) => {\n\t\t/* when external CSS is brought into a document, its URL URIs might not be encoded, this will encode them */\n\t\tconst encoded = text.replace(/url\\(['\"]?(.*?)[\"']?\\)/ig, (match, p1: string) => `url('${encodeURI(p1)}')`);\n\t\treturn `<style>\\n/* from: ${name} */\\n\\n${encoded}\\n</style>`;\n\t}).join('\\n');\n\n\tlet scriptsText = '';\n\tscripts.forEach((src) => {\n\t\tscriptsText += `<script src=\"${src}\"></script>\\n\\t`;\n\t});\n\n\tlet bodyAttributesText = '';\n\tfor (const attr in bodyAttributes) {\n\t\tbodyAttributesText += ` $[attr]=\"${bodyAttributes[attr]}\"`;\n\t}\n\n\treturn preScripts + scriptsText + preCss + cssText + preBodyAttributes + bodyAttributesText + preHtml + html\n\t\t+ preDependencies + pathsText + preModules + modulesText + postscript.join('\\n');\n}\n\n/**\n * Writes to the document of an `iframe`\n * @param iframe The target `iframe`\n * @param source The source to be written\n */\nfunction writeIframeDoc(iframe: HTMLIFrameElement, source: string) {\n\tiframe.contentWindow.document.write(source);\n}\n\nfunction parseHtml(content: string): { css: string, body: string, scripts: string[] } {\n\tconst parser = new DOMParser();\n\tconst doc = parser.parseFromString(content, 'text/html');\n\tconst scriptNodes = doc.querySelectorAll('script');\n\tconst scripts: string[] = [];\n\tfor (let i = 0; i < scriptNodes.length; i++) {\n\t\tconst script = scriptNodes[i];\n\t\tscript.parentElement && script.parentElement.removeChild(script);\n\t\tif (script.src && /^http(?:s)?:\\/{2}/.test(script.src)) {\n\t\t\tscripts.push(script.src);\n\t\t}\n\t}\n\tconst css: string[] = [];\n\tconst styles = doc.querySelectorAll('style');\n\tfor (let i = 0; i < styles.length; i++) {\n\t\tconst style = styles[i];\n\t\tif (style.textContent) {\n\t\t\tcss.push(style.textContent);\n\t\t}\n\t}\n\treturn {\n\t\tcss: css.join('\\n'),\n\t\tbody: doc.body && doc.body.innerHTML || '',\n\t\tscripts\n\t};\n}\n\nexport interface GetDocOptions {\n\tcss?: { name: string; text: string; }[];\n\tbodyAttributes?: { [attr: string]: string; };\n\tdependencies: { [pkg: string]: string; };\n\thtml?: string;\n\tmodules: { [mid: string]: string; };\n\tscripts?: string[];\n}\n\nexport default class Runner extends Evented {\n\t/**\n\t * The private iframe that the project will run in\n\t */\n\tprivate _iframe: HTMLIFrameElement | undefined;\n\n\t/**\n\t * Create a runner instance attached to a specific `iframe`\n\t * @param iframe The `iframe` that should be used\n\t */\n\tconstructor(iframe: HTMLIFrameElement) {\n\t\tsuper();\n\t\tthis._iframe = iframe;\n\t}\n\n\t/**\n\t * Generate the document\n\t * @param param0 The options to use\n\t */\n\tgetDoc({ css = [], bodyAttributes = {}, dependencies, html = '', modules, scripts = [] }: GetDocOptions): string {\n\t\treturn docSrc`<!DOCTYPE html>\n\t\t\t<html>\n\t\t\t<head>\n\t\t\t\t${scripts}\n\t\t\t\t${css}\n\t\t\t</head>\n\t\t\t<body${bodyAttributes}>\n\t\t\t\t${html}\n\t\t\t\t<script src=\"https://unpkg.com/@dojo/loader/loader.min.js\"></script>\n\t\t\t\t<script>\n\t\t\t\t\trequire.config({\n\t\t\t\t\t\tpaths: ${dependencies},\n\t\t\t\t\t\tpackages: [\n\t\t\t\t\t\t\t{ name: 'cldr', location: 'https://unpkg.com/cldrjs@^0.4.6/dist/cldr', main: '../cldr' },\n\t\t\t\t\t\t\t{ name: 'globalize', main: '/dist/globalize' },\n\t\t\t\t\t\t\t{ name: 'maquette', main: '/dist/maquette.min' },\n\t\t\t\t\t\t\t{ name: 'pepjs', main: 'dist/pep' },\n\t\t\t\t\t\t\t{ name: 'tslib', location: 'https://unpkg.com/tslib@^1.6.0/', main: 'tslib' }\n\t\t\t\t\t\t]\n\t\t\t\t\t});\n\t\t\t\t\t${modules}\n\t\t\t\t\trequire([ 'tslib', '@dojo/core/request', '../support/providers/amdRequire' ], function () {\n\t\t\t\t\t\tvar request = require('@dojo/core/request').default;\n\t\t\t\t\t\tvar amdRequire = require('../support/providers/amdRequire').default;\n\t\t\t\t\t\trequest.setDefaultProvider(amdRequire);\n\t\t\t\t\t\trequire([ 'src/main' ], function () { });\n\t\t\t\t\t});\n\t\t\t\t</script>\n\t\t\t</body>\n\t\t\t</html>`;\n\t}\n\n\t/**\n\t * Get the emit from the current project and run it in the runner's `iframe`\n\t */\n\tasync run() {\n\t\tif (!project.isLoaded()) {\n\t\t\tthrow new Error('Project not loaded.');\n\t\t}\n\n\t\tif (!this._iframe) {\n\t\t\tthis._iframe = document.createElement('iframe');\n\t\t}\n\n\t\tconst program = await project.emit();\n\n\t\tconst modules = program\n\t\t\t.filter(({ type }) => type === ProjectFileType.JavaScript)\n\t\t\t.reduce((map, { name, text }) => {\n\t\t\t\tmap[name.replace(/\\.js$/, '')] = text;\n\t\t\t\treturn map;\n\t\t\t}, {} as { [mid: string]: string });\n\n\t\tconst css = program\n\t\t\t.filter(({ type }) => type === ProjectFileType.CSS)\n\t\t\t.map(({ name, text }) => { return { name, text }; });\n\n\t\tconst dependencies = project.getDependencies();\n\n\t\tconst { css: text, body: html, scripts } = parseHtml(project.getIndexHtml());\n\t\tif (text) {\n\t\t\tcss.unshift({ name: 'project index', text });\n\t\t}\n\n\t\tconst source = this.getDoc({\n\t\t\tcss,\n\t\t\thtml,\n\t\t\tdependencies,\n\t\t\tmodules,\n\t\t\tscripts\n\t\t});\n\t\twriteIframeDoc(this._iframe, source);\n\t}\n}\n"]}