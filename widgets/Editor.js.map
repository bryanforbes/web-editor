{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../../src/widgets/Editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHandle } from '@dojo/core/lang';\nimport { queueTask } from '@dojo/core/queue';\nimport { debounce } from '@dojo/core/util';\nimport { w } from '@dojo/widget-core/d';\nimport { WidgetProperties } from '@dojo/widget-core/interfaces';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { ThemeableMixin, ThemeableProperties, theme } from '@dojo/widget-core/mixins/Themeable';\nimport DomWrapper from '@dojo/widget-core/util/DomWrapper';\n\nimport * as css from '../styles/editor.m.css';\n\n/**\n * The minimum width we should ever display the monaco-editor;\n */\nconst MINIMUM_WIDTH = 150;\n\n/**\n * Properties that can be set on an `Editor` widget\n */\nexport interface EditorProperties extends WidgetProperties, ThemeableProperties {\n\t/**\n\t * Ensure that monaco-editor instance is layed out in a way that allows the document to reflow and resize the editor properly\n\t */\n\tlayout?: boolean;\n\n\t/**\n\t * The monaco-editor _model_ (file) that is displayed in the editor\n\t */\n\tmodel?: monaco.editor.IModel;\n\n\t/**\n\t * Options to pass to the monaco-editor on creation\n\t */\n\toptions?: monaco.editor.IEditorOptions;\n\n\t/**\n\t * Called when the monaco-editor updates a project file\n\t */\n\tonDirty?(): void;\n\n\t/**\n\t * Called when the monaco-editor is being created and inited\n\t */\n\tonInit?(editor: monaco.editor.IStandaloneCodeEditor): void;\n\n\t/**\n\t * Called when the moanco-editor is layed out\n\t */\n\tonLayout?(): void;\n}\n\n/**\n * Internal interface to represent sizes\n */\ninterface Size {\n\theight: number;\n\twidth: number;\n}\n\n/**\n * Return the size of an `HTMLElement`\n * @param target The target `HTMLElement`\n */\nfunction getSize(target: HTMLElement): Size {\n\tconst { clientHeight: height, clientWidth: width } = target;\n\treturn { height, width };\n}\n\n/**\n * Compare the two sizes and return `true` if they are equal, otherwise `false`\n * @param a The first size to compare\n * @param b The second size to compare\n */\nfunction isEqualSize(a: Size, b: Size): boolean {\n\treturn a.height === b.height && a.width === b.width;\n}\n\nconst ThemeableBase = ThemeableMixin(WidgetBase);\n\n/**\n * A class which wraps the `monaco-editor`\n */\n@theme(css)\nexport default class Editor extends ThemeableBase<EditorProperties> {\n\tprivate _currentModel: monaco.editor.IModel | undefined;\n\tprivate _editor: monaco.editor.IStandaloneCodeEditor | undefined;\n\tprivate _EditorDom: DomWrapper;\n\tprivate _didChangeHandle: monaco.IDisposable;\n\tprivate _originalSize: Size;\n\tprivate _root: HTMLDivElement;\n\n\tprivate _layout() {\n\t\tconst { _editor, _originalSize, _root, properties: { onLayout } } = this;\n\t\tif (!_editor) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we are currently not at our original size, we will restore it, so that it won't interfere with the layout\n\t\t// of other elements\n\t\tif (!isEqualSize(getSize(_root), _originalSize)) {\n\t\t\t_editor.layout({ height: _originalSize.height, width: MINIMUM_WIDTH });\n\t\t}\n\n\t\t// Now at the end of the turn, we need to do the layout of the editor properly\n\t\tqueueTask(() => {\n\t\t\tconst size = getSize(_root);\n\t\t\tif (!isEqualSize(size, { height: _originalSize.height, width: MINIMUM_WIDTH })) {\n\t\t\t\t_editor.layout(size);\n\t\t\t\tonLayout && onLayout();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onAttached = () => {\n\t\tconst { _onDidChangeModelContent, _root, properties: { model, onInit, onLayout, options } } = this;\n\t\t// _onAttached fires when the DOM is actually attached to the document, but the rest of the virtual DOM hasn't\n\t\t// been layed out which causes issues for monaco-editor when figuring out its initial size, so we will schedule\n\t\t// it to be run at the end of the turn, which will provide more reliable layout\n\t\tqueueTask(() => {\n\t\t\tconst editor = this._editor = monaco.editor.create(_root, options);\n\t\t\tconst didChangeHandle = this._didChangeHandle = editor.onDidChangeModelContent(debounce(_onDidChangeModelContent, 1000));\n\t\t\tonInit && onInit(editor);\n\n\t\t\tthis.own(createHandle(() => {\n\t\t\t\teditor.dispose();\n\t\t\t\tdidChangeHandle.dispose();\n\t\t\t}));\n\t\t\tthis._originalSize = getSize(_root);\n\t\t\teditor.layout();\n\t\t\tonLayout && onLayout();\n\t\t\tif (model) {\n\t\t\t\teditor.setModel(model);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onDidChangeModelContent = () => {\n\t\tconst { onDirty } = this.properties;\n\t\tonDirty && onDirty();\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst root = this._root = document.createElement('div');\n\t\tthis._EditorDom = DomWrapper(root, { onAttached: this._onAttached });\n\t}\n\n\tpublic render() {\n\t\tconst { _currentModel, _editor, properties: { model } } = this;\n\t\t// getting the monaco-editor to layout and not interfere with the layout of other elements is a complicated affair\n\t\t// we have to do some quite obstuse logic in order for it to behave properly, but only do so if we suspect the\n\t\t// root node might resize after the render\n\t\tif (this.properties.layout) {\n\t\t\tthis._layout();\n\t\t}\n\n\t\t// display the _model_ (file) in the editor\n\t\t// re-renders fire a lot more often then model changes, so caching it for performance reasons\n\t\tif (_editor && model && _currentModel !== model) {\n\t\t\t_editor.setModel(model);\n\t\t\tthis._currentModel = model;\n\t\t}\n\n\t\treturn w(this._EditorDom, {\n\t\t\tclasses: this.classes(css.root).fixed(css.rootFixed),\n\t\t\tkey: 'root'\n\t\t});\n\t}\n}\n"]}