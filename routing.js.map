{"version":3,"file":"routing.js","sourceRoot":"","sources":["../src/routing.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA,6CAAwC;IACxC,+CAA0C;IAE1C,iEAA4D;IAqB5D,IAAM,MAAM,GAAG,IAAI,gBAAM,CAAiB,EAAE,OAAO,EAAE,IAAI,qBAAW,EAAE,EAAE,CAAC,CAAC;IAE7D,QAAA,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAEnD;;;OAGG;IACH,yBAAgC,OAA0B;QACzD,MAAM,CAAC,MAAM,CAAC,IAAI,eAAK,CAAC;YACvB,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,OAAO,CAAC,MAAM;SACpB,CAAC,CAAC,CAAC;QAEJ,MAAM,CAAC,MAAM,CAAC,IAAI,eAAK,CAAsB;YAC5C,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,OAAO,CAAC,MAAM;SACpB,CAAC,CAAC,CAAC;QAEJ,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IAZD,0CAYC","sourcesContent":["import { PausableHandle } from '@dojo/core/on';\nimport { Request } from '@dojo/routing/interfaces';\nimport Route from '@dojo/routing/Route';\nimport Router from '@dojo/routing/Router';\nimport { Parameters } from '@dojo/routing/interfaces';\nimport HashHistory from '@dojo/routing/history/HashHistory';\n\nexport interface GistParameters extends Parameters {\n\t/**\n\t * The ID of the gist\n\t */\n\tid: string;\n}\n\nexport interface GistRouterOptions {\n\t/**\n\t * Called by the router when the route matches `/{id}`\n\t */\n\tonGist: (request: Request<any, GistParameters>) => void;\n\n\t/**\n\t * Called by the router when the route matches `/`\n\t */\n\tonRoot: (request: Request<any, any>) => void;\n}\n\nconst router = new Router<GistParameters>({ history: new HashHistory() });\n\nexport const setPath = router.setPath.bind(router);\n\n/**\n * Configure and start a router which handles routes as references to gists\n * @param options Listeners for specific routes\n */\nexport function startGistRouter(options: GistRouterOptions): PausableHandle {\n\trouter.append(new Route({\n\t\tpath: '/',\n\t\texec: options.onRoot\n\t}));\n\n\trouter.append(new Route<any, GistParameters>({\n\t\tpath: '/{id}',\n\t\texec: options.onGist\n\t}));\n\n\treturn router.start();\n}\n"]}