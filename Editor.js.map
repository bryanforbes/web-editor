{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../src/Editor.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '@dojo/core/global';\nimport { createHandle } from '@dojo/core/lang';\nimport { queueTask } from '@dojo/core/queue';\nimport { debounce } from '@dojo/core/util';\nimport { v } from '@dojo/widget-core/d';\nimport { DNode, WidgetProperties } from '@dojo/widget-core/interfaces';\nimport WidgetBase, { afterRender } from '@dojo/widget-core/WidgetBase';\nimport { ThemeableMixin, ThemeableProperties, theme } from '@dojo/widget-core/mixins/Themeable';\nimport project from './project';\nimport * as css from './styles/editor.m.css';\n\nconst globalMonaco: typeof monaco = global.monaco;\n\n/**\n * @type EditorProperties\n *\n * Properties that can be set on Editor widget\n *\n * @property filename The filename (from the current `project`) that the editor should be displaying for editing\n * @property options Editor options that should be passed to the monaco editor when it is created\n * @property onEditorInit Called when the monaco editor is created and initialized by the widget, passing the instance of the monaco editor\n * @property onEditorLayout Called when the widget calls `.layout()` on the monaco editor\n */\nexport interface EditorProperties extends WidgetProperties, ThemeableProperties {\n\tfilename?: string;\n\toptions?: monaco.editor.IEditorOptions;\n\n\tonEditorInit?(editor: monaco.editor.IStandaloneCodeEditor): void;\n\tonEditorLayout?(): void;\n}\n\n/* tslint:disable:variable-name */\nconst EditorBase = ThemeableMixin(WidgetBase);\n/* tslint:enable:variable-name */\n\n@theme(css)\nexport default class Editor extends EditorBase<EditorProperties> {\n\tprivate _editor: monaco.editor.IStandaloneCodeEditor;\n\tprivate _didChangeHandle: monaco.IDisposable;\n\tprivate _onDidChangeModelContent = () => {\n\t\tif (this.properties.filename) {\n\t\t\tproject.setFileDirty(this.properties.filename);\n\t\t}\n\t}\n\tprivate _queuedLayout = false;\n\n\tprivate _initEditor(element: HTMLDivElement) {\n\t\t/* doing this async, during next macro task to help ensure the editor does a proper layout */\n\t\tqueueTask(() => {\n\t\t\tthis._editor = globalMonaco.editor.create(element, this.properties.options);\n\t\t\tthis._didChangeHandle = this._editor.onDidChangeModelContent(debounce(this._onDidChangeModelContent, 1000));\n\t\t\tconst { onEditorInit } = this.properties;\n\t\t\tonEditorInit && onEditorInit(this._editor);\n\n\t\t\tthis.own(createHandle(() => {\n\t\t\t\tthis._editor.dispose();\n\t\t\t\tthis._didChangeHandle.dispose();\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic render() {\n\t\treturn v('div', {\n\t\t\tafterCreate: this._initEditor,\n\t\t\tafterUpdate: this.updateEditor as any,\n\t\t\tclasses: this.classes(css.base)\n\t\t});\n\t}\n\n\t@afterRender()\n\tpublic updateEditor(node?: DNode): DNode | undefined {\n\t\tif (!this._editor) {\n\t\t\treturn node;\n\t\t}\n\t\tif (this.properties.filename && project.includes(this.properties.filename)) {\n\t\t\tthis._editor.setModel(project.getFileModel(this.properties.filename));\n\t\t}\n\t\tif (!this._queuedLayout) {\n\t\t\tthis._queuedLayout = true;\n\t\t\tqueueTask(() => {\n\t\t\t\tthis._editor.layout();\n\t\t\t\tthis._queuedLayout = false;\n\t\t\t\tconst { onEditorLayout } = this.properties;\n\t\t\t\tonEditorLayout && onEditorLayout();\n\t\t\t});\n\t\t}\n\t\treturn node;\n\t}\n}\n"]}