{"version":3,"file":"Editor.js","sourceRoot":"","sources":["../src/Editor.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '@dojo/core/global';\nimport { createHandle } from '@dojo/core/lang';\nimport { queueTask } from '@dojo/core/queue';\nimport { debounce } from '@dojo/core/util';\nimport { w } from '@dojo/widget-core/d';\nimport { WidgetProperties } from '@dojo/widget-core/interfaces';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { ThemeableMixin, ThemeableProperties, theme } from '@dojo/widget-core/mixins/Themeable';\nimport DomWrapper from '@dojo/widget-core/util/DomWrapper';\nimport project from './project';\nimport * as css from './styles/editor.m.css';\n\n/**\n * The minimum width we should ever display the monaco-editor;\n */\nconst MINIMUM_WIDTH = 150;\nconst globalMonaco: typeof monaco = global.monaco;\n\n/**\n * Properties that can be set on an `Editor` widget\n */\nexport interface EditorProperties extends WidgetProperties, ThemeableProperties {\n\t/**\n\t * The filename to display in the editor\n\t */\n\tfilename?: string;\n\n\t/**\n\t * Ensure that monaco-editor instance is layed out in a way that allows the document to reflow and resize the editor properly\n\t */\n\tlayout?: boolean;\n\n\t/**\n\t * Options to pass to the monaco-editor on creation\n\t */\n\toptions?: monaco.editor.IEditorOptions;\n\n\t/**\n\t * Called when the monaco-editor is being created and inited\n\t */\n\tonEditorInit?(editor: monaco.editor.IStandaloneCodeEditor): void;\n\n\t/**\n\t * Called when the moanco-editor is layed out\n\t */\n\tonEditorLayout?(): void;\n}\n\ninterface Size {\n\theight: number;\n\twidth: number;\n}\n\nfunction getSize(element: HTMLElement): Size {\n\tconst { clientHeight: height, clientWidth: width } = element;\n\treturn { height, width };\n}\n\nfunction isEqualSize(a: Size, b: Size): boolean {\n\treturn a.height === b.height && a.width === b.width;\n}\n\nconst EditorBase = ThemeableMixin(WidgetBase);\n\n@theme(css)\nexport default class Editor extends EditorBase<EditorProperties> {\n\tprivate _currentModel: monaco.editor.IModel;\n\tprivate _editor: monaco.editor.IStandaloneCodeEditor | undefined;\n\tprivate _emptyModel = monaco.editor.createModel('');\n\tprivate _EditorDom: DomWrapper;\n\tprivate _didChangeHandle: monaco.IDisposable;\n\tprivate _originalSize: Size;\n\tprivate _root: HTMLDivElement;\n\n\tprivate _layout() {\n\t\tconst { _editor, _originalSize, _root, properties: { onEditorLayout } } = this;\n\t\tif (!_editor) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If we are currently not at our original size, we will restore it, so that it won't interfere with the layout\n\t\t// of other elements\n\t\tif (!isEqualSize(getSize(_root), _originalSize)) {\n\t\t\t_editor.layout({ height: _originalSize.height, width: MINIMUM_WIDTH });\n\t\t}\n\n\t\t// Now at the end of the turn, we need to do the layout of the editor properly\n\t\tqueueTask(() => {\n\t\t\tconst size = getSize(_root);\n\t\t\tif (!isEqualSize(size, { height: _originalSize.height, width: MINIMUM_WIDTH })) {\n\t\t\t\t_editor.layout(size);\n\t\t\t\tonEditorLayout && onEditorLayout();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _onAttached = () => {\n\t\tconst { _onDidChangeModelContent, _root, properties: { onEditorInit, onEditorLayout, options } } = this;\n\t\t// _onAttached fires when the DOM is actually attached to the document, but the rest of the virtual DOM hasn't\n\t\t// been layed out which causes issues for monaco-editor when figuring out its initial size, so we will schedule\n\t\t// it to be run at the end of the turn, which will provide more reliable layout\n\t\tqueueTask(() => {\n\t\t\tconst editor = this._editor = globalMonaco.editor.create(_root, options);\n\t\t\tconst didChangeHandle = this._didChangeHandle = editor.onDidChangeModelContent(debounce(_onDidChangeModelContent, 1000));\n\t\t\tthis._setModel();\n\t\t\tonEditorInit && onEditorInit(editor);\n\n\t\t\tthis.own(createHandle(() => {\n\t\t\t\teditor.dispose();\n\t\t\t\tdidChangeHandle.dispose();\n\t\t\t}));\n\t\t\tthis._originalSize = getSize(_root);\n\t\t\teditor.layout();\n\t\t\tonEditorLayout && onEditorLayout();\n\t\t});\n\t}\n\n\tprivate _onDidChangeModelContent = () => {\n\t\tconst { filename } = this.properties;\n\t\tif (filename) {\n\t\t\tproject.setFileDirty(filename);\n\t\t}\n\t}\n\n\tprivate _setModel() {\n\t\tconst { _editor, _emptyModel, properties: { filename } } = this;\n\t\tif (_editor && filename && project.includes(filename)) {\n\t\t\tconst fileModel = project.getFileModel(filename);\n\t\t\tif (fileModel !== this._currentModel) {\n\t\t\t\t_editor.setModel(fileModel);\n\t\t\t\tthis._currentModel = fileModel;\n\t\t\t}\n\t\t}\n\t\telse if (_editor && filename === '' && this._currentModel !== _emptyModel) {\n\t\t\t_editor.setModel(_emptyModel);\n\t\t\tthis._currentModel = _emptyModel;\n\t\t}\n\t}\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst root = this._root = document.createElement('div');\n\t\tthis._EditorDom = DomWrapper(root, { onAttached: this._onAttached });\n\t}\n\n\tpublic render() {\n\t\t// getting the monaco-editor to layout and not interfere with the layout of other elements is a complicated affair\n\t\t// we have to do some quite obstuse logic in order for it to behave properly, but only do so if we suspect the\n\t\t// root node might resize after the render\n\t\tif (this.properties.layout) {\n\t\t\tthis._layout();\n\t\t}\n\n\t\t// Ensure we are displaying the correct file\n\t\tthis._setModel();\n\n\t\treturn w(this._EditorDom, {\n\t\t\tclasses: this.classes(css.root).fixed(css.rootFixed),\n\t\t\tkey: 'root'\n\t\t});\n\t}\n}\n"]}