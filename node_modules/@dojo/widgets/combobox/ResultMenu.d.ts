import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
import { RegistryMixin, RegistryMixinProperties } from '@dojo/widget-core/mixins/Registry';
import { DNode, WNode } from '@dojo/widget-core/interfaces';
/**
 * @type ResultMenuProperties
 *
 * Properties that can be set on a ResultMenu component
 *
 * @property getResultLabel         Can be used to get the text label of a result based on the underlying result object
 * @property id                     An ID to apply to the ResultMenu DOM element
 * @property isResultDisabled       Used to determine if an item should be disabled
 * @property onResultMouseDown      Called when mouse clicks a result item
 * @property onResultMouseEnter     Called when mouse enters a result item
 * @property onResultMouseUp        Called when mouse releases a result item
 * @property results                List of result data objects
 * @property selectedIndex          Position of the selected result in the list of results
 */
export interface ResultMenuProperties extends ThemeableProperties, RegistryMixinProperties {
    getResultLabel(result: any): string;
    id?: string;
    isResultDisabled?(result: any): boolean;
    onResultMouseDown(event: MouseEvent, index: number): void;
    onResultMouseEnter(event: MouseEvent, index: number): void;
    onResultMouseUp(event: MouseEvent, index: number): void;
    results: any[];
    selectedIndex: number | undefined;
}
export declare const ResultMenuBase: typeof WidgetBase & (new (...args: any[]) => ThemeableMixin) & (new (...args: any[]) => RegistryMixin);
export default class ResultMenu extends ResultMenuBase<ResultMenuProperties> {
    renderResults(results: WNode[]): any[];
    render(): DNode;
}
