import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
import { DNode } from '@dojo/widget-core/interfaces';
/**
 * @type ResultItemProperties
 *
 * Properties that can be set on a ResultItem component
 *
 * @property getResultLabel  Can be used to get the text label of a result based on the underlying result object
 * @property index           Position of this result in a list of results
 * @property isDisabled      Used to determine if an item should be disabled
 * @property onMouseDown     Called when mouse clicks this result item
 * @property onMouseEnter    Called when mouse enters this result item
 * @property onMouseUp       Called when mouse releases this result item
 * @property result          Data object associated with this item
 * @property selected        Determines whether or not this item is selected
 */
export interface ResultItemProperties extends ThemeableProperties {
    getResultLabel(result: any): string;
    index: number;
    isDisabled(result: any): boolean;
    onMouseDown(event: MouseEvent, index: number): void;
    onMouseEnter(event: MouseEvent, index: number): void;
    onMouseUp(event: MouseEvent, index: number): void;
    result: any;
    selected: boolean;
}
export declare const ResultItemBase: typeof WidgetBase & (new (...args: any[]) => ThemeableMixin);
export default class ResultItem extends ResultItemBase<ResultItemProperties> {
    private _onMouseDown(event);
    private _onMouseEnter(event);
    private _onMouseUp(event);
    renderResult(result: any): DNode;
    render(): DNode;
}
