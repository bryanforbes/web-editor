{"version":3,"file":"ResultItem.js","sourceRoot":"","sources":["ResultItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,2DAA0D;IAC1D,gEAAgG;IAChG,yCAAwC;IAGxC,6CAA+C;IAyB9C,CAAC;IAEW,QAAA,cAAc,GAAG,0BAAc,CAAC,uBAAU,CAAC,CAAC;IAGzD;QAAwC,8BAAoC;QAA5E;;QA0DA,CAAC;QAzDQ,iCAAY,GAApB,UAAqB,KAAiB;YAC/B,IAAA,oBAGa,EAFlB,gBAAK,EACL,4BAAW,CACQ;YAEpB,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC3B,CAAC;QAEO,kCAAa,GAArB,UAAsB,KAAiB;YAChC,IAAA,oBAGa,EAFlB,gBAAK,EACL,8BAAY,CACO;YAEpB,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAC5B,CAAC;QAEO,+BAAU,GAAlB,UAAmB,KAAiB;YAC7B,IAAA,oBAGa,EAFlB,wBAAS,EACT,gBAAK,CACc;YAEpB,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACzB,CAAC;QAED,iCAAY,GAAZ,UAAa,MAAW;YACf,IAAA,+CAAc,CAAqB;YAE3C,MAAM,CAAC,KAAC,CAAC,KAAK,EAAE,CAAE,cAAc,CAAC,MAAM,CAAC,CAAE,CAAC,CAAC;QAC7C,CAAC;QAED,2BAAM,GAAN;YACO,IAAA,oBAIa,EAHlB,0BAAU,EACV,kBAAM,EACN,sBAAQ,CACW;YAEpB,MAAM,CAAC,KAAC,CAAC,KAAK,EAAE;gBACf,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;gBAC5C,eAAe,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;gBACtD,OAAO,EAAE,IAAI,CAAC,OAAO,CACpB,GAAG,CAAC,MAAM,EACV,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAC9B,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAC9C;gBACD,eAAe,EAAE,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;gBAC5C,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,YAAY,EAAE,IAAI,CAAC,aAAa;gBAChC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,IAAI,EAAE,QAAQ;aACd,EAAE;gBACF,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;aACzB,CAAC,CAAC;QACJ,CAAC;QAzDmB,UAAU;YAD9B,iBAAK,CAAC,GAAG,CAAC;WACU,UAAU,CA0D9B;QAAD,iBAAC;KAAA,AA1DD,CAAwC,sBAAc,GA0DrD;sBA1DoB,UAAU","sourcesContent":["import { WidgetBase } from '@dojo/widget-core/WidgetBase';\nimport { ThemeableMixin, ThemeableProperties, theme } from '@dojo/widget-core/mixins/Themeable';\nimport { v } from '@dojo/widget-core/d';\nimport { DNode } from '@dojo/widget-core/interfaces';\n\nimport * as css from './styles/comboBox.m.css';\n\n/**\n * @type ResultItemProperties\n *\n * Properties that can be set on a ResultItem component\n *\n * @property getResultLabel  Can be used to get the text label of a result based on the underlying result object\n * @property index           Position of this result in a list of results\n * @property isDisabled      Used to determine if an item should be disabled\n * @property onMouseDown     Called when mouse clicks this result item\n * @property onMouseEnter    Called when mouse enters this result item\n * @property onMouseUp       Called when mouse releases this result item\n * @property result          Data object associated with this item\n * @property selected        Determines whether or not this item is selected\n */\nexport interface ResultItemProperties extends ThemeableProperties {\n\tgetResultLabel(result: any): string;\n\tindex: number;\n\tisDisabled(result: any): boolean;\n\tonMouseDown(event: MouseEvent, index: number): void;\n\tonMouseEnter(event: MouseEvent, index: number): void;\n\tonMouseUp(event: MouseEvent, index: number): void;\n\tresult: any;\n\tselected: boolean;\n};\n\nexport const ResultItemBase = ThemeableMixin(WidgetBase);\n\n@theme(css)\nexport default class ResultItem extends ResultItemBase<ResultItemProperties> {\n\tprivate _onMouseDown(event: MouseEvent) {\n\t\tconst {\n\t\t\tindex,\n\t\t\tonMouseDown\n\t\t} = this.properties;\n\n\t\tonMouseDown(event, index);\n\t}\n\n\tprivate _onMouseEnter(event: MouseEvent) {\n\t\tconst {\n\t\t\tindex,\n\t\t\tonMouseEnter\n\t\t} = this.properties;\n\n\t\tonMouseEnter(event, index);\n\t}\n\n\tprivate _onMouseUp(event: MouseEvent) {\n\t\tconst {\n\t\t\tonMouseUp,\n\t\t\tindex\n\t\t} = this.properties;\n\n\t\tonMouseUp(event, index);\n\t}\n\n\trenderResult(result: any): DNode {\n\t\tconst { getResultLabel } = this.properties;\n\n\t\treturn v('div', [ getResultLabel(result) ]);\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\tisDisabled,\n\t\t\tresult,\n\t\t\tselected\n\t\t} = this.properties;\n\n\t\treturn v('div', {\n\t\t\t'aria-selected': selected ? 'true' : 'false',\n\t\t\t'aria-disabled': isDisabled(result) ? 'true' : 'false',\n\t\t\tclasses: this.classes(\n\t\t\t\tcss.option,\n\t\t\t\tselected ? css.selected : null,\n\t\t\t\tisDisabled(result) ? css.disabledOption : null\n\t\t\t),\n\t\t\t'data-selected': selected ? 'true' : 'false',\n\t\t\tonmousedown: this._onMouseDown,\n\t\t\tonmouseenter: this._onMouseEnter,\n\t\t\tonmouseup: this._onMouseUp,\n\t\t\trole: 'option'\n\t\t}, [\n\t\t\tthis.renderResult(result)\n\t\t]);\n\t}\n}\n"]}