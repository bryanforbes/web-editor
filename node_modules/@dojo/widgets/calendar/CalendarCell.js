var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/widget-core/WidgetBase", "@dojo/widget-core/mixins/Themeable", "@dojo/widget-core/d", "./styles/calendar.m.css"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var Themeable_1 = require("@dojo/widget-core/mixins/Themeable");
    var d_1 = require("@dojo/widget-core/d");
    var css = require("./styles/calendar.m.css");
    ;
    exports.CalendarCellBase = Themeable_1.ThemeableMixin(WidgetBase_1.WidgetBase);
    var CalendarCell = /** @class */ (function (_super) {
        __extends(CalendarCell, _super);
        function CalendarCell() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        CalendarCell.prototype.onElementCreated = function (element, key) {
            this._callFocus(element);
        };
        CalendarCell.prototype.onElementUpdated = function (element, key) {
            this._callFocus(element);
        };
        CalendarCell.prototype._callFocus = function (element) {
            var _a = this.properties, callFocus = _a.callFocus, onFocusCalled = _a.onFocusCalled;
            if (callFocus) {
                element.focus();
                onFocusCalled && onFocusCalled();
            }
        };
        CalendarCell.prototype._onClick = function (event) {
            var _a = this.properties, date = _a.date, _b = _a.disabled, disabled = _b === void 0 ? false : _b, onClick = _a.onClick;
            onClick && onClick(date, disabled);
        };
        CalendarCell.prototype._onKeyDown = function (event) {
            var onKeyDown = this.properties.onKeyDown;
            onKeyDown && onKeyDown(event);
        };
        CalendarCell.prototype.formatDate = function (date) {
            return d_1.v('span', ["" + date]);
        };
        CalendarCell.prototype.render = function () {
            var _a = this.properties, date = _a.date, _b = _a.disabled, disabled = _b === void 0 ? false : _b, _c = _a.focusable, focusable = _c === void 0 ? false : _c, _d = _a.selected, selected = _d === void 0 ? false : _d, _e = _a.today, today = _e === void 0 ? false : _e;
            var dateCellClasses = [
                css.date,
                disabled ? css.inactiveDate : null,
                selected ? css.selectedDate : null,
                today ? css.todayDate : null
            ];
            return d_1.v('td', {
                key: 'root',
                role: 'gridcell',
                'aria-selected': "" + selected,
                tabIndex: focusable ? 0 : -1,
                classes: this.classes.apply(this, dateCellClasses),
                onclick: this._onClick,
                onkeydown: this._onKeyDown
            }, [this.formatDate(date)]);
        };
        CalendarCell = __decorate([
            Themeable_1.theme(css)
        ], CalendarCell);
        return CalendarCell;
    }(exports.CalendarCellBase));
    exports.default = CalendarCell;
});
//# sourceMappingURL=CalendarCell.js.map