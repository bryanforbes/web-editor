import { DNode } from '@dojo/widget-core/interfaces';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
import { WidgetBase } from '@dojo/widget-core/WidgetBase';
/**
 * Enum for left / right alignment
 */
export declare const enum Align {
    left = 0,
    right = 1,
}
/**
 * @type SlidePaneProperties
 *
 * Properties that can be set on a SlidePane component
 *
 * @property align            The position of the pane on the screen (Align.left or Align.right)
 * @property onOpen           Called when the pane opens
 * @property onRequestClose   Called when the pane is swiped closed or the underlay is clicked or tapped
 * @property open             Determines whether the pane is open or closed
 * @property underlay         Determines whether a semi-transparent background shows behind the pane
 * @property width            Width of the pane in pixels
 */
export interface SlidePaneProperties extends ThemeableProperties {
    align?: Align;
    onOpen?(): void;
    onRequestClose?(): void;
    open?: boolean;
    underlay?: boolean;
    width?: number;
}
export declare const SlidePaneBase: typeof WidgetBase & (new (...args: any[]) => ThemeableMixin);
export default class SlidePane extends SlidePaneBase<SlidePaneProperties> {
    private _content;
    private _initialX;
    private _slideIn;
    private _swiping;
    private _transform;
    private _wasOpen;
    private _onSwipeStart(event);
    private _onSwipeMove(event);
    private _onSwipeEnd(event);
    protected onElementCreated(element: HTMLElement, key: string): void;
    render(): DNode;
}
