var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/widget-core/mixins/Themeable", "@dojo/widget-core/d", "@dojo/widget-core/WidgetBase", "./styles/tabController.m.css"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Themeable_1 = require("@dojo/widget-core/mixins/Themeable");
    var d_1 = require("@dojo/widget-core/d");
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var css = require("./styles/tabController.m.css");
    ;
    exports.TabButtonBase = Themeable_1.ThemeableMixin(WidgetBase_1.WidgetBase);
    var TabButton = /** @class */ (function (_super) {
        __extends(TabButton, _super);
        function TabButton() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TabButton.prototype._onClick = function () {
            var _a = this.properties, disabled = _a.disabled, index = _a.index, onClick = _a.onClick;
            !disabled && onClick && onClick(index);
        };
        TabButton.prototype._onCloseClick = function (event) {
            var _a = this.properties, index = _a.index, onCloseClick = _a.onCloseClick;
            event.stopPropagation();
            onCloseClick && onCloseClick(index);
        };
        TabButton.prototype._onKeyDown = function (event) {
            var _a = this.properties, closeable = _a.closeable, disabled = _a.disabled, index = _a.index, onCloseClick = _a.onCloseClick, onDownArrowPress = _a.onDownArrowPress, onEndPress = _a.onEndPress, onHomePress = _a.onHomePress, onLeftArrowPress = _a.onLeftArrowPress, onRightArrowPress = _a.onRightArrowPress, onUpArrowPress = _a.onUpArrowPress;
            if (disabled) {
                return;
            }
            // Accessibility
            switch (event.which) {
                // Escape
                case 27 /* Escape */:
                    closeable && onCloseClick && onCloseClick(index);
                    break;
                // Left arrow
                case 37 /* Left */:
                    onLeftArrowPress && onLeftArrowPress();
                    break;
                // Right arrow
                case 39 /* Right */:
                    onRightArrowPress && onRightArrowPress();
                    break;
                // Up arrow
                case 38 /* Up */:
                    onUpArrowPress && onUpArrowPress();
                    break;
                // Down arrow
                case 40 /* Down */:
                    onDownArrowPress && onDownArrowPress();
                    break;
                // Home
                case 36 /* Home */:
                    onHomePress && onHomePress();
                    break;
                // End
                case 35 /* End */:
                    onEndPress && onEndPress();
                    break;
            }
        };
        TabButton.prototype._callFocus = function (element) {
            var _a = this.properties, callFocus = _a.callFocus, onFocusCalled = _a.onFocusCalled;
            if (callFocus) {
                element.focus();
                onFocusCalled && onFocusCalled();
            }
        };
        TabButton.prototype.onElementCreated = function (element, key) {
            key === 'tab-button' && this._callFocus(element);
        };
        TabButton.prototype.onElementUpdated = function (element, key) {
            key === 'tab-button' && this._callFocus(element);
        };
        TabButton.prototype.render = function () {
            var _a = this.properties, active = _a.active, closeable = _a.closeable, controls = _a.controls, disabled = _a.disabled, id = _a.id;
            var children = closeable ? this.children.concat([
                d_1.v('button', {
                    tabIndex: active ? 0 : -1,
                    classes: this.classes(css.close),
                    innerHTML: 'close tab',
                    onclick: this._onCloseClick
                })
            ]) : this.children;
            return d_1.v('div', {
                'aria-controls': controls,
                'aria-disabled': disabled ? 'true' : 'false',
                'aria-selected': active ? 'true' : 'false',
                classes: this.classes(css.tabButton, active ? css.activeTabButton : null, disabled ? css.disabledTabButton : null),
                id: id,
                key: 'tab-button',
                onclick: this._onClick,
                onkeydown: this._onKeyDown,
                role: 'tab',
                tabIndex: active ? 0 : -1
            }, children);
        };
        TabButton = __decorate([
            Themeable_1.theme(css)
        ], TabButton);
        return TabButton;
    }(exports.TabButtonBase));
    exports.default = TabButton;
});
//# sourceMappingURL=TabButton.js.map