import { DNode } from '@dojo/widget-core/interfaces';
import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
/**
 * The role of this dialog, used for accessibility
 */
export declare type RoleType = 'dialog' | 'alertdialog';
/**
 * @type DialogProperties
 *
 * Properties that can be set on a Dialog component
 *
 * @property closeable          Determines whether the dialog can be closed
 * @property enterAnimation     CSS class to apply to the dialog when opened
 * @property exitAnimation      CSS class to apply to the dialog when closed
 * @property modal              Determines whether the dialog can be closed by clicking outside its content
 * @property onOpen             Called when the dialog opens
 * @property onRequestClose     Called when the dialog is closed
 * @property open               Determines whether the dialog is open or closed
 * @property role               Role of this dialog for accessibility, either 'alert' or 'dialog'
 * @property title              Title to show in the dialog title bar
 * @property underlay           Determines whether a semi-transparent background shows behind the dialog
 */
export interface DialogProperties extends ThemeableProperties {
    closeable?: boolean;
    enterAnimation?: string;
    exitAnimation?: string;
    modal?: boolean;
    onOpen?(): void;
    onRequestClose?(): void;
    open?: boolean;
    role?: RoleType;
    title?: string;
    underlay?: boolean;
}
export declare const DialogBase: typeof WidgetBase & (new (...args: any[]) => ThemeableMixin);
export default class Dialog extends DialogBase<DialogProperties> {
    private _titleId;
    private _wasOpen;
    private _onCloseClick();
    private _onUnderlayClick();
    render(): DNode;
}
