var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/widget-core/WidgetBase", "@dojo/widget-core/mixins/Themeable", "@dojo/widget-core/d", "@dojo/core/uuid", "./styles/dialog.m.css", "../common/styles/animations.m.css"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var Themeable_1 = require("@dojo/widget-core/mixins/Themeable");
    var d_1 = require("@dojo/widget-core/d");
    var uuid_1 = require("@dojo/core/uuid");
    var css = require("./styles/dialog.m.css");
    var animations = require("../common/styles/animations.m.css");
    ;
    exports.DialogBase = Themeable_1.ThemeableMixin(WidgetBase_1.WidgetBase);
    var Dialog = (function (_super) {
        __extends(Dialog, _super);
        function Dialog() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._titleId = uuid_1.default();
            return _this;
        }
        Dialog.prototype._onCloseClick = function () {
            var _a = this.properties.closeable, closeable = _a === void 0 ? true : _a;
            closeable && this.properties.onRequestClose && this.properties.onRequestClose();
        };
        Dialog.prototype._onUnderlayClick = function () {
            !this.properties.modal && this._onCloseClick();
        };
        Dialog.prototype.render = function () {
            var _a = this.properties, _b = _a.closeable, closeable = _b === void 0 ? true : _b, _c = _a.enterAnimation, enterAnimation = _c === void 0 ? animations.fadeIn : _c, _d = _a.exitAnimation, exitAnimation = _d === void 0 ? animations.fadeOut : _d, onOpen = _a.onOpen, _e = _a.open, open = _e === void 0 ? false : _e, _f = _a.role, role = _f === void 0 ? 'dialog' : _f, _g = _a.title, title = _g === void 0 ? '' : _g, _h = _a.underlay, underlay = _h === void 0 ? false : _h;
            open && !this._wasOpen && onOpen && onOpen();
            this._wasOpen = open;
            return d_1.v('div', { classes: this.classes(css.root) }, open ? [
                d_1.v('div', {
                    classes: this.classes(underlay ? css.underlayVisible : null).fixed(css.underlay),
                    enterAnimation: animations.fadeIn,
                    exitAnimation: animations.fadeOut,
                    key: 'underlay',
                    onclick: this._onUnderlayClick
                }),
                d_1.v('div', {
                    'aria-labelledby': this._titleId,
                    classes: this.classes(css.main),
                    enterAnimation: enterAnimation,
                    exitAnimation: exitAnimation,
                    key: 'main',
                    role: role
                }, [
                    d_1.v('div', {
                        classes: this.classes(css.title),
                        id: this._titleId,
                        key: 'title'
                    }, [
                        title,
                        closeable ? d_1.v('button', {
                            classes: this.classes(css.close),
                            innerHTML: 'close dialog',
                            onclick: this._onCloseClick
                        }) : null
                    ]),
                    d_1.v('div', {
                        classes: this.classes(css.content),
                        key: 'content'
                    }, this.children)
                ])
            ] : []);
        };
        return Dialog;
    }(exports.DialogBase));
    Dialog = __decorate([
        Themeable_1.theme(css)
    ], Dialog);
    exports.default = Dialog;
});
//# sourceMappingURL=Dialog.js.map