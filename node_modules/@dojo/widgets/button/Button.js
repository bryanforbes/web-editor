var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/widget-core/WidgetBase", "@dojo/widget-core/mixins/Themeable", "@dojo/widget-core/d", "./styles/button.m.css", "../common/styles/icons.m.css"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var Themeable_1 = require("@dojo/widget-core/mixins/Themeable");
    var d_1 = require("@dojo/widget-core/d");
    var css = require("./styles/button.m.css");
    var iconCss = require("../common/styles/icons.m.css");
    exports.ButtonBase = Themeable_1.ThemeableMixin(WidgetBase_1.WidgetBase);
    var Button = /** @class */ (function (_super) {
        __extends(Button, _super);
        function Button() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Button.prototype._onBlur = function (event) { this.properties.onBlur && this.properties.onBlur(event); };
        Button.prototype._onClick = function (event) { this.properties.onClick && this.properties.onClick(event); };
        Button.prototype._onFocus = function (event) { this.properties.onFocus && this.properties.onFocus(event); };
        Button.prototype._onKeyDown = function (event) { this.properties.onKeyDown && this.properties.onKeyDown(event); };
        Button.prototype._onKeyPress = function (event) { this.properties.onKeyPress && this.properties.onKeyPress(event); };
        Button.prototype._onKeyUp = function (event) { this.properties.onKeyUp && this.properties.onKeyUp(event); };
        Button.prototype._onMouseDown = function (event) { this.properties.onMouseDown && this.properties.onMouseDown(event); };
        Button.prototype._onMouseUp = function (event) { this.properties.onMouseUp && this.properties.onMouseUp(event); };
        Button.prototype._onTouchStart = function (event) { this.properties.onTouchStart && this.properties.onTouchStart(event); };
        Button.prototype._onTouchEnd = function (event) { this.properties.onTouchEnd && this.properties.onTouchEnd(event); };
        Button.prototype._onTouchCancel = function (event) { this.properties.onTouchCancel && this.properties.onTouchCancel(event); };
        Button.prototype.render = function () {
            var _a = this.properties, describedBy = _a.describedBy, disabled = _a.disabled, id = _a.id, _b = _a.popup, popup = _b === void 0 ? false : _b, name = _a.name, pressed = _a.pressed, type = _a.type, value = _a.value;
            if (popup === true) {
                popup = { expanded: false, id: '' };
            }
            return d_1.v('button', {
                classes: this.classes(css.root, disabled ? css.disabled : null, popup ? css.popup : null, pressed ? css.pressed : null),
                disabled: disabled,
                id: id,
                name: name,
                type: type,
                value: value,
                onblur: this._onBlur,
                onclick: this._onClick,
                onfocus: this._onFocus,
                onkeydown: this._onKeyDown,
                onkeypress: this._onKeyPress,
                onkeyup: this._onKeyUp,
                onmousedown: this._onMouseDown,
                onmouseup: this._onMouseUp,
                ontouchstart: this._onTouchStart,
                ontouchend: this._onTouchEnd,
                ontouchcancel: this._onTouchCancel,
                'aria-haspopup': popup ? 'true' : null,
                'aria-controls': popup ? popup.id : null,
                'aria-expanded': popup ? popup.expanded + '' : null,
                'aria-pressed': typeof pressed === 'boolean' ? pressed.toString() : null,
                'aria-describedby': describedBy
            }, this.children.concat([
                popup ? d_1.v('i', { classes: this.classes(css.addon, iconCss.icon, iconCss.downIcon),
                    role: 'presentation', 'aria-hidden': 'true'
                }) : null
            ]));
        };
        Button = __decorate([
            Themeable_1.theme(css),
            Themeable_1.theme(iconCss)
        ], Button);
        return Button;
    }(exports.ButtonBase));
    exports.default = Button;
});
//# sourceMappingURL=Button.js.map