var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/widget-core/WidgetBase", "@dojo/widget-core/mixins/Themeable", "../label/Label", "@dojo/widget-core/d", "@dojo/core/uuid", "./styles/slider.m.css"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WidgetBase_1 = require("@dojo/widget-core/WidgetBase");
    var Themeable_1 = require("@dojo/widget-core/mixins/Themeable");
    var Label_1 = require("../label/Label");
    var d_1 = require("@dojo/widget-core/d");
    var uuid_1 = require("@dojo/core/uuid");
    var css = require("./styles/slider.m.css");
    exports.SliderBase = Themeable_1.ThemeableMixin(WidgetBase_1.WidgetBase);
    var Slider = (function (_super) {
        __extends(Slider, _super);
        function Slider() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            // id used to associate input with output
            _this._inputId = uuid_1.default();
            return _this;
        }
        Slider.prototype._onBlur = function (event) { this.properties.onBlur && this.properties.onBlur(event); };
        Slider.prototype._onChange = function (event) { this.properties.onChange && this.properties.onChange(event); };
        Slider.prototype._onClick = function (event) { this.properties.onClick && this.properties.onClick(event); };
        Slider.prototype._onFocus = function (event) { this.properties.onFocus && this.properties.onFocus(event); };
        Slider.prototype._onInput = function (event) { this.properties.onInput && this.properties.onInput(event); };
        Slider.prototype._onKeyDown = function (event) { this.properties.onKeyDown && this.properties.onKeyDown(event); };
        Slider.prototype._onKeyPress = function (event) { this.properties.onKeyPress && this.properties.onKeyPress(event); };
        Slider.prototype._onKeyUp = function (event) { this.properties.onKeyUp && this.properties.onKeyUp(event); };
        Slider.prototype._onMouseDown = function (event) { this.properties.onMouseDown && this.properties.onMouseDown(event); };
        Slider.prototype._onMouseUp = function (event) { this.properties.onMouseUp && this.properties.onMouseUp(event); };
        Slider.prototype._onTouchStart = function (event) { this.properties.onTouchStart && this.properties.onTouchStart(event); };
        Slider.prototype._onTouchEnd = function (event) { this.properties.onTouchEnd && this.properties.onTouchEnd(event); };
        Slider.prototype._onTouchCancel = function (event) { this.properties.onTouchCancel && this.properties.onTouchCancel(event); };
        Slider.prototype.render = function () {
            var _a = this.properties, describedBy = _a.describedBy, disabled = _a.disabled, formId = _a.formId, invalid = _a.invalid, label = _a.label, _b = _a.max, max = _b === void 0 ? 100 : _b, _c = _a.min, min = _c === void 0 ? 0 : _c, name = _a.name, output = _a.output, readOnly = _a.readOnly, required = _a.required, _d = _a.step, step = _d === void 0 ? 1 : _d, _e = _a.vertical, vertical = _e === void 0 ? false : _e, _f = _a.verticalHeight, verticalHeight = _f === void 0 ? '200px' : _f;
            var _g = this.properties.value, value = _g === void 0 ? min : _g;
            var stateClasses = [
                disabled ? css.disabled : null,
                invalid ? css.invalid : null,
                invalid === false ? css.valid : null,
                readOnly ? css.readonly : null,
                required ? css.required : null,
                vertical ? css.vertical : null
            ];
            // custom output node
            var outputNode = output ? output(value) : value + '';
            var slider = d_1.v('div', {
                classes: this.classes(css.inputWrapper).fixed(css.inputWrapperFixed),
                styles: vertical ? { height: verticalHeight } : {}
            }, [
                d_1.v('input', {
                    classes: this.classes(css.input).fixed(css.nativeInput),
                    'aria-describedby': describedBy,
                    disabled: disabled,
                    id: this._inputId,
                    'aria-invalid': invalid ? 'true' : null,
                    max: max + '',
                    min: min + '',
                    name: name,
                    readOnly: readOnly,
                    'aria-readonly': readOnly ? 'true' : null,
                    required: required,
                    step: step + '',
                    styles: vertical ? { width: verticalHeight } : {},
                    type: 'range',
                    value: value + '',
                    onblur: this._onBlur,
                    onchange: this._onChange,
                    onclick: this._onClick,
                    onfocus: this._onFocus,
                    oninput: this._onInput,
                    onkeydown: this._onKeyDown,
                    onkeypress: this._onKeyPress,
                    onkeyup: this._onKeyUp,
                    onmousedown: this._onMouseDown,
                    onmouseup: this._onMouseUp,
                    ontouchstart: this._onTouchStart,
                    ontouchend: this._onTouchEnd,
                    ontouchcancel: this._onTouchCancel
                }),
                d_1.v('div', {
                    classes: this.classes(css.track).fixed(css.trackFixed),
                    'aria-hidden': 'true',
                    styles: vertical ? { width: verticalHeight } : {}
                }, [
                    d_1.v('span', {
                        classes: this.classes(css.fill).fixed(css.fillFixed),
                        styles: { width: (value / max * 100) + '%' }
                    }),
                    d_1.v('span', {
                        classes: this.classes(css.thumb).fixed(css.thumbFixed),
                        styles: { left: (value / max * 100) + '%' }
                    })
                ]),
                d_1.v('output', {
                    classes: this.classes(css.output),
                    for: this._inputId + ''
                }, [outputNode])
            ]);
            var sliderWidget;
            if (label) {
                sliderWidget = d_1.w(Label_1.default, {
                    classes: this.classes.apply(this, [css.root].concat(stateClasses)).fixed(css.rootFixed),
                    formId: formId,
                    label: label
                }, [slider]);
            }
            else {
                sliderWidget = d_1.v('div', {
                    classes: this.classes.apply(this, [css.root].concat(stateClasses)).fixed(css.rootFixed)
                }, [slider]);
            }
            return sliderWidget;
        };
        return Slider;
    }(exports.SliderBase));
    Slider = __decorate([
        Themeable_1.theme(css)
    ], Slider);
    exports.default = Slider;
});
//# sourceMappingURL=Slider.js.map