import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { DNode } from '@dojo/widget-core/interfaces';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
/**
 * Label settings for form label text content, position (before or after), and visibility
 */
export interface LabelOptions {
    content: string;
    before?: boolean;
    hidden?: boolean;
}
/**
 * @type LabelWidgetProperties
 *
 * Properties that can be set on a Label component
 *
 * @property forId     ID to explicitly associate the label with an input element
 * @property label      Label settings for form label text, position, and visibility
 */
export interface LabelProperties extends ThemeableProperties {
    forId?: string;
    label: string | LabelOptions;
}
/**
 * This is a helper function for using `extraClasses` with Label.
 * It can be used as follows:
 * extraClasses: { root: parseLabelClasses(this.classes(css.class1, css.class2).get()) }
 */
export declare function parseLabelClasses(classes: {
    [key: string]: boolean | undefined | null;
}): string;
export declare const LabelBase: (new (...args: any[]) => ThemeableMixin<{}>) & typeof WidgetBase;
export default class Label extends LabelBase<LabelProperties> {
    render(): DNode;
}
