import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { DNode } from '@dojo/widget-core/interfaces';
import { ThemeableMixin, ThemeableProperties, ClassesFunctionChain } from '@dojo/widget-core/mixins/Themeable';
import { RegistryMixin } from '@dojo/widget-core/mixins/Registry';
import { WidgetRegistry } from '@dojo/widget-core/WidgetRegistry';
/**
 * Label settings for form label text content, position (before or after), and visibility
 */
export interface LabelOptions {
    content: string;
    before?: boolean;
    hidden?: boolean;
}
/**
 * @type LabelWidgetProperties
 *
 * Properties that can be set on a Label component
 *
 * @property classes    Optional classes to be set on the label node
 * @property formId     ID of a form element associated with the form field
 * @property label      Label settings for form label text, position, and visibility
 */
export interface LabelProperties extends ThemeableProperties {
    registry?: WidgetRegistry;
    classes?: ClassesFunctionChain;
    formId?: string;
    label: string | LabelOptions;
}
export declare const LabelBase: typeof WidgetBase & (new (...args: any[]) => ThemeableMixin) & (new (...args: any[]) => RegistryMixin);
export default class Label extends LabelBase<LabelProperties> {
    render(): DNode;
}
