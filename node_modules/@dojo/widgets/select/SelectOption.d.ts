import { WidgetBase } from '@dojo/widget-core/WidgetBase';
import { DNode } from '@dojo/widget-core/interfaces';
import { ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';
/**
 * @type OptionData
 * Settings passed down to the Option
 *
 * @property disabled     Toggle disabled status of the individual option
 * @property id           Optional custom id
 * @property label        Text to display to the user
 * @property selected     Toggle selected/deselected state for multiselect widgets
 * @property value        Option value
 */
export interface OptionData {
    disabled?: boolean;
    id?: string;
    label: string;
    selected?: boolean;
    value: string;
}
/**
 * @type SelectOptionProperties
 *
 * Properties that can be set on a Select component
 *
 * @property focused      Whether this is the currently focused option
 * @property index        Position of this option in list of options
 * @property optionData   Settings for this option
 * @property onMouseDown  Called on the mouse down event for this option
 * @property onClick      Called on the click event for this option
 */
export interface SelectOptionProperties extends ThemeableProperties {
    focused?: boolean;
    index: number;
    optionData: OptionData;
    onMouseDown?(): void;
    onClick?(event: MouseEvent, index: number): void;
}
export declare const SelectOptionBase: (new (...args: any[]) => ThemeableMixin<{}>) & typeof WidgetBase;
export default class SelectOption extends SelectOptionBase<SelectOptionProperties> {
    private _onMouseDown();
    private _onClick(event);
    renderLabel(): DNode;
    render(): DNode;
}
