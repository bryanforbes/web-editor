{"version":3,"file":"Headers.js","sourceRoot":"","sources":["Headers.ts"],"names":[],"mappings":"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","sourcesContent":["import { Headers as HeadersInterface } from './interfaces';\nimport { IterableIterator, forOf, ShimIterator } from '@dojo/shim/iterator';\nimport Map from '@dojo/shim/Map';\n\nfunction isHeadersLike(object: any): object is HeadersInterface {\n\treturn typeof object.append === 'function' && typeof object.entries === 'function' && typeof object[Symbol.iterator] === 'function';\n}\n\nexport default class Headers implements HeadersInterface {\n\tprotected map = new Map<string, string[]>();\n\n\tconstructor(headers?: { [key: string]: string } | HeadersInterface) {\n\t\tif (headers) {\n\t\t\tif (headers instanceof Headers) {\n\t\t\t\tthis.map = new Map(headers.map);\n\t\t\t}\n\t\t\telse if (isHeadersLike(headers)) {\n\t\t\t\tforOf(headers, ([key, value]) => {\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (let key in headers) {\n\t\t\t\t\tthis.set(key, headers[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tappend(name: string, value: string) {\n\t\tconst values = this.map.get(name.toLowerCase());\n\n\t\tif (values) {\n\t\t\tvalues.push(value);\n\t\t}\n\t\telse {\n\t\t\tthis.set(name, value);\n\t\t}\n\t}\n\n\tdelete(name: string) {\n\t\tthis.map.delete(name.toLowerCase());\n\t}\n\n\tentries(): IterableIterator<[string, string]> {\n\t\tconst entries: [string, string][] = [];\n\t\tforOf(this.map.entries(), ([key, values]) => {\n\t\t\tvalues.forEach(value => {\n\t\t\t\tentries.push([key, value]);\n\t\t\t});\n\t\t});\n\t\treturn new ShimIterator(entries);\n\t}\n\n\tget(name: string): string | null {\n\t\tconst values = this.map.get(name.toLowerCase());\n\n\t\tif (values) {\n\t\t\treturn values[0];\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tgetAll(name: string): string[] {\n\t\tconst values = this.map.get(name.toLowerCase());\n\n\t\tif (values) {\n\t\t\treturn values.slice(0);\n\t\t}\n\t\telse {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\thas(name: string): boolean {\n\t\treturn this.map.has(name.toLowerCase());\n\t}\n\n\tkeys(): IterableIterator<string> {\n\t\treturn this.map.keys();\n\t}\n\n\tset(name: string, value: string) {\n\t\tthis.map.set(name.toLowerCase(), [ value ]);\n\t}\n\n\tvalues(): IterableIterator<string> {\n\t\tconst values: string[] = [];\n\t\tforOf(this.map.values(), value => {\n\t\t\tvalues.push(...value);\n\t\t});\n\t\treturn new ShimIterator(values);\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.entries();\n\t}\n}\n"]}