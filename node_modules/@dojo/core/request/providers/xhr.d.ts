import Task from '../../async/Task';
import Headers from '../Headers';
import { RequestOptions } from '../interfaces';
import Response from '../Response';
/**
 * Request options specific to an XHR request
 */
export interface XhrRequestOptions extends RequestOptions {
    blockMainThread?: boolean;
}
/**
 * Wraps an XHR request in a response that mimics the fetch API
 */
export declare class XhrResponse extends Response {
    readonly headers: Headers;
    readonly ok: boolean;
    readonly status: number;
    readonly statusText: string;
    readonly bodyUsed: boolean;
    readonly nativeResponse: XMLHttpRequest;
    readonly requestOptions: XhrRequestOptions;
    readonly url: string;
    constructor(request: XMLHttpRequest);
    arrayBuffer(): Task<ArrayBuffer>;
    blob(): Task<Blob>;
    formData(): Task<FormData>;
    text(): Task<string>;
    xml(): Task<Document>;
}
export default function xhr(url: string, options?: XhrRequestOptions): Task<Response>;
