(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../UrlSearchParams", "@dojo/shim/iterator"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var UrlSearchParams_1 = require("../UrlSearchParams");
    var iterator_1 = require("@dojo/shim/iterator");
    /**
     * Returns a URL formatted with optional query string and cache-busting segments.
     *
     * @param url The base URL.
     * @param options The RequestOptions used to generate the query string or cacheBust.
     */
    function generateRequestUrl(url, _a) {
        var _b = _a === void 0 ? {} : _a, query = _b.query, cacheBust = _b.cacheBust;
        query = new UrlSearchParams_1.default(query).toString();
        if (cacheBust) {
            var bustString = String(Date.now());
            query += query ? "&" + bustString : bustString;
        }
        var separator = url.indexOf('?') > -1 ? '&' : '?';
        return query ? "" + url + separator + query : url;
    }
    exports.generateRequestUrl = generateRequestUrl;
    function getStringFromFormData(formData) {
        var fields = [];
        iterator_1.forOf(formData.keys(), function (key) {
            fields.push(encodeURIComponent(key) + '=' + encodeURIComponent(formData.get(key)));
        });
        return fields.join('&');
    }
    exports.getStringFromFormData = getStringFromFormData;
});
//# sourceMappingURL=util.js.map