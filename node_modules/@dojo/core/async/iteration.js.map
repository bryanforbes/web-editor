{"version":3,"file":"iteration.js","sourceRoot":"","sources":["iteration.ts"],"names":[],"mappings":"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","sourcesContent":["import * as array from '@dojo/shim/array';\nimport { isArrayLike, Iterable } from '@dojo/shim/iterator';\nimport Promise from '@dojo/shim/Promise';\nimport { Thenable } from '@dojo/shim/interfaces';\n\ntype ValuesAndResults<T, U> = { values: T[] | undefined; results: U[] | undefined; };\n\n/**\n * Processes all items and then applies the callback to each item and eventually returns an object containing the\n * processed values and callback results\n * @param items a list of synchronous/asynchronous values to process\n * @param callback a callback that maps values to synchronous/asynchronous results\n * @return a list of objects holding the synchronous values and synchronous results.\n */\nfunction processValuesAndCallback<T, U>(items: Iterable<T | Promise<T>> | (T | Thenable<T>)[], callback: Mapper<T, U>): Promise<ValuesAndResults<T, U>> {\n\treturn Promise.all<T>(items)\n\t\t.then(function (results) {\n\t\t\tlet pass: (U | Promise<U>)[] = Array.prototype.map.call(results, callback);\n\t\t\treturn Promise.all<U>(pass)\n\t\t\t\t.then<ValuesAndResults<T, U>>(function (pass) {\n\t\t\t\t\treturn { values: results, results: pass };\n\t\t\t\t});\n\t\t});\n}\n\n/**\n * Finds the index of the next value in a sparse array-like object\n * @param list the sparse array-like object\n * @param offset the starting offset\n * @return {number} the offset of the next index with a value; or -1 if not found\n */\nfunction findNextValueIndex<T>(list: ArrayLike<T>, offset: number = -1): number {\n\toffset++;\n\tfor (let length = list.length; offset < length; offset++) {\n\t\tif (offset in list) {\n\t\t\treturn offset;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction findLastValueIndex<T>(list: ArrayLike<T>, offset?: number): number {\n\toffset = (offset === undefined ? list.length : offset) - 1;\n\tfor (; offset >= 0; offset--) {\n\t\tif (offset in list) {\n\t\t\treturn offset;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction generalReduce<T, U>(findNextIndex: (list: ArrayLike<any> | undefined, offset?: number) => number, items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Reducer<T, U>, initialValue?: U): Promise<U> {\n\tconst hasInitialValue = arguments.length > 3;\n\treturn Promise.all<T>(items)\n\t\t.then(function (results) {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t// As iterators do not have indices like `ArrayLike` objects, the results array\n\t\t\t\t// is used to determine the next value.\n\t\t\t\tconst list = isArrayLike(items) ? items : results;\n\t\t\t\tlet i: number;\n\t\t\t\tfunction next(currentValue: U | undefined): void {\n\t\t\t\t\ti = findNextIndex(list, i);\n\t\t\t\t\tif (i >= 0) {\n\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\tif (currentValue) {\n\t\t\t\t\t\t\t\tconst result = callback(currentValue, results[i], i, results);\n\n\t\t\t\t\t\t\t\tif ( (<Thenable<U>> result).then) {\n\t\t\t\t\t\t\t\t\t(<Thenable<U>> result).then(next, reject);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tnext(<U> result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(currentValue);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet value: U | undefined;\n\t\t\t\tif (hasInitialValue) {\n\t\t\t\t\tvalue = initialValue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ti = findNextIndex(list);\n\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\tthrow new Error('reduce array with no initial value');\n\t\t\t\t\t}\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tvalue = <any> results[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnext(value);\n\t\t\t});\n\t\t});\n}\n\nfunction testAndHaltOnCondition<T>(condition: boolean, items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Filterer<T>): Promise<boolean> {\n\treturn Promise.all<T>(items).then(function (results) {\n\t\treturn new Promise<boolean>(function(resolve) {\n\t\t\tlet result: (boolean | Thenable<boolean>);\n\t\t\tlet pendingCount = 0;\n\t\t\tif (results) {\n\t\t\t\tfor (let i = 0; i < results.length; i++) {\n\t\t\t\t\tresult = callback(results[i], i, results);\n\t\t\t\t\tif (result === condition) {\n\t\t\t\t\t\treturn resolve(result);\n\t\t\t\t\t}\n\t\t\t\t\telse if ((<Thenable<boolean>> result).then) {\n\t\t\t\t\t\tpendingCount++;\n\t\t\t\t\t\t(<Thenable<boolean>> result).then(function (result) {\n\t\t\t\t\t\t\tif (result === condition) {\n\t\t\t\t\t\t\t\tresolve(result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpendingCount--;\n\t\t\t\t\t\t\tif (pendingCount === 0) {\n\t\t\t\t\t\t\t\tresolve(!condition);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pendingCount === 0) {\n\t\t\t\tresolve(!condition);\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Test whether all elements in the array pass the provided callback\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous test\n * @return eventually returns true if all values pass; otherwise false\n */\nexport function every<T>(items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Filterer<T>): Promise<boolean> {\n\treturn testAndHaltOnCondition(false, items, callback);\n}\n\n/**\n * Returns an array of elements which pass the provided callback\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous test\n * @return eventually returns a new array with only values that have passed\n */\nexport function filter<T>(items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Filterer<T>): Promise<T[]> {\n\treturn processValuesAndCallback(items, callback).then<T[]>(function (result) {\n\t\tlet arr: T[] = [];\n\t\tif (result && result.results && result.values) {\n\t\t\tfor (let i = 0; i < result.results.length; i++) {\n\t\t\t\tresult.results[i] && arr.push(result.values[i]);\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t});\n}\n\n/**\n * Find the first value matching a filter function\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous test\n * @return a promise eventually containing the item or undefined if a match is not found\n */\nexport function find<T>(items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Filterer<T>): Promise<T> {\n\tconst list: (T | Thenable<T>)[] = isArrayLike(items) ? items : <(T | Thenable<T>)[]> array.from(items);\n\treturn findIndex<T>(list, callback).then(function (i?: number): T | Thenable<T> | undefined {\n\t\treturn i !== undefined && i >= 0 ? list[i] : undefined;\n\t});\n}\n\n/**\n * Find the first index with a value matching the filter function\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous test\n * @return a promise eventually containing the index of the matching item or -1 if a match is not found\n */\nexport function findIndex<T>(items: Iterable<T | Promise<T>> | (T | Thenable<T>)[], callback: Filterer<T>): Promise<number> {\n\t// TODO we can improve this by returning immediately\n\treturn processValuesAndCallback(items, callback).then<number>(function (result: ValuesAndResults<T, boolean>) {\n\t\tif (result && result.results) {\n\t\t\tfor (let i = 0; i < result.results.length; i++) {\n\t\t\t\tif (result.results[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t});\n}\n\n/**\n * transform a list of items using a mapper function\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous transform function\n * @return a promise eventually containing a collection of each transformed value\n */\nexport function map<T, U>(items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Mapper<T, U>): Promise<U[]> {\n\treturn processValuesAndCallback<T, U>(items, callback)\n\t\t\t.then<U | U[] | null>(function (result) {\n\t\t\t\treturn result ? result.results : null;\n\t\t\t});\n}\n\n/**\n * reduce a list of items down to a single value\n * @param items a collection of synchronous/asynchronous values\n * @param callback a synchronous/asynchronous reducer function\n * @param [initialValue] the first value to pass to the callback\n * @return a promise eventually containing a value that is the result of the reduction\n */\nexport function reduce<T, U>(this: any, items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Reducer<T, U>, initialValue?: U): Promise<U> {\n\tlet args: any[] = <any[]> array.from(arguments);\n\targs.unshift(findNextValueIndex);\n\treturn generalReduce.apply(this, args);\n}\n\nexport function reduceRight<T, U>(this: any, items: Iterable<T | Promise<T>> | (T | Promise<T>)[], callback: Reducer<T, U>, initialValue?: U): Promise<U> {\n\tlet args: any[] = <any[]> array.from(arguments);\n\targs.unshift(findLastValueIndex);\n\treturn generalReduce.apply(this, args);\n}\n\nexport function series<T, U>(items: Iterable<T | Promise<T>> | (T | Promise<T>)[], operation: Mapper<T, U>): Promise<U[]> {\n\treturn generalReduce(findNextValueIndex, items, function (previousValue: (Thenable<U> | U)[], currentValue: T, index: number, array: T[]) {\n\t\tconst result = operation(currentValue, index, array);\n\n\t\tif ((<Thenable<U>> result).then) {\n\t\t\treturn (<Thenable<U>> result).then(function (value: U) {\n\t\t\t\tpreviousValue.push(value);\n\t\t\t\treturn previousValue;\n\t\t\t});\n\t\t}\n\n\t\tpreviousValue.push(result);\n\t\treturn previousValue;\n\t}, []);\n}\n\nexport function some<T>(items: Iterable<T | Promise<T>> | Array<T | Promise<T>>, callback: Filterer<T>): Promise<boolean> {\n\treturn testAndHaltOnCondition<T>(true, items, callback);\n}\n\nexport interface Filterer<T> extends Mapper<T, boolean> {}\n\nexport interface Mapper<T, U> {\n\t(value: T, index: number, array: T[]): (U | Thenable<U>);\n}\n\nexport interface Reducer<T, U> {\n\t(previousValue: U, currentValue: T, index: number, array: T[]): (U | Thenable<U>);\n}\n"]}