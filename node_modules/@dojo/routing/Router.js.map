{"version":3,"file":"Router.js","sourceRoot":"","sources":["Router.ts"],"names":[],"mappings":"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","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport Evented, { BaseEventedEvents } from '@dojo/core/Evented';\nimport { Hash } from '@dojo/core/interfaces';\nimport { pausable, PausableHandle } from '@dojo/core/on';\nimport UrlSearchParams from '@dojo/core/UrlSearchParams';\nimport { EventedOptions, EventedListener } from '@dojo/interfaces/bases';\nimport { EventTargettedObject, EventErrorObject, Handle } from '@dojo/interfaces/core';\nimport { includes } from '@dojo/shim/array';\nimport { Thenable } from '@dojo/shim/interfaces';\nimport Promise from '@dojo/shim/Promise';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { History, HistoryChangeEvent } from './history/interfaces';\nimport { Context, Parameters, Request } from './interfaces';\nimport { isNamedSegment, parse as parsePath } from './lib/path';\n\nimport { Route, SearchParams, Selection } from './Route';\n\n/**\n * An object to resume or cancel router dispatch.\n */\nexport interface DispatchDeferral {\n\t/**\n\t * Call to prevent a path from being dispatched.\n\t */\n\tcancel(): void;\n\n\t/**\n\t * Call to resume a path being dispatched.\n\t */\n\tresume(): void;\n}\n\n/**\n * Event object that is emitted for the 'navstart' event.\n */\nexport interface NavigationStartEvent extends EventTargettedObject<Router<Context>> {\n\t/**\n\t * The path that has been navigated to.\n\t */\n\tpath: string;\n\n\t/**\n\t * Call to prevent the path to be dispatched.\n\t */\n\tcancel(): void;\n\n\t/**\n\t * Call to defer dispatching of the path\n\t * @return an object which allows the caller to resume or cancel dispatch.\n\t */\n\tdefer(): DispatchDeferral;\n}\n\n/**\n * Event object that is emitted for the 'error' event.\n */\nexport interface ErrorEvent<C extends Context> extends EventErrorObject<Router<C>> {\n\t/**\n\t * The context that was being dispatched when the error occurred.\n\t */\n\tcontext: C;\n\n\t/**\n\t * The path that was being dispatched when the error occurred.\n\t */\n\tpath: string;\n}\n\n/**\n * Describes the result of a dispatch.\n */\nexport interface DispatchResult {\n\t/**\n\t * Whether a route requested a redirect to a different path.\n\t */\n\tredirect?: string;\n\n\t/**\n\t * False if dispatch was canceled (via the navstart event) or if no routes could be selected. True otherwise.\n\t */\n\tsuccess: boolean;\n}\n\nexport type LinkParams = Hash<string | string[] | undefined>;\n\nexport interface RouterEvents<C extends Context> extends BaseEventedEvents {\n\t/**\n\t * Event emitted when dispatch is called, but before routes are selected.\n\t */\n\t(type: 'navstart', listener: EventedListener<Router<C>, NavigationStartEvent>): Handle;\n\n\t/**\n\t * Event emitted when errors occur during dispatch.\n\t *\n\t * Certain errors may reject the task returned when dispatching, but this task is not always accessible and may\n\t * hide errors if it's canceled.\n\t */\n\t(type: 'error', listener: EventedListener<Router<C>, ErrorEvent<C>>): Handle;\n}\n\n/**\n * The options for the router.\n */\nexport interface RouterOptions<C extends Context> extends EventedOptions {\n\t/**\n\t * A Context object to be used for all requests, or a function that provides such an object, called for each\n\t * dispatch.\n\t */\n\tcontext?: C | (() => C);\n\n\t/**\n\t * A handler called when no routes match the dispatch path.\n\t * @param request An object whose `context` property contains the dispatch context. No extracted parameters\n\t *   are available.\n\t */\n\tfallback?: (request: Request<C, Parameters>) => void | Thenable<any>;\n\n\t/**\n\t * The history manager. Routes will be dispatched in response to change events emitted by the manager.\n\t */\n\thistory?: History;\n}\n\n/**\n * The options for the router's start() method.\n */\nexport interface StartOptions {\n\t/**\n\t * Whether to immediately dispatch with the history's current value.\n\t */\n\tdispatchCurrent: boolean;\n}\n\nconst parentMap = new WeakMap<Route<Context, Parameters>, Router<Context>>();\n\n/**\n * Whether the route has been appended to another route or router.\n */\nexport function hasBeenAppended(route: Route<Context, Parameters>): boolean {\n\treturn parentMap.has(route) || route.parent !== undefined;\n}\n\n/**\n * Finds the router whose route hierarchy the route has been appended to.\n *\n * Throws if the route was not appended to any router.\n */\nexport function findRouter(route: Route<Context, Parameters>): Router<Context> {\n\twhile (route.parent) {\n\t\troute = route.parent;\n\t}\n\n\tconst router = parentMap.get(route);\n\tif (!router) {\n\t\tthrow new Error('Cannot generate link for route that is not in the hierarchy');\n\t}\n\telse {\n\t\treturn router;\n\t}\n}\n\n// istanbul ignore next\nconst noop = () => {\n};\n\nfunction createDeferral() {\n\t// Use noop since TypeScript doesn't know we're assigning cancel and resume in the promise executor.\n\tlet cancel: () => void = noop;\n\tlet resume: () => void = noop;\n\tconst promise = new Promise<void>((resolve, reject) => {\n\t\tcancel = reject;\n\t\t// Wrap resolve to avoid resume being called with a thenable if type checking is not used.\n\t\tresume = () => resolve();\n\t});\n\treturn { cancel, promise, resume };\n}\n\nfunction reportError(router: Router<Context>, context: Context, path: string, error: any) {\n\trouter.emit<ErrorEvent<Context>>({\n\t\tcontext,\n\t\terror,\n\t\tpath,\n\t\ttarget: router,\n\t\ttype: 'error'\n\t});\n}\n\nfunction catchRejection(router: Router<Context>, context: Context, path: string, thenable: void | Thenable<any>) {\n\tif (thenable) {\n\t\tPromise.resolve(thenable).catch((error) => {\n\t\t\treportError(router, context, path, error);\n\t\t});\n\t}\n}\n\nexport class Router<C extends Context> extends Evented {\n\tprivate _contextFactory: () => Context;\n\tprivate _currentSelection: Selection[];\n\tprivate _dispatchFromStart: boolean;\n\tprivate _fallback?: (request: Request<Context, Parameters>) => void | Thenable<any>;\n\tprivate _history?: History;\n\tprivate _routes: Route<Context, Parameters>[];\n\tprivate _started?: boolean;\n\n\ton: RouterEvents<C>;\n\n\tconstructor(options: RouterOptions<C> = { }) {\n\t\tconst { context, fallback, history } = options;\n\n\t\tsuper({});\n\n\t\tlet contextFactory: () => C;\n\t\tif (typeof context === 'function') {\n\t\t\tcontextFactory = context;\n\t\t}\n\t\telse if (typeof context === 'undefined') {\n\t\t\tcontextFactory = () => {\n\t\t\t\treturn {} as C;\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Assign to a constant since the context variable may be changed after the function is defined,\n\t\t\t// which would violate its typing.\n\t\t\tconst sharedContext = context;\n\t\t\tcontextFactory = () => sharedContext;\n\t\t}\n\n\t\tif (history) {\n\t\t\tthis.own(history);\n\t\t}\n\n\t\tthis._contextFactory = contextFactory;\n\t\tthis._currentSelection = [];\n\t\tthis._dispatchFromStart = false;\n\t\tthis._fallback = fallback;\n\t\tthis._history = history;\n\t\tthis._routes = [];\n\t\tthis._started = false;\n\t}\n\n\tappend(add: Route<Context, Parameters> | Route<Context, Parameters>[]) {\n\t\tconst append = (route: Route<Context, Parameters>) => {\n\t\t\tif (hasBeenAppended(route)) {\n\t\t\t\tthrow new Error('Cannot append route that has already been appended');\n\t\t\t}\n\n\t\t\tthis._routes.push(route);\n\t\t\tparentMap.set(route, this);\n\t\t};\n\n\t\tif (Array.isArray(add)) {\n\t\t\tfor (const route of add) {\n\t\t\t\tappend(route);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tappend(add);\n\t\t}\n\t}\n\n\tdispatch(context: Context, path: string): Task<DispatchResult> {\n\t\t// Reset, any further calls can't have come from start(). This is necessary since the navstart listeners\n\t\t// may call dispatch() themselves.\n\t\tlet dispatchFromStart = this._dispatchFromStart;\n\t\tthis._dispatchFromStart = false;\n\n\t\tlet canceled = false;\n\t\tconst cancel = () => {\n\t\t\tcanceled = true;\n\t\t};\n\n\t\tconst deferrals: Promise<void>[] = [];\n\n\t\tthis.emit<NavigationStartEvent>({\n\t\t\tcancel,\n\t\t\tdefer () {\n\t\t\t\tconst { cancel, promise, resume } = createDeferral();\n\t\t\t\tdeferrals.push(promise);\n\t\t\t\treturn { cancel, resume };\n\t\t\t},\n\t\t\tpath,\n\t\t\ttarget: this,\n\t\t\ttype: 'navstart'\n\t\t});\n\n\t\t// Synchronous cancelation.\n\t\tif (canceled) {\n\t\t\treturn Task.resolve({ success: false });\n\t\t}\n\n\t\tconst { searchParams, segments, trailingSlash } = parsePath(path);\n\t\treturn new Task<DispatchResult>((resolve, reject) => {\n\t\t\t// *Always* start dispatching in a future turn, even if there were no deferrals.\n\t\t\tPromise.all(deferrals).then<DispatchResult>(\n\t\t\t\t() => {\n\t\t\t\t\t// The cancel() function used in the NavigationStartEvent is reused as the Task canceler.\n\t\t\t\t\t// Strictly speaking any navstart listener can cancel the dispatch asynchronously, as long as it\n\t\t\t\t\t// manages to do so before this turn.\n\t\t\t\t\tif (canceled) {\n\t\t\t\t\t\treturn { success: false };\n\t\t\t\t\t}\n\n\t\t\t\t\tlet redirect: undefined | string;\n\t\t\t\t\tconst dispatched = this._routes.some((route) => {\n\t\t\t\t\t\tconst result = route.select(context, segments, trailingSlash, searchParams);\n\n\t\t\t\t\t\tif (typeof result === 'string') {\n\t\t\t\t\t\t\tredirect = result;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (result.length === 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Update the selected routes after selecting new routes, but before invoking the handlers.\n\t\t\t\t\t\t// This means the original value is available to guard() and params() functions, and the\n\t\t\t\t\t\t// new value when the newly selected routes are executed.\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// Reset selected routes if not dispatched from start().\n\t\t\t\t\t\tthis._currentSelection = dispatchFromStart ? result : [];\n\n\t\t\t\t\t\tfor (const { handler, params } of result) {\n\t\t\t\t\t\t\tcatchRejection(this, context, path, handler({ context, params }));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\n\t\t\t\t\t// Reset the selected routes if the dispatch was unsuccessful, or if a redirect was requested.\n\t\t\t\t\tif (!dispatched || redirect !== undefined) {\n\t\t\t\t\t\tthis._currentSelection = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!dispatched && this._fallback) {\n\t\t\t\t\t\tcatchRejection(this, context, path, this._fallback({ context, params: {} }));\n\t\t\t\t\t\treturn { success: false };\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result: DispatchResult = { success: dispatched };\n\t\t\t\t\tif (redirect !== undefined) {\n\t\t\t\t\t\tresult.redirect = redirect;\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t},\n\t\t\t\t// When deferrals are canceled their corresponding promise is rejected. Ensure the task resolves\n\t\t\t\t// with `false` instead of being rejected too.\n\t\t\t\t() => {\n\t\t\t\t\treturn { success: false };\n\t\t\t\t}\n\t\t\t).then(resolve, (error) => {\n\t\t\t\treportError(this, context, path, error);\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}, cancel);\n\t}\n\n\tlink(route: Route<Context, Parameters>, params: LinkParams = {}): string {\n\t\tconst hierarchy = [ route ];\n\t\tfor (let parent = route.parent; parent !== undefined; parent = parent.parent) {\n\t\t\thierarchy.unshift(parent);\n\t\t}\n\n\t\tif (!includes(this._routes, hierarchy[ 0 ])) {\n\t\t\tthrow new Error('Cannot generate link for route that is not in the hierarchy');\n\t\t}\n\n\t\tconst { leadingSlash: addLeadingSlash } = hierarchy[ 0 ].path;\n\t\tlet addTrailingSlash = false;\n\t\tconst segments: string[] = [];\n\t\tconst searchParams = new UrlSearchParams();\n\n\t\thierarchy\n\t\t\t.map((route, index) => {\n\t\t\t\tconst { path } = route;\n\t\t\t\tlet currentPathValues: string[] | undefined;\n\t\t\t\tlet currentSearchParams: SearchParams | undefined;\n\n\t\t\t\tconst selection = this._currentSelection[ index ];\n\t\t\t\tif (selection && selection.route === route) {\n\t\t\t\t\tcurrentPathValues = selection.rawPathValues;\n\t\t\t\t\tcurrentSearchParams = selection.rawSearchParams;\n\t\t\t\t}\n\n\t\t\t\treturn { currentPathValues, currentSearchParams, path };\n\t\t\t})\n\t\t\t.forEach(({ currentPathValues, currentSearchParams, path }) => {\n\t\t\t\tconst { expectedSegments, searchParameters, trailingSlash } = path;\n\t\t\t\taddTrailingSlash = trailingSlash;\n\n\t\t\t\tlet namedOffset = 0;\n\t\t\t\tfor (const segment of expectedSegments) {\n\t\t\t\t\tif (isNamedSegment(segment)) {\n\t\t\t\t\t\tconst value = params[ segment.name ];\n\t\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\t\tsegments.push(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (Array.isArray(value)) {\n\t\t\t\t\t\t\tif (value.length === 1) {\n\t\t\t\t\t\t\t\tsegments.push(value[ 0 ]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthrow new TypeError(`Cannot generate link, multiple values for parameter '${segment.name}'`);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (currentPathValues) {\n\t\t\t\t\t\t\tsegments.push(currentPathValues[ namedOffset ]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthrow new Error(`Cannot generate link, missing parameter '${segment.name}'`);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnamedOffset++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsegments.push(segment.literal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (const key of searchParameters) {\n\t\t\t\t\t// Don't repeat the search parameter if a previous route in the hierarchy has already appended\n\t\t\t\t\t// it.\n\t\t\t\t\tif (searchParams.has(key)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst value = params[ key ];\n\t\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\t\tsearchParams.append(key, value);\n\t\t\t\t\t}\n\t\t\t\t\telse if (Array.isArray(value)) {\n\t\t\t\t\t\tfor (const item of value) {\n\t\t\t\t\t\t\tsearchParams.append(key, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (currentSearchParams) {\n\t\t\t\t\t\tfor (const item of currentSearchParams[ key ]) {\n\t\t\t\t\t\t\tsearchParams.append(key, item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new Error(`Cannot generate link, missing search parameter '${key}'`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\tlet pathname = segments.join('/');\n\t\tif (addLeadingSlash) {\n\t\t\tpathname = '/' + pathname;\n\t\t}\n\t\tif (addTrailingSlash) {\n\t\t\tpathname += '/';\n\t\t}\n\n\t\tif (this._history) {\n\t\t\tpathname = this._history!.prefix(pathname);\n\t\t}\n\n\t\tconst search = searchParams.toString();\n\t\tconst path = search ? `${pathname}?${search}` : pathname;\n\n\t\treturn path;\n\t}\n\n\treplacePath(path: string) {\n\t\tif (!this._history) {\n\t\t\tthrow new Error('Cannot replace path, router was created without a history manager');\n\t\t}\n\n\t\tthis._history.replace(path);\n\t}\n\n\tsetPath(path: string) {\n\t\tif (!this._history) {\n\t\t\tthrow new Error('Cannot set path, router was created without a history manager');\n\t\t}\n\n\t\tthis._history.set(path);\n\t}\n\n\tstart(startOptions: StartOptions = { dispatchCurrent : true }): PausableHandle {\n\t\tconst { dispatchCurrent } = startOptions;\n\n\t\tif (this._started) {\n\t\t\tthrow new Error('start can only be called once');\n\t\t}\n\n\t\tthis._started = true;\n\n\t\tif (!this._history) {\n\t\t\treturn {\n\t\t\t\tpause() {\n\t\t\t\t},\n\t\t\t\tresume() {\n\t\t\t\t},\n\t\t\t\tdestroy() {\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tlet lastDispatch: Task<DispatchResult>;\n\t\tlet redirectCount = 0;\n\t\tlet redirecting = false;\n\n\t\tconst dispatch = (path: string) => {\n\t\t\tif (lastDispatch) {\n\t\t\t\tlastDispatch.cancel();\n\t\t\t}\n\n\t\t\t// Reset redirect count if the dispatch was triggered by a non-redirect history change. This allows\n\t\t\t// a route's exec / fallback / index handler to change the history, setting off a new flurry of\n\t\t\t// redirects, without being encumbered by the number of redirects that led to that route being selected.\n\t\t\tif (!redirecting) {\n\t\t\t\tredirectCount = 0;\n\t\t\t}\n\n\t\t\t// Signal to dispatch() that it was called from here.\n\t\t\tthis._dispatchFromStart = true;\n\n\t\t\tconst context = this._contextFactory();\n\t\t\tlastDispatch = this.dispatch(context, path).then((dispatchResult) => {\n\t\t\t\tconst { success, redirect = undefined } = dispatchResult || { success: false };\n\t\t\t\tif (success && redirect !== undefined) {\n\t\t\t\t\tredirectCount++;\n\t\t\t\t\tif (redirectCount > 20) {\n\t\t\t\t\t\tconst error = new Error('More than 20 redirects, giving up');\n\t\t\t\t\t\treportError(this, context, path, error);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\tredirecting = true;\n\t\t\t\t\t// The history manager MUST emit the change event synchronously.\n\t\t\t\t\tthis._history!.replace(redirect);\n\t\t\t\t\tredirecting = false;\n\t\t\t\t}\n\t\t\t\treturn dispatchResult;\n\t\t\t});\n\t\t};\n\n\t\tconst listener = pausable(this._history, 'change', (event: HistoryChangeEvent) => {\n\t\t\tdispatch(event.value);\n\t\t});\n\t\tthis.own(listener);\n\n\t\tif (dispatchCurrent) {\n\t\t\tdispatch(this._history.current);\n\t\t}\n\n\t\treturn listener;\n\t}\n}\n\nexport default Router;\n"]}