{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["interfaces.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Routes created without a `params()` function will receive a `params` object of this type.\n */\nexport interface DefaultParameters extends Parameters {\n\t[param: string]: string;\n}\n\n/**\n * Describes the context object used when dispatching. Extend this interface for custom contexts.\n */\nexport interface Context {\n\t// TODO: Does specifiying an indexer make sense here?\n}\n\n/**\n * Describes extracted parameters.\n */\nexport interface Parameters {\n\t// TODO: Does specifying an indexer make sense here?\n}\n\n/**\n * Describes the object passed to various route handlers.\n */\nexport interface Request<C extends Context, P extends Parameters> {\n\t/**\n\t * The dispatch context.\n\t */\n\tcontext: C;\n\n\t/**\n\t * The extracted parameters.\n\t */\n\tparams: P;\n}\n"]}