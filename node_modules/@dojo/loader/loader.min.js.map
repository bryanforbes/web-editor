{"version":3,"sources":["loader.ts"],"names":["args","forEach","array","callback","mix","target","source","deep","key","sourceValue","Array","isArray","RegExp","noop","contextRequire","dependencies","referenceModule","module","undefined","getModule","executed","EXECUTING","has","plugin","result","loadNodeModule","mid","initializeModule","cjs","setExports","injected","error","Error","injectModule","getModuleInformation","uidGenerator","deps","resolveDependencies","def","gc","guardCheckComplete","bind","executionQueue","push","checkComplete","createRequire","requireModule","require","toUrl","name","toAbsMid","runMapProgram","targetModuleId","map","i","j","length","test","compactPath","path","segment","pathSegments","replace","split","absolutePathSegments","lastSegment","shift","pop","join","updateModuleIdFromMap","moduleId","moduleMap","mapPrograms","star","mapItem","slice","getPluginInformation","match","pluginResourceId","isPluginLoaded","load","resolvePluginResourceId","req","prid","fix","packageId","pack","config","pkgs","moduleIdInPackage","main","modules","pathMapPrograms","url","location","pid","baseUrl","normalize","pluginRegEx","passedModuleMatch","mappedModuleMatch","moduleInfo","makeCommonJs","executeModule","indexOf","commonJsExportsModule","console","warn","circularTrace","concat","ABORT_EXECUTION","result_1","executedDependencies","dependency","commonJsRequireModule","exports","commonJsModuleModule","factory","apply","executedSomething","loadQ","pseudoPluginResource","pluginResource","injectPlugin","waitingCount","checkCompleteGuard","module_1","splice","onLoad","unshift","parent","cached","onLoadCallback","node","moduleDefArgs","moduleDefFactory","moduleDefinitionArguments","defineModule","cache","injectUrl","m","moduleToInitialize","initializedModule","id","uri","globalObject","window","global","self","packages","paths","shim","crossOrigin","setGlobals","hasCache","Object","create","document","element","createElement","add","now","force","listenerQueues","emit","type","queue","hasListeners","_i","_a","listener","reportModuleLoadError","details","parentMid","message","src","info","on","remove","process","versions","Packages","importScripts","configuration","computeMapProgram","value","isValueAMapReplacement","item","0","1","2","3","sort","left","right","mergeProps","bundles","packageDescriptor","keys","moduleDef","define","arguments","root","globalPath","pathComponent","init","newReturnValue","prototype","call","getElementsByTagName","script","hasAttribute","attr","getAttribute","dojoConfig","JSON","parse","e","Function","thisArg","globalObjectGlobals","_findPath","_nodeModulePaths","localModulePath","nodeRequire","vm_1","fs_1","readFile","data","loadCallback","oldModule","runInThisContext","handler","event","head","removeChild","addEventListener","charset","appendChild","inspect","eval","undef","recursive","undefDeps","mod","cacheModules","defineProperty","get","enumerable","comments","requireCall","originalFactory","module_2","originalModuleId","newModule","value_1","amd","vendor"],"mappings":"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","file":"loader.min.js","sourcesContent":["'use strict';\nimport ModuleShim = DojoLoader.ModuleShim;\nimport Module = DojoLoader.Module;\n\ndeclare const load: (module: string) => any;\ndeclare const Packages: {} | undefined;\n\n(function (args?: string[]): void {\n\tlet globalObject: any = (function (): any {\n\t\tif (typeof window !== 'undefined') {\n\t\t\t// Browsers\n\t\t\treturn window;\n\t\t}\n\t\telse if (typeof global !== 'undefined') {\n\t\t\t// Node\n\t\t\treturn global;\n\t\t}\n\t\telse if (typeof self !== 'undefined') {\n\t\t\t// Web workers\n\t\t\treturn self;\n\t\t}\n\t\treturn {};\n\t})();\n\n\tconst EXECUTING = 'executing';\n\tconst ABORT_EXECUTION: Object = {};\n\t//\n\t// loader state data\n\t//\n\n\t// hash: (mid | url)-->(function | string)\n\t//\n\t// A cache of resources. The resources arrive via a require.cache application, which takes a hash from either\n\t// mid --> function or url --> string. The function associated with mid keys causes the same code to execute as if\n\t// the module was script injected.\n\t//\n\t// Both kinds of key-value pairs are entered into cache via the function consumePendingCache, which may relocate\n\t// keys as given by any mappings *iff* the cache was received as part of a module resource request.\n\tlet cache: DojoLoader.ObjectMap = {};\n\n\tlet checkCompleteGuard = 0;\n\n\t// The configuration passed to the loader\n\tlet config: DojoLoader.Config = {\n\t\tbaseUrl: './',\n\t\tpackages: [],\n\t\tpaths: {},\n\t\tpkgs: {},\n\t\tshim: {},\n\t\tcrossOrigin: false\n\t};\n\n\t// The arguments sent to loader via AMD define().\n\tlet moduleDefinitionArguments: DojoLoader.ModuleDefinitionArguments | undefined = undefined;\n\n\t// The list of modules that need to be evaluated.\n\tlet executionQueue: DojoLoader.Module[] = [];\n\n\tlet executedSomething = false;\n\n\tlet injectUrl: (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module, parent?: DojoLoader.Module) => void;\n\n\t// array of quads as described by computeMapProg; map-key is AMD map key, map-value is AMD map value\n\tlet mapPrograms: DojoLoader.MapRoot = [];\n\n\t// A hash: (mid) --> (module-object) the module namespace\n\t//\n\t// pid: the package identifier to which the module belongs (e.g., \"dojo\"); \"\" indicates the system or default\n\t// \tpackage\n\t// mid: the fully-resolved (i.e., mappings have been applied) module identifier without the package identifier\n\t// \t(e.g., \"dojo/io/script\")\n\t// url: the URL from which the module was retrieved\n\t// pack: the package object of the package to which the module belongs\n\t// executed: false => not executed; EXECUTING => in the process of tranversing deps and running factory;\n\t// \ttrue => factory has been executed\n\t// deps: the dependency array for this module (array of modules objects)\n\t// def: the factory for this module\n\t// result: the result of the running the factory for this module\n\t// injected: true => module has been injected\n\t// load, normalize: plugin functions applicable only for plugins\n\t//\n\t// Modules go through several phases in creation:\n\t//\n\t// 1. Requested: some other module's definition or a require application contained the requested module in\n\t//    its dependency array\n\t//\n\t// 2. Injected: a script element has been appended to the insert-point element demanding the resource implied by\n\t//    the URL\n\t//\n\t// 3. Loaded: the resource injected in [2] has been evaluated.\n\t//\n\t// 4. Defined: the resource contained a define statement that advised the loader about the module.\n\t//\n\t// 5. Evaluated: the module was defined via define and the loader has evaluated the factory and computed a result.\n\tlet modules: { [ moduleId: string ]: DojoLoader.Module | undefined; } = {};\n\n\t// list of (from-path, to-path, regex, length) derived from paths;\n\t// a \"program\" to apply paths; see computeMapProg\n\tlet pathMapPrograms: DojoLoader.PathMap[] = [];\n\n\tlet setGlobals: (require: DojoLoader.RootRequire, define: DojoLoader.Define) => void;\n\n\tlet uidGenerator = 0;\n\n\t// the number of modules the loader has injected but has not seen defined\n\tlet waitingCount = 0;\n\n\tconst has: DojoLoader.Has = (function (): DojoLoader.Has {\n\t\tconst hasCache: { [ name: string ]: any; } = Object.create(null);\n\t\tconst global: Window = globalObject;\n\t\tconst document: HTMLDocument = global.document;\n\t\tconst element: HTMLDivElement = document && document.createElement('div');\n\n\t\tconst has: DojoLoader.Has = <DojoLoader.Has> function(name: string): any {\n\t\t\treturn typeof hasCache[name] === 'function' ?\n\t\t\t\t(hasCache[name] = hasCache[name](global, document, element)) : hasCache[name];\n\t\t};\n\n\t\thas.add = function (name: string, test: any, now: boolean, force: boolean): void {\n\t\t\t(!(name in hasCache) || force) && (hasCache[name] = test);\n\t\t\tnow && has(name);\n\t\t};\n\n\t\treturn has;\n\t})();\n\n\tconst requireModule: DojoLoader.RootRequire =\n\t\t<DojoLoader.RootRequire> function (dependencies: any, callback?: DojoLoader.RequireCallback): DojoLoader.Module {\n\t\t\treturn contextRequire(dependencies, callback);\n\t\t};\n\n\tconst listenerQueues: { [queue: string]: ((...args: any[]) => void)[] } = {};\n\n\tconst emit = function(type: DojoLoader.SignalType, args: {}): number | boolean {\n\t\tlet queue = listenerQueues[type];\n\t\tlet hasListeners = queue && queue.length;\n\n\t\tif (hasListeners) {\n\t\t\tfor (let listener of queue.slice(0)) {\n\t\t\t\tlistener.apply(null, Array.isArray(args) ? args : [args]);\n\t\t\t}\n\t\t}\n\n\t\treturn hasListeners;\n\t};\n\n\tconst reportModuleLoadError = function (parent: DojoLoader.Module | undefined, module: DojoLoader.Module, url: string, details?: string): void {\n\t\tconst parentMid = (parent ? ` (parent: ${parent.mid})` : '');\n\t\tconst message = `Failed to load module ${module.mid} from ${url}${parentMid}`;\n\t\tconst error = mix<DojoLoader.LoaderError>(new Error(message), {\n\t\t\tsrc: 'dojo/loader',\n\t\t\tinfo: {\n\t\t\t\tmodule,\n\t\t\t\turl,\n\t\t\t\tparentMid,\n\t\t\t\tdetails\n\t\t\t}\n\t\t});\n\n\t\tif (!emit('error', error)) { throw error; };\n\t};\n\n\tconst on = function(type: string, listener: (error: DojoLoader.LoaderError) => void): { remove: () => void } {\n\t\tlet queue = listenerQueues[type] || (listenerQueues[type] = []);\n\n\t\tqueue.push(listener);\n\n\t\treturn {\n\t\t\tremove(): void {\n\t\t\t\tqueue.splice(queue.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t};\n\n\trequireModule.has = has;\n\trequireModule.on = on;\n\n\thas.add('host-browser', typeof document !== 'undefined' && typeof location !== 'undefined');\n\thas.add('host-node', typeof process === 'object' && process.versions && process.versions.node);\n\thas.add('host-nashorn', typeof load === 'function' && typeof Packages !== 'undefined');\n\thas.add('host-web-worker', !has('host-browser') && typeof importScripts !== 'undefined');\n\thas.add('debug', true);\n\n\thas.add('loader-configurable', true);\n\thas.add('loader-config-attribute', true);\n\tif (has('loader-configurable')) {\n\t\t/**\n\t\t * Configures the loader.\n\t\t *\n\t\t * @param {{ ?baseUrl: string, ?map: Object, ?packages: Array.<({ name, ?location, ?main }|string)> }} config\n\t\t * The configuration data.\n\t\t */\n\t\trequireModule.config = function (configuration: DojoLoader.Config): void {\n\t\t\t// Make sure baseUrl ends in a slash\n\t\t\tif (configuration.baseUrl) {\n\t\t\t\tconfiguration.baseUrl = configuration.baseUrl.replace(/\\/*$/, '/');\n\t\t\t}\n\n\t\t\tconst mergeProps: DojoLoader.ObjectMap = {\n\t\t\t\tpaths: true,\n\t\t\t\tbundles: true,\n\t\t\t\tconfig: true,\n\t\t\t\tmap: true\n\t\t\t};\n\n\t\t\t// Copy configuration over to config object\n\t\t\tfor (let key in configuration) {\n\t\t\t\tconst value = (<DojoLoader.ObjectMap> configuration)[key];\n\t\t\t\tif (mergeProps[key]) {\n\t\t\t\t\tif (!(<DojoLoader.ObjectMap> config)[key]) {\n\t\t\t\t\t\t(<DojoLoader.ObjectMap> config)[key] = {};\n\t\t\t\t\t}\n\t\t\t\t\tmix((<DojoLoader.ObjectMap> config)[key], value, true);\n\t\t\t\t} else {\n\t\t\t\t\t(<DojoLoader.ObjectMap> config)[key] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// TODO: Expose all properties on req as getter/setters? Plugin modules like dojo/node being able to\n\t\t\t// retrieve baseUrl is important. baseUrl is defined as a getter currently.\n\n\t\t\tforEach(configuration.packages || [], function (packageDescriptor: DojoLoader.Package): void {\n\t\t\t\t// Allow shorthand package definition, where name and location are the same\n\t\t\t\tif (typeof packageDescriptor === 'string') {\n\t\t\t\t\tpackageDescriptor = { name: <string> packageDescriptor, location: <string> packageDescriptor };\n\t\t\t\t}\n\n\t\t\t\tif (packageDescriptor.location != null) {\n\t\t\t\t\tpackageDescriptor.location = packageDescriptor.location.replace(/\\/*$/, '/');\n\t\t\t\t}\n\n\t\t\t\tif (config && config.pkgs && packageDescriptor.name) {\n\t\t\t\t\tconfig.pkgs[packageDescriptor.name] = packageDescriptor;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction computeMapProgram(map: DojoLoader.ModuleMapItem | undefined): DojoLoader.MapItem[] {\n\t\t\t\t// This method takes a map as represented by a JavaScript object and initializes an array of\n\t\t\t\t// arrays of (map-key, map-value, regex-for-map-key, length-of-map-key), sorted decreasing by length-\n\t\t\t\t// of-map-key. The regex looks for the map-key followed by either \"/\" or end-of-string at the beginning\n\t\t\t\t// of a the search source.\n\t\t\t\t//\n\t\t\t\t// Maps look like this:\n\t\t\t\t//\n\t\t\t\t// map: { C: { D: E } }\n\t\t\t\t//    A\tB\n\t\t\t\t//\n\t\t\t\t// The computed mapping is a 4-array deep tree, where the outermost array corresponds to the source\n\t\t\t\t// mapping object A, the 2nd level arrays each correspond to one of the source mappings C -> B, the 3rd\n\t\t\t\t// level arrays correspond to each destination mapping object B, and the innermost arrays each\n\t\t\t\t// correspond to one of the destination mappings D -> E.\n\t\t\t\t//\n\t\t\t\t// So, the overall structure looks like this:\n\t\t\t\t//\n\t\t\t\t// mapPrograms = [ source mapping array, source mapping array, ... ]\n\t\t\t\t// source mapping array = [\n\t\t\t\t//     source module id,\n\t\t\t\t//     [ destination mapping array, destination mapping array, ... ],\n\t\t\t\t//     RegExp that matches on source module id,\n\t\t\t\t//     source module id length\n\t\t\t\t// ]\n\t\t\t\t// destination mapping array = [\n\t\t\t\t//     original module id,\n\t\t\t\t//     destination module id,\n\t\t\t\t//     RegExp that matches on original module id,\n\t\t\t\t//     original module id length\n\t\t\t\t// ]\n\n\t\t\t\tconst result: DojoLoader.MapItem[] = [];\n\n\t\t\t\tif (map) {\n\t\t\t\t\tfor (let moduleId in map) {\n\t\t\t\t\t\tconst value: any = (<any> map)[moduleId];\n\t\t\t\t\t\tconst isValueAMapReplacement: boolean = typeof value === 'object';\n\n\t\t\t\t\t\tconst item = <DojoLoader.MapItem> {\n\t\t\t\t\t\t\t0: moduleId,\n\t\t\t\t\t\t\t1: isValueAMapReplacement ? computeMapProgram(value) : value,\n\t\t\t\t\t\t\t2: new RegExp('^' + moduleId.replace(/[-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&') + '(?:\\/|$)'),\n\t\t\t\t\t\t\t3: moduleId.length\n\t\t\t\t\t\t};\n\t\t\t\t\t\tresult.push(item);\n\n\t\t\t\t\t\tif (isValueAMapReplacement && moduleId === '*') {\n\t\t\t\t\t\t\t(<DojoLoader.MapRoot> result).star = item[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tresult.sort(function (left: DojoLoader.MapItem, right: DojoLoader.MapItem): number {\n\t\t\t\t\treturn right[3] - left[3];\n\t\t\t\t});\n\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\t// FIXME this is a down-cast.\n\t\t\t// computeMapProgram => MapItem[] => mapPrograms: MapSource[]\n\t\t\t// MapSource[1] => MapReplacement[] is more specific than MapItems[1] => any\n\t\t\tmapPrograms = computeMapProgram(config.map);\n\n\t\t\t// Note that old paths will get destroyed if reconfigured\n\t\t\tconfiguration.paths && (pathMapPrograms = computeMapProgram(configuration.paths));\n\n\t\t\t// shim API\n\t\t\tif (config.shim) {\n\t\t\t\tObject.keys(config.shim).forEach((moduleId) => {\n\t\t\t\t\tlet moduleDef: ModuleShim = (config.shim || {})[ moduleId ];\n\n\t\t\t\t\t// using shorthand module syntax, convert to full syntax\n\t\t\t\t\tif (Array.isArray(moduleDef)) {\n\t\t\t\t\t\tmoduleDef = {\n\t\t\t\t\t\t\tdeps: <string[]> moduleDef\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tdefine(moduleId, moduleDef.deps || [], function (...dependencies) {\n\t\t\t\t\t\tlet root: any;\n\n\t\t\t\t\t\tlet globalPath = moduleDef.exports;\n\n\t\t\t\t\t\tif (globalPath) {\n\t\t\t\t\t\t\troot = globalObject;\n\n\t\t\t\t\t\t\tglobalPath.split('.').forEach((pathComponent) => {\n\t\t\t\t\t\t\t\tif (!(pathComponent in root)) {\n\t\t\t\t\t\t\t\t\tthrow new Error(`Tried to find ${globalPath} but it did not exist`);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\troot = root[ pathComponent ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (moduleDef.init) {\n\t\t\t\t\t\t\tlet newReturnValue: any = moduleDef.init(...dependencies);\n\n\t\t\t\t\t\t\tif (newReturnValue !== undefined) {\n\t\t\t\t\t\t\t\troot = newReturnValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn root;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (has('loader-config-attribute') && has('host-browser')) {\n\t\t\tArray.prototype.slice.call(document.getElementsByTagName('script'), 0).forEach((script: HTMLScriptElement) => {\n\t\t\t\tif (script.hasAttribute('data-loader-config')) {\n\t\t\t\t\tconst attr = script.getAttribute('data-loader-config');\n\t\t\t\t\tlet dojoConfig: DojoLoader.Config | null = null;\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdojoConfig = <DojoLoader.Config> JSON.parse(`{ ${attr} }`);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tconsole.error('Unable to parse data-loader-config, ' + attr);\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dojoConfig !== null) {\n\t\t\t\t\t\trequireModule.config(dojoConfig);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction forEach<T>(array: T[], callback: (value: T, index: number, array: T[]) => void): void {\n\t\tarray && array.forEach(callback);\n\t}\n\n\tfunction mix<T extends {}>(target: {}, source: {}, deep?: boolean): T {\n\t\tif (source) {\n\t\t\tfor (let key in source) {\n\t\t\t\tlet sourceValue = (<DojoLoader.ObjectMap> source)[key];\n\n\t\t\t\tif (deep && typeof sourceValue === 'object' &&\n\t\t\t\t\t!Array.isArray(sourceValue) && !(sourceValue instanceof RegExp)) {\n\n\t\t\t\t\tif (!(<DojoLoader.ObjectMap> target)[key]) {\n\t\t\t\t\t\t(<DojoLoader.ObjectMap> target)[key] = {};\n\t\t\t\t\t}\n\t\t\t\t\tmix((<DojoLoader.ObjectMap> target)[key], sourceValue, true);\n\t\t\t\t} else {\n\t\t\t\t\t(<DojoLoader.ObjectMap> target)[key] = sourceValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn <T> target;\n\t}\n\n\tfunction noop(): void {};\n\n\tlet loadNodeModule: (moduleId: string, parent?: DojoLoader.Module) => any = noop;\n\n\tfunction contextRequire(moduleId: string, unused?: void, referenceModule?: DojoLoader.Module): DojoLoader.Module;\n\tfunction contextRequire(dependencies: string[], callback?: DojoLoader.RequireCallback, referenceModule?: DojoLoader.Module): DojoLoader.Module;\n\tfunction contextRequire(dependencies: string | string[], callback: any, referenceModule?: DojoLoader.Module): DojoLoader.Module | undefined {\n\t\tlet module: DojoLoader.Module | undefined = undefined;\n\t\tif (typeof dependencies === 'string') {\n\t\t\tmodule = getModule(dependencies, referenceModule);\n\t\t\tif (module.executed !== true && module.executed !== EXECUTING) {\n\t\t\t\tif (has('host-node') && !module.plugin) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet result = loadNodeModule(module.mid, referenceModule);\n\n\t\t\t\t\t\tinitializeModule(module, [], undefined);\n\t\t\t\t\t\tmodule.result = result;\n\t\t\t\t\t\tmodule.cjs.setExports(result);\n\t\t\t\t\t\tmodule.executed = true;\n\t\t\t\t\t\tmodule.injected = true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\tthrow new Error('Attempt to require unloaded module ' + module.mid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (module.plugin) {\n\t\t\t\t\tinjectModule(module, undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Assign the result of the module to `module`\n\t\t\t// otherwise require('moduleId') returns the internal\n\t\t\t// module representation\n\t\t\tmodule = module.result;\n\t\t}\n\t\telse if (Array.isArray(dependencies)) {\n\t\t\t// signature is (requestList [,callback])\n\t\t\t// construct a synthetic module to control execution of the requestList, and, optionally, callback\n\t\t\tmodule = getModuleInformation('*' + (++uidGenerator));\n\t\t\tmix(module, {\n\t\t\t\tdeps: resolveDependencies(dependencies, module, referenceModule),\n\t\t\t\tdef: callback || {},\n\t\t\t\tgc: true // garbage collect\n\t\t\t});\n\t\t\tguardCheckComplete(function (): void {\n\t\t\t\tforEach(module ? module.deps : [], injectModule.bind(null, module));\n\t\t\t});\n\t\t\texecutionQueue.push(module);\n\t\t\tcheckComplete();\n\t\t}\n\t\treturn module;\n\t}\n\n\tfunction createRequire(module: DojoLoader.Module | undefined): DojoLoader.Require | undefined {\n\t\tlet result: DojoLoader.Require | undefined = (!module && requireModule) || (module && module.require);\n\t\tif (!result && module) {\n\t\t\tmodule.require = result = <DojoLoader.Require> function (dependencies: any, callback: any): DojoLoader.Module {\n\t\t\t\treturn contextRequire(dependencies, callback, module);\n\t\t\t};\n\t\t\tmix(mix(result, requireModule), {\n\t\t\t\ttoUrl: function (name: string): string {\n\t\t\t\t\treturn toUrl(name, module);\n\t\t\t\t},\n\t\t\t\ttoAbsMid: function (mid: string): string {\n\t\t\t\t\treturn toAbsMid(mid, module);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction runMapProgram(targetModuleId: string, map?: DojoLoader.MapItem[]): DojoLoader.MapSource | undefined {\n\t\t// search for targetModuleId in map; return the map item if found; falsy otherwise\n\t\tif (map) {\n\t\t\tfor (let i = 0, j = map.length; i < j; ++i) {\n\t\t\t\tif (map[i][2].test(targetModuleId)) {\n\t\t\t\t\treturn map[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tfunction compactPath(path: string): string {\n\t\tconst pathSegments: string[] = path.replace(/\\\\/g, '/').split('/');\n\t\tlet absolutePathSegments: (string|undefined)[] = [];\n\t\tlet segment: string | undefined;\n\t\tlet lastSegment: string | undefined = '';\n\n\t\twhile (pathSegments.length) {\n\t\t\tsegment = pathSegments.shift();\n\t\t\tif (segment === '..' && absolutePathSegments.length && lastSegment !== '..') {\n\t\t\t\tabsolutePathSegments.pop();\n\t\t\t\tlastSegment = absolutePathSegments[absolutePathSegments.length - 1];\n\t\t\t}\n\t\t\telse if (segment !== '.') {\n\t\t\t\tabsolutePathSegments.push((lastSegment = segment));\n\t\t\t} // else ignore \".\"\n\t\t}\n\n\t\treturn absolutePathSegments.join('/');\n\t}\n\n\tfunction updateModuleIdFromMap(moduleId: string, referenceModule?: DojoLoader.Module): string {\n\t\t// relative module ids are relative to the referenceModule; get rid of any dots\n\t\tmoduleId = compactPath(/^\\./.test(moduleId) && referenceModule ?\n\t\t\t(referenceModule.mid + '/../' + moduleId) : moduleId);\n\t\t// at this point, moduleId is an absolute moduleId\n\n\t\t// if there is a reference module, then use its module map, if one exists; otherwise, use the global map.\n\t\t// see computeMapProg for more information on the structure of the map arrays\n\t\tlet moduleMap: DojoLoader.MapItem | undefined = referenceModule && runMapProgram(referenceModule.mid, mapPrograms);\n\t\tmoduleMap = moduleMap ? moduleMap[1] : mapPrograms.star;\n\n\t\tlet mapItem: DojoLoader.MapItem | undefined;\n\t\tif ((mapItem = runMapProgram(moduleId, moduleMap))) {\n\t\t\tmoduleId = mapItem[1] + moduleId.slice(mapItem[3]);\n\t\t}\n\n\t\treturn moduleId;\n\t}\n\n\tfunction getPluginInformation(moduleId: string, match: string[], referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\tconst plugin = getModule(match[1], referenceModule);\n\t\tconst isPluginLoaded = Boolean(plugin.load);\n\n\t\tconst contextRequire = createRequire(referenceModule);\n\n\t\tlet pluginResourceId: string;\n\t\tif (isPluginLoaded) {\n\t\t\tpluginResourceId = resolvePluginResourceId(plugin, match[2], contextRequire);\n\t\t\tmoduleId = (plugin.mid + '!' + pluginResourceId);\n\t\t}\n\t\telse {\n\t\t\t// if not loaded, need to mark in a way that it will get properly resolved later\n\t\t\tpluginResourceId = match[2];\n\t\t\tmoduleId = plugin.mid + '!' + (++uidGenerator) + '!*';\n\t\t}\n\t\treturn <DojoLoader.Module> <any> {\n\t\t\tplugin: plugin,\n\t\t\tmid: moduleId,\n\t\t\treq: contextRequire,\n\t\t\tprid: pluginResourceId,\n\t\t\tfix: !isPluginLoaded\n\t\t};\n\t}\n\n\tfunction getModuleInformation(moduleId: string, referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\tlet match = moduleId.match(/^([^\\/]+)(\\/(.+))?$/);\n\t\tlet packageId = match ? match[1] : '';\n\t\tlet pack = config && config.pkgs ? config.pkgs[packageId] : {};\n\t\tlet moduleIdInPackage = '';\n\n\t\tif (pack) {\n\t\t\tmoduleId = packageId + '/' + (moduleIdInPackage = ((match && match[3]) || pack.main || 'main'));\n\t\t}\n\t\telse {\n\t\t\tpackageId = '';\n\t\t}\n\n\t\tlet module = modules[moduleId];\n\t\tif (!(module)) {\n\t\t\tlet mapItem = runMapProgram(moduleId, pathMapPrograms);\n\t\t\tlet url = mapItem ? mapItem[1] + moduleId.slice(mapItem[3]) : (packageId ? pack.location + moduleIdInPackage : moduleId);\n\t\t\tmodule = <DojoLoader.Module> <any> {\n\t\t\t\tpid: packageId,\n\t\t\t\tmid: moduleId,\n\t\t\t\tpack: pack,\n\t\t\t\turl: compactPath(\n\t\t\t\t\t// absolute urls should not be prefixed with baseUrl\n\t\t\t\t\t(/^(?:\\/|\\w+:)/.test(url) ? '' : config.baseUrl) +\n\t\t\t\t\turl +\n\t\t\t\t\t// urls with a javascript extension should not have another one added\n\t\t\t\t\t(/\\.js(?:\\?[^?]*)?$/.test(url) ? '' : '.js')\n\t\t\t\t)\n\t\t\t};\n\t\t}\n\n\t\treturn module;\n\t}\n\n\tfunction resolvePluginResourceId(plugin: DojoLoader.Module, pluginResourceId: string, contextRequire?: DojoLoader.Require): string {\n\t\tconst toAbsMid = contextRequire ? contextRequire.toAbsMid : undefined;\n\t\treturn plugin.normalize ? plugin.normalize(pluginResourceId, <any> toAbsMid) : toAbsMid ? toAbsMid(pluginResourceId) : '';\n\t}\n\n\tfunction getModule(moduleId: string, referenceModule?: DojoLoader.Module): DojoLoader.Module {\n\t\t// compute and construct (if necessary) the module implied by the moduleId with respect to referenceModule\n\t\tlet module: DojoLoader.Module;\n\t\tconst pluginRegEx = /^(.+?)\\!(.*)$/;\n\n\t\t// Foreseable situations (where ?-> is a map lookup function)\n\t\t// module\n\t\t// plugin!arg\n\t\t// module ?-> mappedModule\n\t\t// module ?-> mappedPlugin!arg\n\t\t// plugin!arg ?-> mappedPlugin + ! + arg\n\n\t\t// Do inital check on the passed in moduleId\n\t\tconst passedModuleMatch = moduleId.match(pluginRegEx);\n\t\tif (passedModuleMatch) {\n\t\t\t// Passed in moduleId is a plugin, so check the map using only the plugin name\n\t\t\t// then reconstruct using the pluginArgs\n\t\t\tlet pluginId: string = updateModuleIdFromMap(passedModuleMatch[1], referenceModule);\n\t\t\tmoduleId = `${pluginId}!${passedModuleMatch[2]}`;\n\t\t}\n\t\telse {\n\t\t\t// Not a module, so check the map using the full moduleId passed\n\t\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\t}\n\n\t\t// Do final check on the mapped module / plugin Id to see what we're dealing with\n\t\tconst mappedModuleMatch = moduleId.match(pluginRegEx);\n\t\tif (mappedModuleMatch) {\n\t\t\tmodule = getPluginInformation(moduleId, mappedModuleMatch, referenceModule);\n\t\t}\n\t\telse {\n\t\t\tmodule = getModuleInformation(moduleId, referenceModule);\n\t\t}\n\n\t\treturn modules[module.mid] || (modules[module.mid] = module);\n\t}\n\n\tfunction toAbsMid(moduleId: string, referenceModule: DojoLoader.Module | undefined): string {\n\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\treturn getModuleInformation(moduleId, referenceModule).mid;\n\t}\n\n\tfunction toUrl(name: string, referenceModule: DojoLoader.Module | undefined): string {\n\t\tlet moduleId = name + '/x';\n\t\tmoduleId = updateModuleIdFromMap(moduleId, referenceModule);\n\t\tconst moduleInfo: DojoLoader.Module = getModuleInformation(moduleId, referenceModule);\n\t\tconst url: string = moduleInfo.url;\n\n\t\t// \"/x.js\" since getModuleInfo automatically appends \".js\" and we appended \"/x\" to make name look like a\n\t\t// module id\n\t\treturn url.slice(0, url.length - 5);\n\t}\n\n\tfunction makeCommonJs(mid: string): DojoLoader.Module {\n\t\treturn (modules[mid] = <DojoLoader.Module> <any> {\n\t\t\tmid: mid,\n\t\t\tinjected: true,\n\t\t\texecuted: true\n\t\t});\n\t}\n\tconst commonJsRequireModule: DojoLoader.Module = makeCommonJs('require');\n\tconst commonJsExportsModule: DojoLoader.Module = makeCommonJs('exports');\n\tconst commonJsModuleModule: DojoLoader.Module = makeCommonJs('module');\n\tlet circularTrace: string[];\n\n\thas.add('loader-debug-circular-dependencies', true);\n\tif (has('loader-debug-circular-dependencies')) {\n\t\tcircularTrace = [];\n\t}\n\n\tfunction executeModule(module: DojoLoader.Module): any {\n\t\t// run the dependency array, then run the factory for module\n\t\tif (module.executed === EXECUTING) {\n\t\t\t// for circular dependencies, assume the first module encountered was executed OK\n\t\t\t// modules that circularly depend on a module that has not run its factory will get\n\t\t\t// the premade cjs.exports===module.result. They can take a reference to this object and/or\n\t\t\t// add properties to it. When the module finally runs its factory, the factory can\n\t\t\t// read/write/replace this object. Notice that so long as the object isn't replaced, any\n\t\t\t// reference taken earlier while walking the dependencies list is still valid.\n\t\t\tif (\n\t\t\t\thas('loader-debug-circular-dependencies') &&\n\t\t\t\tmodule.deps.indexOf(commonJsExportsModule) === -1 &&\n\t\t\t\ttypeof console !== 'undefined'\n\t\t\t) {\n\t\t\t\tconsole.warn('Circular dependency: ' + circularTrace.concat(module.mid).join(' -> '));\n\t\t\t}\n\n\t\t\treturn module.result;\n\t\t}\n\n\t\tif (!module.executed) {\n\t\t\t// TODO: This seems like an incorrect condition inference. Originally it was simply !module.def\n\t\t\t// which caused modules with falsy defined values to never execute.\n\t\t\tif (!module.def && !module.deps) {\n\t\t\t\treturn ABORT_EXECUTION;\n\t\t\t}\n\n\t\t\thas('loader-debug-circular-dependencies') && circularTrace.push(module.mid);\n\n\t\t\tconst dependencies: DojoLoader.Module[] = module.deps;\n\t\t\tlet result: any;\n\n\t\t\tmodule.executed = EXECUTING;\n\t\t\tlet executedDependencies = dependencies.map(function (dependency: DojoLoader.Module): any {\n\t\t\t\tif (result !== ABORT_EXECUTION) {\n\t\t\t\t\t// check for keyword dependencies: DojoLoader.require, exports, module; then execute module dependency\n\t\t\t\t\tresult = ((dependency === commonJsRequireModule) ? createRequire(module) :\n\t\t\t\t\t\t\t\t((dependency === commonJsExportsModule) ? module.cjs.exports :\n\t\t\t\t\t\t\t\t\t((dependency === commonJsModuleModule) ? module.cjs :\n\t\t\t\t\t\t\t\t\t\texecuteModule(dependency))));\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t});\n\n\t\t\tif (result === ABORT_EXECUTION) {\n\t\t\t\tmodule.executed = false;\n\t\t\t\thas('loader-debug-circular-dependencies') && circularTrace.pop();\n\t\t\t\treturn ABORT_EXECUTION;\n\t\t\t}\n\n\t\t\tconst factory: DojoLoader.Factory = module.def;\n\t\t\tresult = typeof factory === 'function' ? factory.apply(null, executedDependencies) : factory;\n\n\t\t\t// TODO: But of course, module.cjs always exists.\n\t\t\t// Assign the new module.result to result so plugins can use exports\n\t\t\t// to define their interface; the plugin checks below use result\n\t\t\tresult = module.result = result === undefined && module.cjs ? module.cjs.exports : result;\n\t\t\tmodule.executed = true;\n\t\t\texecutedSomething = true;\n\n\t\t\t// delete references to synthetic modules\n\t\t\tif (module.gc) {\n\t\t\t\tmodules[module.mid] = undefined;\n\t\t\t}\n\n\t\t\t// if result defines load, just assume it's a plugin; harmless if the assumption is wrong\n\t\t\tresult && result.load && [ 'normalize', 'load' ].forEach(function (key: string): void {\n\t\t\t\t(<any> module)[key] = (<any> result)[key];\n\t\t\t});\n\n\t\t\t// for plugins, resolve the loadQ\n\t\t\tforEach(module.loadQ || [], function (pseudoPluginResource: DojoLoader.Module): void {\n\t\t\t\t// manufacture and insert the real module in modules\n\t\t\t\tconst pluginResourceId: string = resolvePluginResourceId(module, pseudoPluginResource.prid,\n\t\t\t\t\tpseudoPluginResource.req);\n\t\t\t\tconst moduleId: string = (module.mid + '!' + pluginResourceId);\n\t\t\t\tconst pluginResource: DojoLoader.Module =\n\t\t\t\t\t<DojoLoader.Module> mix(mix({}, pseudoPluginResource), { mid: moduleId, prid: pluginResourceId });\n\n\t\t\t\tif (!modules[moduleId]) {\n\t\t\t\t\t// create a new (the real) plugin resource and inject it normally now that the plugin is on board\n\t\t\t\t\tinjectPlugin((modules[moduleId] = pluginResource));\n\t\t\t\t} // else this was a duplicate request for the same (plugin, rid)\n\n\t\t\t\t// pluginResource is really just a placeholder with the wrong moduleId (because we couldn't calculate it\n\t\t\t\t// until the plugin was on board) fix() replaces the pseudo module in a resolved dependencies array with the\n\t\t\t\t// real module lastly, mark the pseudo module as arrived and delete it from modules\n\t\t\t\tif (pseudoPluginResource && pseudoPluginResource.fix) {\n\t\t\t\t\tpseudoPluginResource.fix(<any> modules[moduleId]);\n\t\t\t\t}\n\t\t\t\t--waitingCount;\n\t\t\t\tmodules[pseudoPluginResource.mid] = undefined;\n\t\t\t});\n\t\t\tmodule.loadQ = undefined;\n\n\t\t\thas('loader-debug-circular-dependencies') && circularTrace.pop();\n\t\t}\n\n\t\t// at this point the module is guaranteed fully executed\n\t\treturn module.result;\n\t}\n\n\t// TODO: Figure out what proc actually is\n\tfunction guardCheckComplete(callback: Function): void {\n\t\t++checkCompleteGuard;\n\t\tcallback();\n\t\t--checkCompleteGuard;\n\t}\n\n\tfunction checkComplete(): void {\n\t\t// keep going through the executionQueue as long as at least one factory is executed\n\t\t// plugins, recursion, cached modules all make for many execution path possibilities\n\t\t!checkCompleteGuard && guardCheckComplete(function (): void {\n\t\t\tfor (let module: DojoLoader.Module, i = 0; i < executionQueue.length; ) {\n\t\t\t\tmodule = executionQueue[i];\n\t\t\t\tif (module.executed === true) {\n\t\t\t\t\texecutionQueue.splice(i, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texecutedSomething = false;\n\t\t\t\t\texecuteModule(module);\n\t\t\t\t\tif (executedSomething) {\n\t\t\t\t\t\t// something was executed; this indicates the executionQueue was modified, maybe a\n\t\t\t\t\t\t// lot (for example a later module causes an earlier module to execute)\n\t\t\t\t\t\ti = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// nothing happened; check the next module in the exec queue\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction injectPlugin(module: DojoLoader.Module): void {\n\t\t// injects the plugin module given by module; may have to inject the plugin itself\n\t\tconst plugin: DojoLoader.Module | undefined = module.plugin;\n\t\tconst onLoad = function (def: any): void {\n\t\t\t\tmodule.result = def;\n\t\t\t\t--waitingCount;\n\t\t\t\tmodule.executed = true;\n\t\t\t\tcheckComplete();\n\t\t\t};\n\n\t\tif (plugin && plugin.load) {\n\t\t\tplugin.load(module.prid, module.req, onLoad, config);\n\t\t}\n\t\telse if (plugin && plugin.loadQ) {\n\t\t\tplugin.loadQ.push(module);\n\t\t}\n\t\telse if (plugin) {\n\t\t\t// the unshift instead of push is important: we don't want plugins to execute as\n\t\t\t// dependencies of some other module because this may cause circles when the plugin\n\t\t\t// loadQ is run; also, generally, we want plugins to run early since they may load\n\t\t\t// several other modules and therefore can potentially unblock many modules\n\t\t\tplugin.loadQ = [ module ];\n\t\t\texecutionQueue.unshift(plugin);\n\t\t\tinjectModule(module, plugin);\n\t\t}\n\t}\n\n\tfunction injectModule(parent?: DojoLoader.Module, module?: DojoLoader.Module): void {\n\t\t// TODO: This is for debugging, we should bracket it\n\t\tif (!module) {\n\t\t\tmodule = parent;\n\t\t\tparent = undefined;\n\t\t}\n\n\t\tif (module && module.plugin) {\n\t\t\tinjectPlugin(module);\n\t\t}\n\t\telse if (module && !module.injected) {\n\t\t\tlet cached: DojoLoader.Factory;\n\t\t\tconst onLoadCallback = function (node?: HTMLScriptElement): void {\n\t\t\t\tlet moduleDefArgs: string[] = [];\n\t\t\t\tlet moduleDefFactory: DojoLoader.Factory | undefined = undefined;\n\n\t\t\t\t// non-amd module\n\t\t\t\tif (moduleDefinitionArguments) {\n\t\t\t\t\tmoduleDefArgs = moduleDefinitionArguments[0];\n\t\t\t\t\tmoduleDefFactory = moduleDefinitionArguments[1];\n\t\t\t\t}\n\n\t\t\t\tdefineModule(module, moduleDefArgs, moduleDefFactory);\n\t\t\t\tmoduleDefinitionArguments = undefined;\n\n\t\t\t\tguardCheckComplete(function (): void {\n\t\t\t\t\tforEach((module && module.deps) || [], injectModule.bind(null, module));\n\t\t\t\t});\n\t\t\t\tcheckComplete();\n\t\t\t};\n\n\t\t\t++waitingCount;\n\t\t\tmodule.injected = true;\n\t\t\tif (cached = cache[module.mid]) {\n\t\t\t\ttry {\n\t\t\t\t\tcached();\n\t\t\t\t\tonLoadCallback();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\t// If a cache load fails, retrieve using injectUrl\n\t\t\t\t\t// TODO: report error, 'cachedThrew', [ error, module ]\n\t\t\t\t}\n\t\t\t}\n\t\t\tinjectUrl(module.url, onLoadCallback, module, parent);\n\t\t}\n\t}\n\n\tfunction resolveDependencies(dependencies: string[], module: DojoLoader.Module, referenceModule?: DojoLoader.Module): DojoLoader.Module[] {\n\t\t// resolve dependencies with respect to this module\n\t\treturn dependencies.map(function (dependency: string, i: number): DojoLoader.Module {\n\t\t\tconst result: DojoLoader.Module = getModule(dependency, referenceModule);\n\t\t\tif (result.fix) {\n\t\t\t\tresult.fix = function (m: DojoLoader.Module): void {\n\t\t\t\t\tmodule.deps[i] = m;\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tfunction defineModule(module: DojoLoader.Module | undefined, dependencies: string[], factory?: DojoLoader.Factory): DojoLoader.Module | undefined {\n\t\t--waitingCount;\n\t\treturn initializeModule(module, dependencies, factory);\n\t}\n\n\tfunction initializeModule(module: DojoLoader.Module | undefined, dependencies: string[], factory?: DojoLoader.Factory): DojoLoader.Module | undefined {\n\t\tconst moduleToInitialize = module;\n\t\tlet initializedModule: DojoLoader.Module | undefined = undefined;\n\n\t\tif (moduleToInitialize) {\n\t\t\tinitializedModule = <DojoLoader.Module> mix(moduleToInitialize, {\n\t\t\t\tdef: factory,\n\t\t\t\tdeps: resolveDependencies(dependencies, moduleToInitialize, moduleToInitialize),\n\t\t\t\tcjs: {\n\t\t\t\t\tid: moduleToInitialize.mid,\n\t\t\t\t\turi: moduleToInitialize.url,\n\t\t\t\t\texports: (moduleToInitialize.result = {}),\n\t\t\t\t\tsetExports: function (exports: any): void {\n\t\t\t\t\t\tmoduleToInitialize.cjs.exports = exports;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn initializedModule;\n\t}\n\n\thas.add('function-bind', Boolean(Function.prototype.bind));\n\tif (!has('function-bind')) {\n\t\tinjectModule.bind = function (thisArg: any): typeof injectModule {\n\t\t\tconst slice = Array.prototype.slice;\n\t\t\tconst args: any[] = slice.call(arguments, 1);\n\n\t\t\treturn function (): void {\n\t\t\t\treturn injectModule.apply(thisArg, args.concat(slice.call(arguments, 0)));\n\t\t\t};\n\t\t};\n\t}\n\n\tlet globalObjectGlobals = function (require: DojoLoader.Require, define: DojoLoader.Define): void {\n\t\tglobalObject.require = require;\n\t\tglobalObject.define = define;\n\t};\n\n\tif (has('host-node')) {\n\t\tloadNodeModule = (moduleId: string, parent?: DojoLoader.Module): any => {\n\t\t\tlet module: any = require('module');\n\t\t\tlet result: any;\n\n\t\t\tif (module._findPath && module._nodeModulePaths) {\n\t\t\t\tlet localModulePath = module._findPath(moduleId, module._nodeModulePaths(toUrl('.', parent)));\n\n\t\t\t\tif (localModulePath !== false) {\n\t\t\t\t\tmoduleId = localModulePath;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Some modules attempt to detect an AMD loader by looking for global AMD `define`. This causes issues\n\t\t\t// when other CommonJS modules attempt to load them via the standard Node.js `require`, so hide it\n\t\t\t// during the load\n\t\t\tglobalObject.define = undefined;\n\n\t\t\ttry {\n\t\t\t\tif (requireModule && requireModule.nodeRequire) {\n\t\t\t\t\tresult = requireModule.nodeRequire(moduleId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tglobalObject.define = define;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\n\t\tconst vm: any = require('vm');\n\t\tconst fs: any = require('fs');\n\n\t\t// retain the ability to get node's require\n\t\trequireModule.nodeRequire = require;\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void,\n\t\t\t\t\t\t\tmodule: DojoLoader.Module, parent?: DojoLoader.Module): void {\n\t\t\tfs.readFile(url, 'utf8', function (error: Error, data: string): void {\n\t\t\t\tfunction loadCallback () {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet result = loadNodeModule(module.mid, parent);\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\treportModuleLoadError(parent, module, url, error.message);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\tmoduleDefinitionArguments = [ [], loadCallback ];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// global `module` variable needs to be shadowed for UMD modules that are loaded in an Electron\n\t\t\t\t\t// webview; in Node.js the `module` variable does not exist when using `vm.runInThisContext`,\n\t\t\t\t\t// but in Electron it exists in the webview when Node.js integration is enabled which causes loaded\n\t\t\t\t\t// modules to register with Node.js and break the loader\n\t\t\t\t\tlet oldModule = globalObject.module;\n\t\t\t\t\tglobalObject.module = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * Using an `object` as a second argument causes Instabul\n\t\t\t\t\t\t * issues and then thinks the file should not be instrumented\n\t\t\t\t\t\t *\n\t\t\t\t\t\t * See: dojo/loader#57\n\t\t\t\t\t\t */\n\t\t\t\t\t\tvm.runInThisContext(data, url);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (error) {\n\t\t\t\t\t\treportModuleLoadError(parent, module, url, error.message);\n\t\t\t\t\t}\n\t\t\t\t\tfinally {\n\t\t\t\t\t\tglobalObject.module = oldModule;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t});\n\t\t};\n\n\t\tsetGlobals = function (require: DojoLoader.RootRequire, define: DojoLoader.Define): void {\n\t\t\tmodule.exports = globalObject.require = require;\n\t\t\tglobalObject.define = define;\n\t\t};\n\t}\n\telse if (has('host-browser')) {\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module,\n\t\t\t\t\t\t\tparent?: DojoLoader.Module): void {\n\t\t\t// insert a script element to the insert-point element with src=url;\n\t\t\t// apply callback upon detecting the script has loaded.\n\t\t\tconst node: HTMLScriptElement = document.createElement('script');\n\t\t\tconst handler: EventListener = function (event: Event): void {\n\t\t\t\tdocument.head.removeChild(node);\n\n\t\t\t\tif (event.type === 'load') {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treportModuleLoadError(parent, module, url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tnode.addEventListener('load', handler, false);\n\t\t\tnode.addEventListener('error', handler, false);\n\n\t\t\tif (config.crossOrigin !== false) {\n\t\t\t\t(<any> node).crossOrigin = config.crossOrigin;\n\t\t\t}\n\n\t\t\tnode.charset = 'utf-8';\n\t\t\tnode.src = url;\n\t\t\tdocument.head.appendChild(node);\n\t\t};\n\n\t\tsetGlobals = globalObjectGlobals;\n\t}\n\telse if (has('host-nashorn')) {\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module,\n\t\t\tparent?: DojoLoader.Module): void {\n\n\t\t\tload(url);\n\t\t\tcallback();\n\t\t};\n\n\t\tsetGlobals = globalObjectGlobals;\n\t}\n\telse if (has('host-web-worker')) {\n\t\tinjectUrl = function (url: string, callback: (node?: HTMLScriptElement) => void, module: DojoLoader.Module,\n\t\t\tparent?: DojoLoader.Module): void {\n\n\t\t\ttry {\n\t\t\t\timportScripts(url);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\treportModuleLoadError(parent, module, url);\n\t\t\t}\n\t\t\tcallback();\n\t\t};\n\n\t\tsetGlobals = globalObjectGlobals;\n\t}\n\telse {\n\t\tthrow new Error('Unsupported platform');\n\t}\n\n\thas.add('loader-debug-internals', true);\n\tif (has('loader-debug-internals')) {\n\t\trequireModule.inspect = function (name: string): any {\n\t\t\t/* tslint:disable:no-eval */\n\t\t\t// TODO: Should this use console.log so people do not get any bright ideas about using this in apps?\n\t\t\treturn eval(name);\n\t\t\t/* tslint:enable:no-eval */\n\t\t};\n\t}\n\n\thas.add('loader-undef', true);\n\tif (has('loader-undef')) {\n\t\trequireModule.undef = function (id: string, recursive?: boolean): void {\n\t\t\tconst module: Module | undefined = modules[id];\n\t\t\tconst undefDeps = function (mod: Module): void {\n\t\t\t\tif (mod === commonJsRequireModule || mod === commonJsModuleModule || mod === commonJsExportsModule) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (mod.deps) {\n\t\t\t\t\tforEach(mod.deps, undefDeps);\n\t\t\t\t}\n\n\t\t\t\tmodules[mod.mid] = undefined;\n\t\t\t};\n\t\t\tif (module) {\n\t\t\t\tif (recursive && module.deps) {\n\t\t\t\t\tforEach(module.deps, undefDeps);\n\t\t\t\t}\n\t\t\t\tdelete modules[module.mid];\n\t\t\t\tdelete cache[module.mid];\n\t\t\t}\n\t\t};\n\t}\n\n\tmix(requireModule, {\n\t\ttoAbsMid: toAbsMid,\n\t\ttoUrl: toUrl,\n\n\t\tcache: function (cacheModules: DojoLoader.ObjectMap): void {\n\t\t\tlet item: any;\n\n\t\t\tfor (let key in cacheModules) {\n\t\t\t\titem = cacheModules[key];\n\n\t\t\t\tcache[\n\t\t\t\t\tgetModuleInformation(key, undefined).mid\n\t\t\t\t\t] = item;\n\t\t\t}\n\t\t}\n\t});\n\n\tObject.defineProperty(requireModule, 'baseUrl', {\n\t\tget: function (): string | undefined {\n\t\t\treturn config.baseUrl;\n\t\t},\n\t\tenumerable: true\n\t});\n\n\thas.add('loader-cjs-wrapping', true);\n\n\tlet comments: RegExp;\n\tlet requireCall: RegExp;\n\n\tif (has('loader-cjs-wrapping')) {\n\t\tcomments = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/mg;\n\t\trequireCall = /require\\s*\\(\\s*([\"'])(.*?[^\\\\])\\1\\s*\\)/g;\n\t}\n\n\thas.add('loader-explicit-mid', true);\n\n\t/**\n\t * @param deps //(array of commonjs.moduleId, optional)\n\t * @param factory //(any)\n\t */\n\tlet define: DojoLoader.Define = <DojoLoader.Define> mix(function (dependencies: string[], factory: DojoLoader.Factory): void {\n\t\tlet originalFactory: any;\n\t\tif (has('loader-explicit-mid') && arguments.length > 1 && typeof dependencies === 'string') {\n\t\t\tlet id: string = <any> dependencies;\n\t\t\tif (arguments.length === 3) {\n\t\t\t\tdependencies = <any> factory;\n\t\t\t\tfactory = arguments[2];\n\t\t\t} else {\n\t\t\t\tdependencies = [];\n\t\t\t}\n\n\t\t\t// Some modules in the wild have an explicit module ID that is null; ignore the module ID in this case and\n\t\t\t// register normally using the request module ID\n\t\t\tif (id != null) {\n\t\t\t\tlet module: DojoLoader.Module = getModule(id);\n\t\t\t\tif (factory) {\n\t\t\t\t\toriginalFactory = factory;\n\t\t\t\t\tfactory = function () {\n\t\t\t\t\t\tmodule.executed = true;\n\t\t\t\t\t\treturn (module.result = originalFactory.apply ?\n\t\t\t\t\t\t\toriginalFactory.apply(null, arguments) : originalFactory);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tmodule.injected = true;\n\t\t\t\tdefineModule(module, dependencies, factory);\n\t\t\t\tguardCheckComplete(function (): void {\n\t\t\t\t\tforEach(module.deps, injectModule.bind(null, module));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (arguments.length === 1) {\n\t\t\tif (has('loader-cjs-wrapping') && typeof dependencies === 'function') {\n\t\t\t\toriginalFactory = <any> dependencies;\n\t\t\t\tdependencies = [ 'require', 'exports', 'module' ];\n\n\t\t\t\t// Scan factory for require() calls and add them to the\n\t\t\t\t// list of dependencies\n\t\t\t\toriginalFactory.toString()\n\t\t\t\t\t.replace(comments, '')\n\t\t\t\t\t.replace(requireCall, function (): string {\n\t\t\t\t\t\tdependencies.push(/* mid */ arguments[2]);\n\t\t\t\t\t\treturn arguments[0];\n\t\t\t\t\t});\n\t\t\t\tfactory = function (require, exports, module): any {\n\t\t\t\t\tconst originalModuleId = module.id;\n\t\t\t\t\tlet result: any = originalFactory.apply(null, arguments);\n\t\t\t\t\tif (originalModuleId !== module.id) {\n\t\t\t\t\t\tconst newModule: DojoLoader.Module = getModule(module.id);\n\t\t\t\t\t\tdefineModule(newModule, dependencies, undefined);\n\t\t\t\t\t\tnewModule.injected = true;\n\t\t\t\t\t\tnewModule.executed = true;\n\t\t\t\t\t\tnewModule.result = module.exports = result || module.exports;\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\t\t\t}\n\t\t\telse if (/* define(value) */ !Array.isArray(dependencies)) {\n\t\t\t\tconst value: any = dependencies;\n\t\t\t\tdependencies = [];\n\t\t\t\tfactory = function (): any {\n\t\t\t\t\treturn value;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tmoduleDefinitionArguments = [ dependencies, factory ];\n\t}, {\n\t\tamd: { vendor: 'dojotoolkit.org' }\n\t});\n\n\tsetGlobals(requireModule, define);\n\tif (has('host-nashorn') && args && args[0]) {\n\t\tload(args[0]);\n\t}\n})((typeof Packages !== 'undefined' ? Array.prototype.slice.call(arguments, 0) : []));\n"]}