{"version":3,"file":"Projector.js","sourceRoot":"","sources":["Projector.ts"],"names":[],"mappings":"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","sourcesContent":["import { assign } from '@dojo/core/lang';\nimport global from '@dojo/core/global';\nimport { createHandle } from '@dojo/core/lang';\nimport { Handle } from '@dojo/interfaces/core';\nimport { VNode } from '@dojo/interfaces/vdom';\nimport { h, dom, Projection, ProjectionOptions, VNodeProperties } from 'maquette';\nimport 'pepjs';\nimport cssTransitions from '../animations/cssTransitions';\nimport { Constructor, DNode, WidgetProperties } from './../interfaces';\nimport { WidgetBase } from './../WidgetBase';\n\n/**\n * Represents the attach state of the projector\n */\nexport enum ProjectorAttachState {\n\tAttached = 1,\n\tDetached\n}\n\n/**\n * Attach type for the projector\n */\nexport enum AttachType {\n\tAppend = 1,\n\tMerge = 2,\n\tReplace = 3\n}\n\nexport interface AttachOptions {\n\n\t/**\n\t * If `'append'` it will appended to the root. If `'merge'` it will merged with the root. If `'replace'` it will\n\t * replace the root.\n\t */\n\ttype: AttachType;\n\n\t/**\n\t * Element to attach the projector.\n\t */\n\troot?: Element;\n}\n\nexport interface ProjectorMixin<P extends WidgetProperties> {\n\n\t/**\n\t * Append the projector to the root.\n\t */\n\tappend(root?: Element): Handle;\n\n\t/**\n\t * Merge the projector onto the root.\n\t *\n\t * The `root` and any of its `children` will be re-used.  Any excess DOM nodes will be ignored and any missing DOM nodes\n\t * will be created.\n\t * @param root The root element that the root virtual DOM node will be merged with.  Defaults to `document.body`.\n\t */\n\tmerge(root?: Element): Handle;\n\n\t/**\n\t * Replace the root with the projector node.\n\t */\n\treplace(root?: Element): Handle;\n\n\t/**\n\t * Pause the projector.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Resume the projector.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Attach the project to a _sandboxed_ document fragment that is not part of the DOM.\n\t *\n\t * When sandboxed, the `Projector` will run in a sync manner, where renders are completed within the same turn.\n\t * The `Projector` creates a `DocumentFragment` which replaces any other `root` that has been set.\n\t * @param doc The `Document` to use, which defaults to the global `document`.\n\t */\n\tsandbox(doc?: Document): Handle;\n\n\t/**\n\t * Schedule a render.\n\t */\n\tscheduleRender(): void;\n\n\t/**\n\t * Sets the properties for the widget. Responsible for calling the diffing functions for the properties against the\n\t * previous properties. Runs though any registered specific property diff functions collecting the results and then\n\t * runs the remainder through the catch all diff function. The aggregate of the two sets of the results is then\n\t * set as the widget's properties\n\t *\n\t * @param properties The new widget properties\n\t */\n\tsetProperties(properties: P & { [index: string]: any }): void;\n\n\t/**\n\t * Sets the widget's children\n\t */\n\tsetChildren(children: DNode[]): void;\n\n\t/**\n\t * Return a `string` that represents the HTML of the current projection.  The projector needs to be attached.\n\t */\n\ttoHtml(): string;\n\n\t/**\n\t * Root element to attach the projector\n\t */\n\troot: Element;\n\n\t/**\n\t * The status of the projector\n\t */\n\treadonly projectorState: ProjectorAttachState;\n}\n\nconst eventHandlers = [\n\t'ontouchcancel',\n\t'ontouchend',\n\t'ontouchmove',\n\t'ontouchstart',\n\t'onblur',\n\t'onchange',\n\t'onclick',\n\t'ondblclick',\n\t'onfocus',\n\t'oninput',\n\t'onkeydown',\n\t'onkeypress',\n\t'onkeyup',\n\t'onload',\n\t'onmousedown',\n\t'onmouseenter',\n\t'onmouseleave',\n\t'onmousemove',\n\t'onmouseout',\n\t'onmouseover',\n\t'onmouseup',\n\t'onmousewheel',\n\t'onscroll',\n\t'onsubmit'\n];\n\n/**\n * Internal function that maps existing DOM Elements to virtual DOM nodes.\n *\n * The funtion does not presume DOM will be there.  It does assume that if a DOM `Element` exists that the `VNode`s are in\n * the same DOM order as the `Element`s.  If a DOM Element does not exist, it will set the `vnode.domNode` to `null` and\n * not descend further into the `VNode` children which will cause the maquette projection to create the Element anew.\n * @param vnode The virtual DOM node\n * @param domNode The Element, if any, to set on the virtual DOM node\n */\nfunction setDomNodes(vnode: VNode, domNode: Element | null = null) {\n\tvnode.domNode = domNode;\n\tif (vnode.children && domNode) {\n\t\tvnode.children.forEach((child, i) => setDomNodes(child, domNode.children[i]));\n\t}\n}\n\nexport function ProjectorMixin<P, T extends Constructor<WidgetBase<P>>>(Base: T): T & Constructor<ProjectorMixin<P>> {\n\tclass Projector extends Base {\n\n\t\tpublic projectorState: ProjectorAttachState;\n\n\t\tprivate _root: Element;\n\t\tprivate _async = true;\n\t\tprivate _attachHandle: Handle;\n\t\tprivate _projectionOptions: ProjectionOptions;\n\t\tprivate _projection: Projection | undefined;\n\t\tprivate _scheduled: number | undefined;\n\t\tprivate _paused: boolean;\n\t\tprivate _boundDoRender: () => void;\n\t\tprivate _boundRender: Function;\n\t\tprivate _projectorChildren: DNode[];\n\t\tprivate _projectorProperties: P;\n\t\tprivate _rootTagName: string;\n\t\tprivate _attachType: AttachType;\n\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(...args);\n\n\t\t\tthis._projectionOptions = {\n\t\t\t\ttransitions: cssTransitions,\n\t\t\t\teventHandlerInterceptor: this.eventHandlerInterceptor.bind(this)\n\t\t\t};\n\n\t\t\tthis._boundDoRender = this.doRender.bind(this);\n\t\t\tthis._boundRender = this.__render__.bind(this);\n\n\t\t\tthis.own(this.on('widget:children', this.invalidate));\n\t\t\tthis.own(this.on('properties:changed', () => {\n\t\t\t\tthis.scheduleRender();\n\t\t\t}));\n\t\t\tthis.own(this.on('invalidated', this.scheduleRender));\n\n\t\t\tthis.root = document.body;\n\t\t\tthis.projectorState = ProjectorAttachState.Detached;\n\t\t}\n\n\t\tpublic append(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Append,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this.attach(options);\n\t\t}\n\n\t\tpublic merge(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Merge,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this.attach(options);\n\t\t}\n\n\t\tpublic replace(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Replace,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this.attach(options);\n\t\t}\n\n\t\tpublic pause() {\n\t\t\tif (this._scheduled) {\n\t\t\t\tglobal.cancelAnimationFrame(this._scheduled);\n\t\t\t\tthis._scheduled = undefined;\n\t\t\t}\n\t\t\tthis._paused = true;\n\t\t}\n\n\t\tpublic resume() {\n\t\t\tthis._paused = false;\n\t\t\tthis.scheduleRender();\n\t\t}\n\n\t\tpublic scheduleRender() {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached && !this._scheduled && !this._paused) {\n\t\t\t\tif (this._async) {\n\t\t\t\t\tthis._scheduled = global.requestAnimationFrame(this._boundDoRender);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._boundDoRender();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic set root(root: Element) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change root element');\n\t\t\t}\n\t\t\tthis._root = root;\n\t\t}\n\n\t\tpublic get root(): Element {\n\t\t\treturn this._root;\n\t\t}\n\n\t\tpublic sandbox(doc: Document = document): Handle {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot create sandbox');\n\t\t\t}\n\t\t\tthis._async = false;\n\t\t\tconst previousRoot = this.root;\n\n\t\t\t/* free up the document fragment for GC */\n\t\t\tthis.own(createHandle(() => {\n\t\t\t\tthis._root = previousRoot;\n\t\t\t}));\n\t\t\treturn this.attach({\n\t\t\t\t/* DocumentFragment is not assignable to Element, but provides everything needed to work */\n\t\t\t\troot: doc.createDocumentFragment() as any,\n\t\t\t\ttype: AttachType.Append\n\t\t\t});\n\t\t}\n\n\t\tpublic setChildren(children: DNode[]): void {\n\t\t\tthis._projectorChildren = [ ...children ];\n\t\t\tsuper.__setChildren__(children);\n\t\t}\n\n\t\tpublic setProperties(properties: P & { [index: string]: any }): void {\n\t\t\tthis._projectorProperties = assign({}, properties);\n\t\t\tsuper.__setProperties__(properties);\n\t\t}\n\n\t\tpublic toHtml(): string {\n\t\t\tif (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n\t\t\t\tthrow new Error('Projector is not attached, cannot return an HTML string of projection.');\n\t\t\t}\n\t\t\treturn this._projection.domNode.outerHTML;\n\t\t}\n\n\t\tpublic __render__(): VNode {\n\t\t\tif (this._projectorChildren) {\n\t\t\t\tthis.setChildren(this._projectorChildren);\n\t\t\t}\n\t\t\tif (this._projectorProperties) {\n\t\t\t\tthis.setProperties(this._projectorProperties);\n\t\t\t}\n\t\t\tlet result = super.__render__();\n\n\t\t\tif (Array.isArray(result) || typeof result === 'string' || result === null) {\n\t\t\t\tif (!this._rootTagName) {\n\t\t\t\t\tthis._rootTagName = 'span';\n\t\t\t\t}\n\n\t\t\t\tresult = h(this._rootTagName, {}, result);\n\t\t\t}\n\t\t\telse if (!this._rootTagName) {\n\t\t\t\tthis._rootTagName = result.vnodeSelector;\n\t\t\t}\n\n\t\t\tif (this._rootTagName !== result.vnodeSelector) {\n\t\t\t\tif (this._attachType === AttachType.Merge) {\n\t\t\t\t\tassign(result, { vnodeSelector: this._rootTagName });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresult = h(this._rootTagName, {}, result);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tprivate eventHandlerInterceptor(propertyName: string, eventHandler: Function, domNode: Element, properties: VNodeProperties) {\n\t\t\tif (eventHandlers.indexOf(propertyName) > -1) {\n\t\t\t\treturn function(this: Node, ...args: any[]) {\n\t\t\t\t\treturn eventHandler.apply(properties.bind || this, args);\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// remove \"on\" from event name\n\t\t\t\tconst eventName = propertyName.substr(2);\n\t\t\t\tdomNode.addEventListener(eventName, (...args: any[]) => {\n\t\t\t\t\teventHandler.apply(properties.bind || this, args);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate doRender() {\n\t\t\tthis._scheduled = undefined;\n\n\t\t\tif (this._projection) {\n\t\t\t\tthis._projection.update(this._boundRender());\n\t\t\t}\n\t\t}\n\n\t\tprivate attach({ type, root }: AttachOptions): Handle {\n\t\t\tthis._attachType = type;\n\t\t\tif (root) {\n\t\t\t\tthis.root = root;\n\t\t\t}\n\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\treturn this._attachHandle;\n\t\t\t}\n\n\t\t\tthis.projectorState = ProjectorAttachState.Attached;\n\n\t\t\tthis._attachHandle = this.own({\n\t\t\t\tdestroy: () => {\n\t\t\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\tthis._projection = undefined;\n\t\t\t\t\t\tthis.projectorState = ProjectorAttachState.Detached;\n\t\t\t\t\t}\n\t\t\t\t\tthis._attachHandle = { destroy() { } };\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tswitch (type) {\n\t\t\t\tcase AttachType.Append:\n\t\t\t\t\tthis._projection = dom.append(this.root, this._boundRender(), this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t\tcase AttachType.Merge:\n\t\t\t\t\tthis._rootTagName = this._root.tagName.toLowerCase();\n\t\t\t\t\tconst vnode: VNode = this._boundRender();\n\t\t\t\t\tsetDomNodes(vnode, this.root);\n\t\t\t\t\tthis._projection = dom.merge(this.root, vnode, this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t\tcase AttachType.Replace:\n\t\t\t\t\tthis._projection = dom.replace(this.root, this._boundRender(), this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this._attachHandle;\n\t\t}\n\t}\n\n\treturn Projector;\n}\n\nexport default ProjectorMixin;\n"]}