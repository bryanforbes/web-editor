{"version":3,"file":"Projector.js","sourceRoot":"","sources":["Projector.ts"],"names":[],"mappings":"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","sourcesContent":["import { assign } from '@dojo/core/lang';\nimport global from '@dojo/shim/global';\nimport { createHandle } from '@dojo/core/lang';\nimport { Handle } from '@dojo/interfaces/core';\nimport { Evented } from '@dojo/core/Evented';\nimport { VNode } from '@dojo/interfaces/vdom';\nimport { ProjectionOptions } from '../interfaces';\nimport { dom, Projection } from 'maquette';\nimport 'pepjs';\nimport cssTransitions from '../animations/cssTransitions';\nimport { Constructor, DNode } from './../interfaces';\nimport { WidgetBase } from './../WidgetBase';\nimport { afterRender } from './../decorators/afterRender';\nimport { isHNode, v } from './../d';\nimport { Registry } from './../Registry';\nimport eventHandlerInterceptor from '../util/eventHandlerInterceptor';\n\n/**\n * Represents the attach state of the projector\n */\nexport enum ProjectorAttachState {\n\tAttached = 1,\n\tDetached\n}\n\n/**\n * Attach type for the projector\n */\nexport enum AttachType {\n\tAppend = 1,\n\tMerge = 2,\n\tReplace = 3\n}\n\nexport interface AttachOptions {\n\n\t/**\n\t * If `'append'` it will appended to the root. If `'merge'` it will merged with the root. If `'replace'` it will\n\t * replace the root.\n\t */\n\ttype: AttachType;\n\n\t/**\n\t * Element to attach the projector.\n\t */\n\troot?: Element;\n}\n\nexport interface ProjectorProperties {\n\tregistry?: Registry;\n}\n\nexport interface ProjectorMixin<P> {\n\n\treadonly properties: Readonly<P> & Readonly<ProjectorProperties>;\n\n\t/**\n\t * Append the projector to the root.\n\t */\n\tappend(root?: Element): Handle;\n\n\t/**\n\t * Merge the projector onto the root.\n\t *\n\t * The `root` and any of its `children` will be re-used.  Any excess DOM nodes will be ignored and any missing DOM nodes\n\t * will be created.\n\t * @param root The root element that the root virtual DOM node will be merged with.  Defaults to `document.body`.\n\t */\n\tmerge(root?: Element): Handle;\n\n\t/**\n\t * Replace the root with the projector node.\n\t */\n\treplace(root?: Element): Handle;\n\n\t/**\n\t * Pause the projector.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Resume the projector.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Attach the project to a _sandboxed_ document fragment that is not part of the DOM.\n\t *\n\t * When sandboxed, the `Projector` will run in a sync manner, where renders are completed within the same turn.\n\t * The `Projector` creates a `DocumentFragment` which replaces any other `root` that has been set.\n\t * @param doc The `Document` to use, which defaults to the global `document`.\n\t */\n\tsandbox(doc?: Document): Handle;\n\n\t/**\n\t * Schedule a render.\n\t */\n\tscheduleRender(): void;\n\n\t/**\n\t * Sets the properties for the widget. Responsible for calling the diffing functions for the properties against the\n\t * previous properties. Runs though any registered specific property diff functions collecting the results and then\n\t * runs the remainder through the catch all diff function. The aggregate of the two sets of the results is then\n\t * set as the widget's properties\n\t *\n\t * @param properties The new widget properties\n\t */\n\tsetProperties(properties: this['properties']): void;\n\n\t/**\n\t * Sets the widget's children\n\t */\n\tsetChildren(children: DNode[]): void;\n\n\t/**\n\t * Return a `string` that represents the HTML of the current projection.  The projector needs to be attached.\n\t */\n\ttoHtml(): string;\n\n\t/**\n\t * Indicates if the projectors is in async mode, configured to `true` by defaults.\n\t */\n\tasync: boolean;\n\n\t/**\n\t * Root element to attach the projector\n\t */\n\troot: Element;\n\n\t/**\n\t * The status of the projector\n\t */\n\treadonly projectorState: ProjectorAttachState;\n\n\t/**\n\t * Exposes invalidate for projector instances\n\t */\n\tinvalidate(): void;\n}\n\n/**\n * Internal function that maps existing DOM Elements to virtual DOM nodes.\n *\n * The function does not presume DOM will be there.  It does assume that if a DOM `Element` exists that the `VNode`s are in\n * the same DOM order as the `Element`s.  If a DOM Element does not exist, it will set the `vnode.domNode` to `null` and\n * not descend further into the `VNode` children which will cause the maquette projection to create the Element anew.\n * @param vnode The virtual DOM node\n * @param domNode The Element, if any, to set on the virtual DOM node\n */\nfunction setDomNodes(vnode: VNode, domNode: Element | null = null) {\n\tvnode.domNode = domNode;\n\tif (vnode.children && domNode) {\n\t\tvnode.children.forEach((child, i) => setDomNodes(child, domNode.children[i]));\n\t}\n}\n\nexport function ProjectorMixin<P, T extends Constructor<WidgetBase<P>>>(Base: T): T & Constructor<ProjectorMixin<P>> {\n\tclass Projector extends Base {\n\n\t\tpublic projectorState: ProjectorAttachState;\n\t\tpublic properties: Readonly<P> & Readonly<ProjectorProperties>;\n\n\t\tprivate _root: Element;\n\t\tprivate _async = true;\n\t\tprivate _attachHandle: Handle;\n\t\tprivate _projectionOptions: ProjectionOptions;\n\t\tprivate _projection: Projection | undefined;\n\t\tprivate _scheduled: number | undefined;\n\t\tprivate _paused: boolean;\n\t\tprivate _boundDoRender: () => void;\n\t\tprivate _boundRender: Function;\n\t\tprivate _projectorChildren: DNode[] = [];\n\t\tprivate _resetChildren = true;\n\t\tprivate _projectorProperties: this['properties'] = {} as this['properties'];\n\t\tprivate _resetProperties = true;\n\t\tprivate _rootTagName: string;\n\t\tprivate _attachType: AttachType;\n\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(...args);\n\n\t\t\tconst nodeEvent = new Evented();\n\t\t\tthis.own(nodeEvent);\n\n\t\t\tthis._projectionOptions = {\n\t\t\t\ttransitions: cssTransitions,\n\t\t\t\teventHandlerInterceptor: eventHandlerInterceptor.bind(this),\n\t\t\t\tnodeEvent\n\t\t\t};\n\n\t\t\tthis._boundDoRender = this._doRender.bind(this);\n\t\t\tthis._boundRender = this.__render__.bind(this);\n\t\t\tthis.own(this.on('invalidated', () => {\n\t\t\t\tthis.scheduleRender();\n\t\t\t}));\n\n\t\t\tthis.root = document.body;\n\t\t\tthis.projectorState = ProjectorAttachState.Detached;\n\t\t}\n\n\t\tpublic append(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Append,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this._attach(options);\n\t\t}\n\n\t\tpublic merge(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Merge,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this._attach(options);\n\t\t}\n\n\t\tpublic replace(root?: Element) {\n\t\t\tconst options = {\n\t\t\t\ttype: AttachType.Replace,\n\t\t\t\troot\n\t\t\t};\n\n\t\t\treturn this._attach(options);\n\t\t}\n\n\t\tpublic pause() {\n\t\t\tif (this._scheduled) {\n\t\t\t\tglobal.cancelAnimationFrame(this._scheduled);\n\t\t\t\tthis._scheduled = undefined;\n\t\t\t}\n\t\t\tthis._paused = true;\n\t\t}\n\n\t\tpublic resume() {\n\t\t\tthis._paused = false;\n\t\t\tthis.scheduleRender();\n\t\t}\n\n\t\tpublic scheduleRender() {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached && !this._scheduled && !this._paused) {\n\t\t\t\tif (this._async) {\n\t\t\t\t\tthis._scheduled = global.requestAnimationFrame(this._boundDoRender);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._boundDoRender();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpublic set root(root: Element) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change root element');\n\t\t\t}\n\t\t\tthis._root = root;\n\t\t}\n\n\t\tpublic get root(): Element {\n\t\t\treturn this._root;\n\t\t}\n\n\t\tpublic get async(): boolean {\n\t\t\treturn this._async;\n\t\t}\n\n\t\tpublic set async(async: boolean) {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot change async mode');\n\t\t\t}\n\t\t\tthis._async = async;\n\t\t}\n\n\t\tpublic sandbox(doc: Document = document): Handle {\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\tthrow new Error('Projector already attached, cannot create sandbox');\n\t\t\t}\n\t\t\tthis._async = false;\n\t\t\tconst previousRoot = this.root;\n\n\t\t\t/* free up the document fragment for GC */\n\t\t\tthis.own(createHandle(() => {\n\t\t\t\tthis._root = previousRoot;\n\t\t\t}));\n\t\t\treturn this._attach({\n\t\t\t\t/* DocumentFragment is not assignable to Element, but provides everything needed to work */\n\t\t\t\troot: doc.createDocumentFragment() as any,\n\t\t\t\ttype: AttachType.Append\n\t\t\t});\n\t\t}\n\n\t\tpublic setChildren(children: DNode[]): void {\n\t\t\tthis._resetChildren = false;\n\t\t\tthis._projectorChildren = [ ...children ];\n\t\t\tsuper.__setChildren__([ ...children ]);\n\t\t}\n\n\t\tpublic setProperties(properties: this['properties']): void {\n\t\t\tthis._resetProperties = false;\n\t\t\tif (this._projectorProperties && this._projectorProperties.registry !== properties.registry) {\n\t\t\t\tif (this._projectorProperties.registry) {\n\t\t\t\t\tthis._projectorProperties.registry.destroy();\n\t\t\t\t}\n\t\t\t\tif (properties.registry) {\n\t\t\t\t\tthis.own(properties.registry);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._projectorProperties = assign({}, properties);\n\t\t\tsuper.__setCoreProperties__({ bind: this, baseRegistry: properties.registry });\n\t\t\tsuper.__setProperties__(properties);\n\t\t}\n\n\t\tpublic toHtml(): string {\n\t\t\tif (this.projectorState !== ProjectorAttachState.Attached || !this._projection) {\n\t\t\t\tthrow new Error('Projector is not attached, cannot return an HTML string of projection.');\n\t\t\t}\n\t\t\treturn this._projection.domNode.outerHTML;\n\t\t}\n\n\t\t@afterRender()\n\t\tpublic afterRender(result: DNode) {\n\t\t\tlet node = result;\n\t\t\tif (Array.isArray(result) || typeof result === 'string' || result === null || result === undefined) {\n\t\t\t\tif (!this._rootTagName) {\n\t\t\t\t\tthis._rootTagName = 'span';\n\t\t\t\t}\n\n\t\t\t\tnode = v(this._rootTagName);\n\t\t\t\tnode.children = Array.isArray(result) ? result : [ result ];\n\t\t\t}\n\t\t\telse if (isHNode(node) && !this._rootTagName) {\n\t\t\t\tthis._rootTagName = node.tag;\n\t\t\t}\n\n\t\t\tif (isHNode(node)) {\n\t\t\t\tif (this._rootTagName !== node.tag) {\n\t\t\t\t\tif (this._attachType === AttachType.Merge) {\n\t\t\t\t\t\tnode.tag = this._rootTagName;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnode = v(this._rootTagName);\n\t\t\t\t\t\tnode.children = Array.isArray(result) ? result : [ result ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tpublic __render__(): VNode {\n\t\t\tif (this._resetChildren) {\n\t\t\t\tthis.setChildren(this._projectorChildren);\n\t\t\t}\n\t\t\tif (this._resetProperties) {\n\t\t\t\tthis.setProperties(this._projectorProperties);\n\t\t\t}\n\t\t\tthis._resetChildren = true;\n\t\t\tthis._resetProperties = true;\n\t\t\treturn super.__render__() as VNode;\n\t\t}\n\n\t\tpublic invalidate(): void {\n\t\t\tsuper.invalidate();\n\t\t\tthis.scheduleRender();\n\t\t}\n\n\t\tprivate _doRender() {\n\t\t\tthis._scheduled = undefined;\n\n\t\t\tif (this._projection) {\n\t\t\t\tthis._projection.update(this._boundRender());\n\t\t\t\tthis._projectionOptions.nodeEvent.emit({ type: 'rendered' });\n\t\t\t}\n\t\t}\n\n\t\tprivate _attach({ type, root }: AttachOptions): Handle {\n\t\t\tthis._attachType = type;\n\t\t\tif (root) {\n\t\t\t\tthis.root = root;\n\t\t\t}\n\n\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\treturn this._attachHandle;\n\t\t\t}\n\n\t\t\tthis.projectorState = ProjectorAttachState.Attached;\n\n\t\t\tthis._attachHandle = this.own({\n\t\t\t\tdestroy: () => {\n\t\t\t\t\tif (this.projectorState === ProjectorAttachState.Attached) {\n\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\tthis._projection = undefined;\n\t\t\t\t\t\tthis.projectorState = ProjectorAttachState.Detached;\n\t\t\t\t\t}\n\t\t\t\t\tthis._attachHandle = { destroy() { } };\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tswitch (type) {\n\t\t\t\tcase AttachType.Append:\n\t\t\t\t\tthis._projection = dom.append(this.root, this._boundRender(), this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t\tcase AttachType.Merge:\n\t\t\t\t\tthis._rootTagName = this._root.tagName.toLowerCase();\n\t\t\t\t\tconst vnode: VNode = this._boundRender();\n\t\t\t\t\tsetDomNodes(vnode, this.root);\n\t\t\t\t\tthis._projection = dom.merge(this.root, vnode, this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t\tcase AttachType.Replace:\n\t\t\t\t\tthis._projection = dom.replace(this.root, this._boundRender(), this._projectionOptions);\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis._projectionOptions.nodeEvent.emit({ type: 'rendered' });\n\n\t\t\treturn this._attachHandle;\n\t\t}\n\t}\n\n\treturn Projector;\n}\n\nexport default ProjectorMixin;\n"]}