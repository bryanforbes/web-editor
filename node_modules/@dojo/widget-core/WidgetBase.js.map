{"version":3,"file":"WidgetBase.js","sourceRoot":"","sources":["WidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseEventedEvents, Evented } from '@dojo/core/Evented';\nimport { EventedListenerOrArray } from '@dojo/interfaces/bases';\nimport { Handle } from '@dojo/interfaces/core';\nimport { ProjectionOptions, VNodeProperties } from '@dojo/interfaces/vdom';\nimport Map from '@dojo/shim/Map';\nimport Promise from '@dojo/shim/Promise';\nimport Set from '@dojo/shim/Set';\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { decorate, isHNode, isWNode, registry, v } from './d';\nimport diff, { DiffType } from './diff';\nimport {\n\tAfterRender,\n\tBeforeRender,\n\tDNode,\n\tHNode,\n\tPropertyChangeRecord,\n\tPropertiesChangeEvent,\n\tRegistryLabel,\n\tRender,\n\tVirtualDomNode,\n\tWidgetMetaConstructor,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode\n} from './interfaces';\nimport MetaBase from './meta/Base';\nimport RegistryHandler from './RegistryHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './WidgetRegistry';\n\nexport { DiffType };\n\n/**\n * Widget cache wrapper for instance management\n */\ninterface WidgetCacheWrapper {\n\tchild: WidgetBaseInterface<WidgetProperties>;\n\twidgetConstructor: WidgetBaseConstructor;\n\tused: boolean;\n}\n\nexport interface InternalWNode extends WNode {\n\tproperties: {\n\t\tbind: any;\n\t};\n}\nexport interface InternalHNode extends HNode {\n\tproperties: {\n\t\tbind: any;\n\t};\n}\n\nenum WidgetRenderState {\n\tIDLE = 1,\n\tPROPERTIES,\n\tRENDER\n}\n\n/**\n * Diff property configuration\n */\ninterface DiffPropertyConfig {\n\tpropertyName: string;\n\tdiffType: DiffType;\n\tdiffFunction?<P>(previousProperty: P, newProperty: P): PropertyChangeRecord;\n}\n\nexport interface WidgetBaseEvents<P extends WidgetProperties> extends BaseEventedEvents {\n\t(type: 'properties:changed', handler: EventedListenerOrArray<WidgetBase<P>, PropertiesChangeEvent<WidgetBase<P>, P>>): Handle;\n}\n\nconst decoratorMap = new Map<Function, Map<string, any[]>>();\n\n/**\n * Decorator that can be used to register a function to run as an aspect to `render`\n */\nexport function afterRender(method: Function): (target: any) => void;\nexport function afterRender(): (target: any, propertyKey: string) => void;\nexport function afterRender(method?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('afterRender', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\n/**\n * Decorator that can be used to register a reducer function to run as an aspect before to `render`\n */\nexport function beforeRender(method: Function): (target: any) => void;\nexport function beforeRender(): (target: any, propertyKey: string) => void;\nexport function beforeRender(method?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('beforeRender', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\n/**\n * Decorator that can be used to register a function as a specific property diff\n *\n * @param propertyName  The name of the property of which the diff function is applied\n * @param diffType      The diff type, default is DiffType.AUTO.\n * @param diffFunction  A diff function to run if diffType if DiffType.CUSTOM\n */\nexport function diffProperty(propertyName: string, diffType = DiffType.AUTO, diffFunction?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('diffProperty', {\n\t\t\tpropertyName,\n\t\t\tdiffType: propertyKey ? DiffType.CUSTOM : diffType,\n\t\t\tdiffFunction: propertyKey ? target[propertyKey] : diffFunction\n\t\t});\n\t});\n}\n\n/**\n * Decorator used to register listeners to the `properties:changed` event.\n */\nexport function onPropertiesChanged(method: Function): (target: any) => void;\nexport function onPropertiesChanged(): (target: any, propertyKey: any) => void;\nexport function onPropertiesChanged(method?: Function) {\n\treturn handleDecorator((target, propertyKey) => {\n\t\ttarget.addDecorator('onPropertiesChanged', propertyKey ? target[propertyKey] : method);\n\t});\n}\n\n/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: (target: any, propertyKey?: string) => void) {\n\treturn function (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t}\n\t\telse {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\n/**\n * Function that identifies DNodes that are HNodes with key properties.\n */\nfunction isHNodeWithKey(node: DNode): node is HNode {\n\treturn isHNode(node) && (node.properties != null) && (node.properties.key != null);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\n@diffProperty('bind', DiffType.REFERENCE)\nexport class WidgetBase<P extends WidgetProperties = WidgetProperties, C extends DNode = DNode> extends Evented implements WidgetBaseInterface<P, C> {\n\n\t/**\n\t * static identifier\n\t */\n\tstatic _type: symbol = WIDGET_BASE_TYPE;\n\n\t/**\n\t * on for the events defined for widget base\n\t */\n\tpublic on: WidgetBaseEvents<P>;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * marker indicating if the widget requires a render\n\t */\n\tprivate _dirty: boolean;\n\n\t/**\n\t * cachedVNode from previous render\n\t */\n\tprivate _cachedVNode?: VirtualDomNode | VirtualDomNode[];\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate  _properties: P;\n\n\t/**\n\t * properties from the previous render\n\t */\n\tprivate _previousProperties: P & { [index: string]: any };\n\n\t/**\n\t * cached chldren map for instance management\n\t */\n\tprivate _cachedChildrenMap: Map<RegistryLabel | Promise<WidgetBaseConstructor> | WidgetBaseConstructor, WidgetCacheWrapper[]>;\n\n\t/**\n\t * map of specific property diff functions\n\t */\n\tprivate _diffPropertyFunctionMap: Map<string, string>;\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\t/**\n\t * set of render decorators\n\t */\n\tprivate _renderDecorators: Set<string>;\n\n\tprivate _registries: RegistryHandler;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, { boundFunc: (...args: any[]) => any, scope: any }>;\n\n\tprivate _renderState: WidgetRenderState = WidgetRenderState.IDLE;\n\n\tprivate _metaMap = new WeakMap<WidgetMetaConstructor<any>, MetaBase>();\n\n\tprivate _nodeMap = new Map<string, HTMLElement>();\n\n\tprivate _requiredNodes = new Set<string>();\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper({});\n\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = <P> {};\n\t\tthis._previousProperties = <P> {};\n\t\tthis._cachedChildrenMap = new Map<string | Promise<WidgetBaseConstructor> | WidgetBaseConstructor, WidgetCacheWrapper[]>();\n\t\tthis._diffPropertyFunctionMap = new Map<string, string>();\n\t\tthis._renderDecorators = new Set<string>();\n\t\tthis._bindFunctionPropertyMap = new WeakMap<(...args: any[]) => any, { boundFunc: (...args: any[]) => any, scope: any }>();\n\t\tthis._registries = new RegistryHandler();\n\t\tthis._registries.add(registry);\n\t\tthis.own(this._registries);\n\n\t\tthis.own(this._registries.on('invalidate', this.invalidate.bind(this)));\n\n\t\tthis.own(this.on('properties:changed', (evt) => {\n\t\t\tthis._dirty = true;\n\n\t\t\tconst propertiesChangedListeners = this.getDecorator('onPropertiesChanged');\n\t\t\tpropertiesChangedListeners.forEach((propertiesChangedFunction) => {\n\t\t\t\tpropertiesChangedFunction.call(this, evt);\n\t\t\t});\n\t\t}));\n\n\t\tthis._checkOnElementUsage();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tnodes: this._nodeMap,\n\t\t\t\trequiredNodes: this._requiredNodes,\n\t\t\t\tinvalidate: this.invalidate.bind(this)\n\t\t\t});\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\t/**\n\t * A render decorator that verifies nodes required in\n\t * 'meta' calls in this render,\n\t */\n\t@beforeRender()\n\tprotected verifyRequiredNodes(renderFunc: () => DNode, properties: WidgetProperties, children: DNode[]): () => DNode {\n\t\treturn () => {\n\t\t\tthis._requiredNodes.forEach((element, key) => {\n\t\t\t\tif (!this._nodeMap.has(key)) {\n\t\t\t\t\tthrow new Error(`Required node ${key} not found`);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis._requiredNodes.clear();\n\t\t\treturn renderFunc();\n\t\t};\n\t}\n\n\t/**\n\t * A render decorator that clears the node map used\n\t * by 'meta' calls in this render.\n\t */\n\t@afterRender()\n\tclearNodeMap(node: DNode | DNode[]): DNode | DNode[] {\n\t\tthis._nodeMap.clear();\n\t\treturn node;\n\t}\n\n\t/**\n\t * A render decorator that registers vnode callbacks for 'afterCreate' and\n\t * 'afterUpdate' that will in turn call lifecycle methods onElementCreated and onElementUpdated.\n\t */\n\t@afterRender()\n\tprotected attachLifecycleCallbacks (node: DNode | DNode[]): DNode | DNode[] {\n\t\t// Create vnode afterCreate and afterUpdate callback functions that will only be set on nodes\n\t\t// with \"key\" properties.\n\n\t\tdecorate(node, (node: HNode) => {\n\t\t\tnode.properties.afterCreate = this._afterCreateCallback;\n\t\t\tnode.properties.afterUpdate = this._afterUpdateCallback;\n\t\t}, isHNodeWithKey);\n\n\t\treturn node;\n\t}\n\n\t@afterRender()\n\tprotected decorateBind(node: DNode | DNode[]): DNode | DNode[] {\n\t\tdecorate(node, (node: InternalWNode | InternalHNode) => {\n\t\t\tconst { properties = {} }: { properties: { bind?: any } } = node;\n\t\t\tif (!properties.bind) {\n\t\t\t\tproperties.bind = this;\n\t\t\t}\n\t\t}, (node: DNode) => {\n\t\t\treturn isHNode(node) || isWNode(node);\n\t\t});\n\t\treturn node;\n\t}\n\n\t/**\n\t * vnode afterCreate callback that calls the onElementCreated lifecycle method.\n\t */\n\tprivate _afterCreateCallback(\n\t\telement: Element,\n\t\tprojectionOptions: ProjectionOptions,\n\t\tvnodeSelector: string,\n\t\tproperties: VNodeProperties\n\t): void {\n\t\tthis._setNode(element, properties);\n\t\tthis.onElementCreated(element, String(properties.key));\n\t}\n\n\t/**\n\t * vnode afterUpdate callback that calls the onElementUpdated lifecycle method.\n\t */\n\tprivate _afterUpdateCallback(\n\t\telement: Element,\n\t\tprojectionOptions: ProjectionOptions,\n\t\tvnodeSelector: string,\n\t\tproperties: VNodeProperties\n\t): void {\n\t\tthis._setNode(element, properties);\n\t\tthis.onElementUpdated(element, String(properties.key));\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node is created for a vnode.\n\t * Override this method to access the dom nodes that were inserted into the dom.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementCreated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node that is associated with a vnode is updated.\n\t * Note: this method is dependant on the Maquette afterUpdate callback which is called if a dom\n\t * node might have been updated.  Maquette does not guarantee the dom node was updated.\n\t * Override this method to access the dom node.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementUpdated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprivate _setNode(element: Element, properties: VNodeProperties): void {\n\t\tthis._nodeMap.set(String(properties.key), <HTMLElement> element);\n\t}\n\n\tpublic get properties(): Readonly<P> {\n\t\treturn this._properties;\n\t}\n\n\tpublic __setProperties__(originalProperties: P): void {\n\t\tconst { bind, ...properties } = <any> originalProperties;\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\t\tconst diffPropertyResults: { [index: string]: any } = {};\n\t\tconst diffPropertyChangedKeys: string[] = [];\n\n\t\tthis._bindFunctionProperties(properties, bind);\n\n\t\tconst registeredDiffPropertyConfigs: DiffPropertyConfig[] = this.getDecorator('diffProperty');\n\n\t\tconst allProperties = [...Object.keys(this._previousProperties), ...Object.keys(properties)].filter((value, index, self) => {\n\t\t\treturn self.indexOf(value) === index;\n\t\t});\n\n\t\tconst propertyDiffHandlers = allProperties.reduce((diffFunctions: any, propertyName) => {\n\t\t\tdiffFunctions[propertyName] = [\n\t\t\t\t...registeredDiffPropertyConfigs.filter(value => {\n\t\t\t\t\treturn value.propertyName === propertyName;\n\t\t\t\t})\n\t\t\t];\n\n\t\t\treturn diffFunctions;\n\t\t}, {});\n\n\t\tallProperties.forEach(propertyName => {\n\t\t\tconst previousValue = this._previousProperties[propertyName];\n\t\t\tconst newValue = (<any> properties)[propertyName];\n\t\t\tconst diffHandlers = propertyDiffHandlers[propertyName];\n\t\t\tlet result: PropertyChangeRecord = {\n\t\t\t\tchanged: false,\n\t\t\t\tvalue: newValue\n\t\t\t};\n\n\t\t\tif (diffHandlers.length) {\n\t\t\t\tfor (let i = 0; i < diffHandlers.length; i++) {\n\t\t\t\t\tconst { diffFunction, diffType } = diffHandlers[i];\n\n\t\t\t\t\tconst meta = {\n\t\t\t\t\t\tdiffFunction: diffFunction,\n\t\t\t\t\t\tscope: this\n\t\t\t\t\t};\n\n\t\t\t\t\tresult = diff(propertyName, diffType, previousValue, newValue, meta);\n\n\t\t\t\t\tif (result.changed) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tresult = diff(propertyName, DiffType.AUTO, previousValue, newValue);\n\t\t\t}\n\n\t\t\tif (propertyName in properties) {\n\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t}\n\n\t\t\tif (result.changed) {\n\t\t\t\tdiffPropertyChangedKeys.push(propertyName);\n\t\t\t}\n\t\t});\n\n\t\tthis._properties = <P> diffPropertyResults;\n\n\t\tif (diffPropertyChangedKeys.length) {\n\t\t\tthis.emit({\n\t\t\t\ttype: 'properties:changed',\n\t\t\t\ttarget: this,\n\t\t\t\tproperties: this.properties,\n\t\t\t\tchangedPropertyKeys: diffPropertyChangedKeys\n\t\t\t});\n\t\t}\n\t\tthis._previousProperties = this.properties;\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length || children.length) {\n\t\t\tthis._dirty = true;\n\t\t\tthis._children = children;\n\t\t\tthis.emit({\n\t\t\t\ttype: 'widget:children',\n\t\t\t\ttarget: this\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic __render__(): VirtualDomNode | VirtualDomNode[] {\n\t\tthis._renderState = WidgetRenderState.RENDER;\n\t\tif (this._dirty || !this._cachedVNode) {\n\t\t\tthis._dirty = false;\n\t\t\tconst render = this._runBeforeRenders();\n\t\t\tlet dNode = render();\n\t\t\tdNode = this._runAfterRenders(dNode);\n\t\t\tconst widget = this._dNodeToVNode(dNode);\n\t\t\tthis._manageDetachedChildren();\n\t\t\tif (widget) {\n\t\t\t\tthis._cachedVNode = widget;\n\t\t\t}\n\t\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\t\treturn widget;\n\t\t}\n\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\treturn this._cachedVNode;\n\t}\n\n\tprotected invalidate(): void {\n\t\tif (this._renderState === WidgetRenderState.IDLE) {\n\t\t\tthis._dirty = true;\n\t\t\tthis.emit({\n\t\t\t\ttype: 'invalidated',\n\t\t\t\ttarget: this\n\t\t\t});\n\t\t}\n\t\telse if (this._renderState === WidgetRenderState.PROPERTIES) {\n\t\t\tthis._dirty = true;\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [ value ];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t}\n\t\telse {\n\t\t\tconst decorators = this._decoratorCache.get(decoratorKey) || [];\n\t\t\tthis._decoratorCache.set(decoratorKey, [ ...decorators, ...value ]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet allDecorators = this._decoratorCache.get(decoratorKey);\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperties(properties: any, bind: any): void {\n\t\tObject.keys(properties).forEach((propertyKey) => {\n\t\t\tconst property = properties[propertyKey];\n\n\t\t\tif (typeof property === 'function' && !isWidgetBaseConstructor(property)) {\n\t\t\t\tconst bindInfo = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\t\tif (!boundFunc || scope !== bind) {\n\t\t\t\t\tboundFunc = property.bind(bind);\n\t\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t\t}\n\t\t\t\tproperties[propertyKey] = boundFunc;\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected get registries(): RegistryHandler {\n\t\treturn this._registries;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\tif (!updatedRender) {\n\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\treturn render;\n\t\t\t}\n\t\t\treturn updatedRender;\n\t\t}, this.render.bind(this));\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\treturn afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\tconst updatedDNode = afterRenderFunction.call(this, dNode);\n\t\t\tif (!updatedDNode) {\n\t\t\t\tconsole.warn('DNodes not returned from afterRender, using existing dNodes');\n\t\t\t\treturn dNode;\n\t\t\t}\n\t\t\treturn updatedDNode;\n\t\t}, dNode);\n\t}\n\n\t/**\n\t * Process a structure of DNodes into VNodes, string or null. `null` results are filtered.\n\t *\n\t * @param dNode the dnode to process\n\t * @returns a VNode, string or null\n\t */\n\tprivate _dNodeToVNode(dNode: DNode): VirtualDomNode;\n\tprivate _dNodeToVNode(dNode: DNode[]): VirtualDomNode[];\n\tprivate _dNodeToVNode(dNode: DNode | DNode[]): VirtualDomNode | VirtualDomNode[];\n\tprivate _dNodeToVNode(dNode: DNode | DNode[]): VirtualDomNode | VirtualDomNode[] {\n\t\tif (typeof dNode === 'string' || dNode === null || dNode === undefined) {\n\t\t\treturn dNode;\n\t\t}\n\n\t\tif (Array.isArray(dNode)) {\n\t\t\treturn dNode.map((node) => this._dNodeToVNode(node));\n\t\t}\n\n\t\tif (isWNode(dNode)) {\n\t\t\tconst { children, properties = {} } = dNode;\n\t\t\tconst { key } = properties;\n\n\t\t\tlet { widgetConstructor } = dNode;\n\t\t\tlet child: WidgetBaseInterface<WidgetProperties>;\n\n\t\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\t\tconst item = this._registries.get(widgetConstructor);\n\t\t\t\tif (item === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\twidgetConstructor = <WidgetBaseConstructor> item;\n\t\t\t}\n\n\t\t\tconst childrenMapKey = key || widgetConstructor;\n\t\t\tlet cachedChildren = this._cachedChildrenMap.get(childrenMapKey) || [];\n\t\t\tlet cachedChild: WidgetCacheWrapper | undefined;\n\t\t\tcachedChildren.some((cachedChildWrapper) => {\n\t\t\t\tif (cachedChildWrapper.widgetConstructor === widgetConstructor && !cachedChildWrapper.used) {\n\t\t\t\t\tcachedChild = cachedChildWrapper;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\tif (cachedChild) {\n\t\t\t\tchild = cachedChild.child;\n\t\t\t\tchild.__setProperties__(properties);\n\t\t\t\tcachedChild.used = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchild = new widgetConstructor();\n\t\t\t\tchild.__setProperties__(properties);\n\t\t\t\tchild.own(child.on('invalidated', () => {\n\t\t\t\t\tthis.invalidate();\n\t\t\t\t}));\n\t\t\t\tcachedChildren = [...cachedChildren, { child, widgetConstructor, used: true }];\n\t\t\t\tthis._cachedChildrenMap.set(childrenMapKey, cachedChildren);\n\t\t\t\tthis.own(child);\n\t\t\t}\n\t\t\tif (typeof childrenMapKey !== 'string' && cachedChildren.length > 1) {\n\t\t\t\tconst widgetName = (<any> childrenMapKey).name;\n\t\t\t\tlet errorMsg = 'It is recommended to provide a unique \\'key\\' property when using the same widget multiple times';\n\n\t\t\t\tif (widgetName) {\n\t\t\t\t\terrorMsg = `It is recommended to provide a unique 'key' property when using the same widget (${widgetName}) multiple times`;\n\t\t\t\t}\n\n\t\t\t\tconsole.warn(errorMsg);\n\t\t\t\tthis.emit({ type: 'error', target: this, error: new Error(errorMsg) });\n\t\t\t}\n\n\t\t\tchild.__setChildren__(children);\n\t\t\treturn child.__render__();\n\t\t}\n\n\t\tdNode.vNodes = dNode.children\n\t\t.filter((child) => child !== null && child !== undefined)\n\t\t.map((child: DNode) => {\n\t\t\treturn this._dNodeToVNode(child);\n\t\t});\n\n\t\treturn dNode.render();\n\t}\n\n\t/**\n\t * Manage widget instances after render processing\n\t */\n\tprivate _manageDetachedChildren(): void {\n\t\tthis._cachedChildrenMap.forEach((cachedChildren, key) => {\n\t\t\tconst filterCachedChildren = cachedChildren.filter((cachedChild) => {\n\t\t\t\tif (cachedChild.used) {\n\t\t\t\t\tcachedChild.used = false;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcachedChild.child.destroy();\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tthis._cachedChildrenMap.set(key, filterCachedChildren);\n\t\t});\n\t}\n\n\tprivate _checkOnElementUsage() {\n\t\tconst name = (<any> this).constructor.name || 'unknown';\n\t\tif (this.onElementCreated !== WidgetBase.prototype.onElementCreated) {\n\t\t\tconsole.warn(`Usage of 'onElementCreated' has been deprecated and will be removed in a future version, see https://github.com/dojo/widget-core/issues/559 for details (${name})`);\n\t\t}\n\t\tif (this.onElementUpdated !== WidgetBase.prototype.onElementUpdated) {\n\t\t\tconsole.warn(`Usage of 'onElementUpdated' has been deprecated and will be removed in a future version, see https://github.com/dojo/widget-core/issues/559 for details (${name})`);\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n"]}