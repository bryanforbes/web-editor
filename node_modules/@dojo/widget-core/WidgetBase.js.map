{"version":3,"file":"WidgetBase.js","sourceRoot":"","sources":["WidgetBase.ts"],"names":[],"mappings":"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","sourcesContent":["import { Evented } from '@dojo/core/Evented';\nimport { VNodeProperties } from '@dojo/interfaces/vdom';\nimport { ProjectionOptions } from './interfaces';\nimport Map from '@dojo/shim/Map';\nimport '@dojo/shim/Promise'; // Imported for side-effects\nimport WeakMap from '@dojo/shim/WeakMap';\nimport { Handle } from '@dojo/interfaces/core';\nimport { isWNode, v, isHNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tCoreProperties,\n\tDiffPropertyReaction,\n\tDNode,\n\tRender,\n\tVirtualDomNode,\n\tWidgetMetaBase,\n\tWidgetMetaConstructor,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\n\n/**\n * Widget cache wrapper for instance management\n */\ninterface WidgetCacheWrapper {\n\tchild: WidgetBaseInterface<WidgetProperties>;\n\twidgetConstructor: WidgetBaseConstructor;\n\tused: boolean;\n}\n\nenum WidgetRenderState {\n\tIDLE = 1,\n\tPROPERTIES,\n\tCHILDREN,\n\tRENDER\n}\n\ninterface ReactionFunctionArguments {\n\tpreviousProperties: any;\n\tnewProperties: any;\n\tchanged: boolean;\n}\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any, scope: any };\n\nconst decoratorMap = new Map<Function, Map<string, any[]>>();\nconst boundAuto = auto.bind(null);\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> extends Evented implements WidgetBaseInterface<P, C> {\n\n\t/**\n\t * static identifier\n\t */\n\tstatic _type: symbol = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * marker indicating if the widget requires a render\n\t */\n\tprivate _dirty: boolean;\n\n\t/**\n\t * cachedVNode from previous render\n\t */\n\tprivate _cachedVNode?: VirtualDomNode | VirtualDomNode[];\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * Core properties widget base sets for all widget\n\t */\n\tprivate _coreProperties: CoreProperties = {} as CoreProperties;\n\n\t/**\n\t * cached children map for instance management\n\t */\n\tprivate _cachedChildrenMap: Map<string | number | Promise<WidgetBaseConstructor> | WidgetBaseConstructor, WidgetCacheWrapper[]>;\n\n\t/**\n\t * map of specific property diff functions\n\t */\n\tprivate _diffPropertyFunctionMap: Map<string, string>;\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData>;\n\n\tprivate _renderState: WidgetRenderState = WidgetRenderState.IDLE;\n\n\tprivate _metaMap = new WeakMap<WidgetMetaConstructor<any>, WidgetMetaBase>();\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler;\n\n\tprivate _projectorAttachEvent: Handle;\n\n\tprivate _currentRootNode = 0;\n\n\tprivate _numRootNodes = 0;\n\n\tprivate _rootNodeKeys: object[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper({});\n\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = <P> {};\n\t\tthis._cachedChildrenMap = new Map<string | Promise<WidgetBaseConstructor> | WidgetBaseConstructor, WidgetCacheWrapper[]>();\n\t\tthis._diffPropertyFunctionMap = new Map<string, string>();\n\t\tthis._bindFunctionPropertyMap = new WeakMap<(...args: any[]) => any, { boundFunc: (...args: any[]) => any, scope: any }>();\n\t\tthis._registry = new RegistryHandler();\n\t\tthis._nodeHandler = new NodeHandler();\n\t\tthis.own(this._registry);\n\t\tthis.own(this._nodeHandler);\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t}\n\n\tprotected meta<T extends WidgetMetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler\n\t\t\t});\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t\tthis.own(cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\t/**\n\t * vnode afterCreate callback that calls the onElementCreated lifecycle method.\n\t */\n\tprivate _afterCreateCallback(\n\t\telement: HTMLElement,\n\t\tprojectionOptions: ProjectionOptions,\n\t\tvnodeSelector: string,\n\t\tproperties: VNodeProperties\n\t): void {\n\t\tthis._addElementToNodeHandler(element, projectionOptions, properties);\n\t\tthis.onElementCreated(element, String(properties.key));\n\t}\n\n\t/**\n\t * vnode afterUpdate callback that calls the onElementUpdated lifecycle method.\n\t */\n\tprivate _afterUpdateCallback(\n\t\telement: HTMLElement,\n\t\tprojectionOptions: ProjectionOptions,\n\t\tvnodeSelector: string,\n\t\tproperties: VNodeProperties\n\t): void {\n\t\tthis._addElementToNodeHandler(element, projectionOptions, properties);\n\t\tthis.onElementUpdated(element, String(properties.key));\n\t}\n\n\tprivate _addElementToNodeHandler(element: HTMLElement, projectionOptions: ProjectionOptions, properties: VNodeProperties) {\n\t\tconst isRootNode = !properties.key || this._rootNodeKeys.indexOf(properties.key) > -1;\n\t\tconst hasKey = !!properties.key;\n\t\tlet isLastRootNode = false;\n\n\t\tif (isRootNode) {\n\t\t\tthis._currentRootNode++;\n\t\t\tisLastRootNode = (this._currentRootNode === this._numRootNodes);\n\n\t\t\tif (this._projectorAttachEvent === undefined) {\n\t\t\t\tthis._projectorAttachEvent = projectionOptions.nodeEvent.on('rendered', () => {\n\t\t\t\t\tthis._nodeHandler.addProjector();\n\t\t\t\t});\n\t\t\t\tthis.own(this._projectorAttachEvent);\n\t\t\t}\n\t\t}\n\n\t\tif (isLastRootNode) {\n\t\t\tthis._nodeHandler.addRoot(element, properties);\n\t\t}\n\t\telse if (hasKey) {\n\t\t\tthis._nodeHandler.add(element, properties);\n\t\t}\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node is created for a vnode.\n\t * Override this method to access the dom nodes that were inserted into the dom.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementCreated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\t/**\n\t * Widget lifecycle method that is called whenever a dom node that is associated with a vnode is updated.\n\t * Note: this method is dependant on the Maquette afterUpdate callback which is called if a dom\n\t * node might have been updated.  Maquette does not guarantee the dom node was updated.\n\t * Override this method to access the dom node.\n\t * @param element The dom node represented by the vdom node.\n\t * @param key The vdom node's key.\n\t */\n\tprotected onElementUpdated(element: Element, key: string): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [ ...this._changedPropertyKeys ];\n\t}\n\n\tpublic __setCoreProperties__(coreProperties: CoreProperties): void {\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\t\tconst { baseRegistry } = coreProperties;\n\n\t\tif (this._coreProperties.baseRegistry !== baseRegistry) {\n\t\t\tthis._registry.base = baseRegistry;\n\t\t\tthis.invalidate();\n\t\t}\n\t\tthis._coreProperties = coreProperties;\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties']): void {\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst allProperties = [ ...Object.keys(properties), ...Object.keys(this._properties) ];\n\t\tconst checkedProperties: string[] = [];\n\t\tconst diffPropertyResults: any = {};\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tlet runReactions = false;\n\n\t\tthis._renderState = WidgetRenderState.PROPERTIES;\n\n\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\tconst propertyName = allProperties[i];\n\t\t\tif (checkedProperties.indexOf(propertyName) > 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcheckedProperties.push(propertyName);\n\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], this._coreProperties.bind);\n\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\trunReactions = true;\n\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (runReactions) {\n\t\t\tthis._mapDiffPropertyReactions(properties, changedPropertyKeys).forEach((args, reaction) => {\n\t\t\t\tif (args.changed) {\n\t\t\t\t\treaction.call(this, args.previousProperties, args.newProperties);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis._properties = diffPropertyResults;\n\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\n\t\tif (changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tthis._renderState = WidgetRenderState.CHILDREN;\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic __render__(): VirtualDomNode | VirtualDomNode[] {\n\t\tthis._renderState = WidgetRenderState.RENDER;\n\t\tif (this._dirty === true || this._cachedVNode === undefined) {\n\t\t\tthis._dirty = false;\n\t\t\tconst render = this._runBeforeRenders();\n\t\t\tlet dNode = render();\n\t\t\tdNode = this.runAfterRenders(dNode);\n\t\t\tthis._decorateNodes(dNode);\n\t\t\tconst widget = this._dNodeToVNode(dNode);\n\t\t\tthis._manageDetachedChildren();\n\t\t\tthis._nodeHandler.clear();\n\t\t\tthis._cachedVNode = widget;\n\t\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\t\treturn widget;\n\t\t}\n\t\tthis._renderState = WidgetRenderState.IDLE;\n\t\treturn this._cachedVNode;\n\t}\n\n\tprivate _decorateNodes(node: DNode | DNode[]) {\n\t\tlet nodes = Array.isArray(node) ? [ ...node ] : [ node ];\n\n\t\tthis._numRootNodes = nodes.length;\n\t\tthis._currentRootNode =  0;\n\t\tconst rootNodes: DNode[] = [];\n\t\tthis._rootNodeKeys = [];\n\n\t\tnodes.forEach(node => {\n\t\t\tif (isHNode(node)) {\n\t\t\t\trootNodes.push(node);\n\t\t\t\tnode.properties = node.properties || {};\n\t\t\t\tif (node.properties.key) {\n\t\t\t\t\tthis._rootNodeKeys.push(node.properties.key);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\twhile (nodes.length) {\n\t\t\tconst node = nodes.pop();\n\t\t\tif (isHNode(node) || isWNode(node)) {\n\t\t\t\tnode.properties = node.properties || {};\n\t\t\t\tif (isHNode(node)) {\n\t\t\t\t\tif (rootNodes.indexOf(node) !== -1 || node.properties.key) {\n\t\t\t\t\t\tnode.properties.afterCreate = this._afterCreateCallback;\n\t\t\t\t\t\tnode.properties.afterUpdate = this._afterUpdateCallback;\n\t\t\t\t\t}\n\t\t\t\t\tif (node.properties.bind === undefined) {\n\t\t\t\t\t\t(<any> node.properties).bind = this;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (!node.coreProperties) {\n\t\t\t\t\t\tnode.coreProperties = {\n\t\t\t\t\t\t\tbind: this,\n\t\t\t\t\t\t\tbaseRegistry: this._coreProperties.baseRegistry\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnodes = [ ...nodes, ...node.children ];\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected invalidate(): void {\n\t\tif (this._renderState === WidgetRenderState.IDLE) {\n\t\t\tthis._dirty = true;\n\t\t\tthis.emit({\n\t\t\t\ttype: 'invalidated',\n\t\t\t\ttarget: this\n\t\t\t});\n\t\t}\n\t\telse if (this._renderState === WidgetRenderState.PROPERTIES) {\n\t\t\tthis._dirty = true;\n\t\t}\n\t\telse if (this._renderState === WidgetRenderState.CHILDREN) {\n\t\t\tthis._dirty = true;\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [ value ];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t}\n\t\telse {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [ ...decorators, ...value ]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet allDecorators = this._decoratorCache.get(decoratorKey);\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\tprivate _mapDiffPropertyReactions(newProperties: any, changedPropertyKeys: string[]): Map<Function, ReactionFunctionArguments> {\n\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\n\t\treturn reactionFunctions.reduce((reactionPropertyMap, { reaction, propertyName }) => {\n\t\t\tlet reactionArguments = reactionPropertyMap.get(reaction);\n\t\t\tif (reactionArguments === undefined) {\n\t\t\t\treactionArguments = {\n\t\t\t\t\tpreviousProperties: {},\n\t\t\t\t\tnewProperties: {},\n\t\t\t\t\tchanged: false\n\t\t\t\t};\n\t\t\t}\n\t\t\treactionArguments.previousProperties[propertyName] = this._properties[propertyName];\n\t\t\treactionArguments.newProperties[propertyName] = newProperties[propertyName];\n\t\t\tif (changedPropertyKeys.indexOf(propertyName) !== -1) {\n\t\t\t\treactionArguments.changed = true;\n\t\t\t}\n\t\t\treactionPropertyMap.set(reaction, reactionArguments);\n\t\t\treturn reactionPropertyMap;\n\t\t}, new Map<Function, ReactionFunctionArguments>());\n\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && isWidgetBaseConstructor(property) === false) {\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce((properties, beforePropertiesFunction) => {\n\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t}, { ...properties });\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprotected runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\treturn afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\t\treturn dNode;\n\t}\n\n\t/**\n\t * Process a structure of DNodes into VNodes, string or null. `null` results are filtered.\n\t *\n\t * @param dNode the dnode to process\n\t * @returns a VNode, string or null\n\t */\n\tprivate _dNodeToVNode(dNode: DNode): VirtualDomNode;\n\tprivate _dNodeToVNode(dNode: DNode[]): VirtualDomNode[];\n\tprivate _dNodeToVNode(dNode: DNode | DNode[]): VirtualDomNode | VirtualDomNode[];\n\tprivate _dNodeToVNode(dNode: DNode | DNode[]): VirtualDomNode | VirtualDomNode[] {\n\t\tif (typeof dNode === 'string' || dNode === null || dNode === undefined) {\n\t\t\treturn dNode;\n\t\t}\n\n\t\tif (Array.isArray(dNode)) {\n\t\t\treturn dNode.map((node) => this._dNodeToVNode(node));\n\t\t}\n\n\t\tif (isWNode(dNode)) {\n\t\t\tconst { children, properties, coreProperties } = dNode;\n\t\t\tconst { key } = properties;\n\n\t\t\tlet { widgetConstructor } = dNode;\n\t\t\tlet child: WidgetBaseInterface<WidgetProperties>;\n\n\t\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\t\tconst item = this._registry.get(widgetConstructor);\n\t\t\t\tif (item === null) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\twidgetConstructor = <WidgetBaseConstructor> item;\n\t\t\t}\n\n\t\t\tconst childrenMapKey = key || widgetConstructor;\n\t\t\tlet cachedChildren = this._cachedChildrenMap.get(childrenMapKey) || [];\n\t\t\tlet cachedChild: WidgetCacheWrapper | undefined;\n\n\t\t\tfor (let i = 0; i < cachedChildren.length; i++) {\n\t\t\t\tconst cachedChildWrapper = cachedChildren[i];\n\t\t\t\tif (cachedChildWrapper.widgetConstructor === widgetConstructor && cachedChildWrapper.used === false) {\n\t\t\t\t\tcachedChild = cachedChildWrapper;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cachedChild !== undefined) {\n\t\t\t\tchild = cachedChild.child;\n\t\t\t\tcachedChild.used = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchild = new widgetConstructor();\n\t\t\t\tchild.own(child.on('invalidated', this._boundInvalidate));\n\t\t\t\tcachedChildren = [...cachedChildren, { child, widgetConstructor, used: true }];\n\t\t\t\tthis._cachedChildrenMap.set(childrenMapKey, cachedChildren);\n\t\t\t\tthis.own(child);\n\t\t\t}\n\t\t\tchild.__setCoreProperties__(coreProperties);\n\t\t\tchild.__setProperties__(properties);\n\t\t\tif (typeof childrenMapKey !== 'string' && cachedChildren.length > 1) {\n\t\t\t\tconst widgetName = (<any> childrenMapKey).name;\n\t\t\t\tlet errorMsg = 'It is recommended to provide a unique \\'key\\' property when using the same widget multiple times';\n\n\t\t\t\tif (widgetName) {\n\t\t\t\t\terrorMsg = `It is recommended to provide a unique 'key' property when using the same widget (${widgetName}) multiple times`;\n\t\t\t\t}\n\n\t\t\t\tconsole.warn(errorMsg);\n\t\t\t\tthis.emit({ type: 'error', target: this, error: new Error(errorMsg) });\n\t\t\t}\n\n\t\t\tchild.__setChildren__(children);\n\t\t\treturn child.__render__();\n\t\t}\n\n\t\tdNode.vNodes = [];\n\t\tfor (let i = 0; i < dNode.children.length; i++) {\n\t\t\tconst child = dNode.children[i];\n\t\t\tif (child === null || child === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdNode.vNodes.push(this._dNodeToVNode(child));\n\t\t}\n\n\t\treturn dNode.render();\n\t}\n\n\t/**\n\t * Manage widget instances after render processing\n\t */\n\tprivate _manageDetachedChildren(): void {\n\t\tthis._cachedChildrenMap.forEach((cachedChildren, key) => {\n\t\t\tconst filteredCacheChildren: WidgetCacheWrapper[] = [];\n\t\t\tfor (let i = 0; i < cachedChildren.length; i++) {\n\t\t\t\tconst cachedChild = cachedChildren[i];\n\t\t\t\tif (cachedChild.used === false) {\n\t\t\t\t\tcachedChild.child.destroy();\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcachedChild.used = false;\n\t\t\t\tfilteredCacheChildren.push(cachedChild);\n\t\t\t}\n\t\t\tthis._cachedChildrenMap.set(key, filteredCacheChildren);\n\t\t});\n\t}\n}\n\nexport default WidgetBase;\n"]}