{"version":3,"file":"Injector.js","sourceRoot":"","sources":["Injector.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,wCAAyC;IACzC,8CAA6C;IAC7C,2CAMsB;IACtB,yBAAiD;IAwBjD;;OAEG;IACU,QAAA,cAAc,GAAY;QACtC,aAAa,EAAb,UAAc,MAAW,EAAE,UAAe;YACzC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC;QACD,WAAW,EAAX,UAAY,MAAW,EAAE,QAAiB;YACzC,MAAM,CAAC,EAAE,CAAC;QACX,CAAC;KACD,CAAC;IAEF;;;OAGG;IACH;QAAsC,2BAAO;QAI5C,iBAAY,OAAmB;YAAnB,wBAAA,EAAA,UAAiB,EAAE;YAA/B,YACC,kBAAM,EAAE,CAAC,SAET;YADA,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;QACzB,CAAC;QAEM,qBAAG,GAAV;YACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACtB,CAAC;QAEM,qBAAG,GAAV,UAAW,OAAU;YACpB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;QACnC,CAAC;QACF,cAAC;IAAD,CAAC,AAjBD,CAAsC,iBAAO,GAiB5C;IAjBY,0BAAO;IA4BpB;QAA+D,gCAA8B;QAI5F,sBAAY,OAAW;YAAvB,YACC,iBAAO,SAKP;YARS,aAAO,GAAU,EAAE,CAAC;YAI7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACb,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,YAAY,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC,CAAC;YAC3D,CAAC;;QACF,CAAC;QAEM,+BAAQ,GAAf;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;QACF,mBAAC;IAAD,CAAC,AAfD,CAA+D,uBAAU,GAexE;IAfY,oCAAY;IAiBzB;;;OAGG;IACH,kBAAoF,IAAO,EAAE,OAAU;QAGtG,IAAM,QAAQ;YAAS,4BAAI;YAE1B;gBAAY,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;uBACzB,kBAAM,OAAO,CAAC;YACf,CAAC;YAGS,+BAAY,GAAtB,UAAuB,IAAW;gBACzB,IAAA,6BAAK,CAAqB;gBAClC,YAAQ,CAAC,IAAI,EAAE,UAAC,IAAmC;oBAC1C,IAAA,4BAAU,CAAU;oBAC5B,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC;gBACzB,CAAC,EAAE,UAAC,IAAW,IAAO,MAAM,CAAC,WAAO,CAAC,IAAI,CAAC,IAAI,WAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEhE,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAES,yBAAM,GAAhB;gBACO,IAAA,oBAMa,EALlB,kBAAM,EACN,0BAAU,EACV,qBAA4C,EAA5C,yEAA4C,EAC5C,sBAAQ,EACR,mBAAwC,EAAxC,qEAAwC,CACrB;gBACpB,IAAM,gBAAgB,GAAG,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC;gBAEhE,aAAM,CAAC,UAAU,EAAE,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC;gBAC/D,EAAE,CAAC,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjD,QAAQ,CAAC,IAAI,OAAb,QAAQ,EAAS,gBAAgB,EAAE;gBACpC,CAAC;gBAED,MAAM,CAAC,MAAM,EAAE,CAAC;YACjB,CAAC;YACF,eAAC;QAAD,CAAC,AAlCD,CAAuB,IAAI,GAkC1B;QA3BA;YADC,wBAAW,EAAE;;;;oDASb;QAfI,QAAQ;YADb,yBAAY,CAAC,QAAQ,iBAAkB;;WAClC,QAAQ,CAkCb;QACD,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAvCD,4BAuCC;IAED,kBAAe,QAAQ,CAAC","sourcesContent":["import { assign } from '@dojo/core/lang';\nimport { Evented } from '@dojo/core/Evented';\nimport {\n\tafterRender,\n\tdiffProperty,\n\tInternalWNode,\n\tInternalHNode,\n\tWidgetBase\n} from './WidgetBase';\nimport { decorate, isHNode, isWNode } from './d';\nimport { DiffType } from './diff';\nimport {\n\tConstructor,\n\tDNode,\n\tWidgetProperties\n} from './interfaces';\n\nexport interface GetProperties {\n\t<C, P extends WidgetProperties>(inject: C, properties: P): any;\n}\n\nexport interface GetChildren {\n\t<C>(inject: C, children: DNode[]): DNode[];\n}\n\n/**\n * The binding mappers for properties and children.\n */\nexport interface Mappers {\n\tgetProperties: GetProperties;\n\tgetChildren: GetChildren;\n}\n\n/**\n * Default noop Mappers for the container.\n */\nexport const defaultMappers: Mappers = {\n\tgetProperties(inject: any, properties: any): any {\n\t\treturn Object.create(null);\n\t},\n\tgetChildren(inject: any, children: DNode[]): DNode[] {\n\t\treturn [];\n\t}\n};\n\n/**\n * Base context class that extends Evented and\n * returns the context using `.get()`.\n */\nexport class Context<T = any> extends Evented {\n\n\tprivate _context: T;\n\n\tconstructor(context: T = <T> {}) {\n\t\tsuper({});\n\t\tthis._context = context;\n\t}\n\n\tpublic get(): T {\n\t\treturn this._context;\n\t}\n\n\tpublic set(context: T): void {\n\t\tthis._context = context;\n\t\tthis.emit({ type: 'invalidate' });\n\t}\n}\n\nexport interface InjectorProperties extends WidgetProperties {\n\tscope: any;\n\trender(): DNode;\n\tgetProperties?: GetProperties;\n\tproperties: WidgetProperties;\n\tgetChildren?: GetChildren;\n\tchildren: DNode[];\n}\n\nexport class BaseInjector<C extends Evented = Context> extends WidgetBase<InjectorProperties> {\n\n\tprotected context: C = <C> {};\n\n\tconstructor(context?: C) {\n\t\tsuper();\n\t\tif (context) {\n\t\t\tthis.context = context;\n\t\t\tthis.context.on('invalidate', this.invalidate.bind(this));\n\t\t}\n\t}\n\n\tpublic toInject(): C {\n\t\treturn this.context;\n\t}\n}\n\n/**\n * Mixin that extends the supplied Injector class with the proxy `render` and passing the provided to `context` to the Injector\n * class via the constructor.\n */\nexport function Injector<C extends Evented, T extends Constructor<BaseInjector<C>>>(Base: T, context: C): T {\n\n\t@diffProperty('render', DiffType.ALWAYS)\n\tclass Injector extends Base {\n\n\t\tconstructor(...args: any[]) {\n\t\t\tsuper(context);\n\t\t}\n\n\t\t@afterRender()\n\t\tprotected decorateBind(node: DNode): DNode {\n\t\t\tconst { scope } = this.properties;\n\t\t\tdecorate(node, (node: InternalHNode | InternalWNode) => {\n\t\t\t\tconst { properties } = node;\n\t\t\t\tproperties.bind = scope;\n\t\t\t}, (node: DNode) => { return isHNode(node) || isWNode(node); });\n\n\t\t\treturn node;\n\t\t}\n\n\t\tprotected render(): DNode {\n\t\t\tconst {\n\t\t\t\trender,\n\t\t\t\tproperties,\n\t\t\t\tgetProperties = defaultMappers.getProperties,\n\t\t\t\tchildren,\n\t\t\t\tgetChildren = defaultMappers.getChildren\n\t\t\t} = this.properties;\n\t\t\tconst injectedChildren = getChildren(this.toInject(), children);\n\n\t\t\tassign(properties, getProperties(this.toInject(), properties));\n\t\t\tif (injectedChildren && injectedChildren.length) {\n\t\t\t\tchildren.push(...injectedChildren);\n\t\t\t}\n\n\t\t\treturn render();\n\t\t}\n\t}\n\treturn Injector;\n}\n\nexport default Injector;\n"]}