{"version":3,"file":"RegistryHandler.js","sourceRoot":"","sources":["RegistryHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;IAAA,8CAA6C;IAI7C;QAA6C,mCAAO;QAApD;YAAA,qEAsDC;YArDQ,iBAAW,GAAiD,EAAE,CAAC;;QAqDxE,CAAC;QAnDA,6BAAG,GAAH,UAAI,QAAwB;YAC3B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;QACxC,CAAC;QAED,gCAAM,GAAN,UAAO,QAAwB;YAA/B,iBASC;YARA,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,eAAe,EAAE,CAAC;gBAC/C,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC3C,QAAQ,CAAC,OAAO,EAAE,CAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9B,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,iCAAO,GAAP,UAAQ,QAAwB,EAAE,WAA2B;YAC5D,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,eAAe,EAAE,CAAC;gBAC/C,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;oBAC3C,QAAQ,CAAC,OAAO,EAAE,CAAC;oBACnB,eAAe,CAAC,QAAQ,GAAG,WAAW,CAAC;oBACvC,MAAM,CAAC,IAAI,CAAC;gBACb,CAAC;gBACD,MAAM,CAAC,KAAK,CAAC;YACd,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,6BAAG,GAAH,UAAI,WAA0B;YAC7B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAC,eAAe;gBAC5C,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,6BAAG,GAAH,UAAI,WAA0B;YAA9B,iBAkBC;oCAjBS,CAAC;gBACT,IAAM,eAAe,GAAG,OAAK,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAM,IAAI,GAAG,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACvD,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oCACH,IAAI;gBACZ,CAAC;gBACD,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClC,eAAe,CAAC,MAAM,GAAG,eAAe,CAAC,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,UAAC,KAAgC;wBAClG,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;4BAC/B,KAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC;4BAClC,eAAe,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;4BACjC,eAAe,CAAC,MAAM,GAAG,SAAS,CAAC;wBACpC,CAAC;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC;;YAfD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE;sCAAvC,CAAC;;;aAeT;YACD,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QACF,sBAAC;IAAD,CAAC,AAtDD,CAA6C,iBAAO,GAsDnD","sourcesContent":["import { Evented } from '@dojo/core/Evented';\nimport { WidgetBaseConstructor, RegistryLabel } from './interfaces';\nimport WidgetRegistry, { WidgetRegistryEventObject } from './WidgetRegistry';\n\nexport default class RegistryHandler extends Evented {\n\tprivate _registries: { handle?: any, registry: WidgetRegistry }[] = [];\n\n\tadd(registry: WidgetRegistry) {\n\t\tthis._registries.unshift({ registry });\n\t}\n\n\tremove(registry: WidgetRegistry): boolean {\n\t\treturn this._registries.some((registryWrapper, i) => {\n\t\t\tif (registryWrapper.registry === registry) {\n\t\t\t\tregistry.destroy();\n\t\t\t\tthis._registries.splice(i, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\treplace(original: WidgetRegistry, replacement: WidgetRegistry): boolean {\n\t\treturn this._registries.some((registryWrapper, i) => {\n\t\t\tif (registryWrapper.registry === original) {\n\t\t\t\toriginal.destroy();\n\t\t\t\tregistryWrapper.registry = replacement;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t}\n\n\thas(widgetLabel: RegistryLabel): boolean {\n\t\treturn this._registries.some((registryWrapper) => {\n\t\t\treturn registryWrapper.registry.has(widgetLabel);\n\t\t});\n\t}\n\n\tget(widgetLabel: RegistryLabel): WidgetBaseConstructor | null {\n\t\tfor (let i = 0; i < this._registries.length; i++) {\n\t\t\tconst registryWrapper = this._registries[i];\n\t\t\tconst item = registryWrapper.registry.get(widgetLabel);\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t\telse if (!registryWrapper.handle) {\n\t\t\t\tregistryWrapper.handle = registryWrapper.registry.on(widgetLabel, (event: WidgetRegistryEventObject) => {\n\t\t\t\t\tif (event.action === 'loaded') {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t\tregistryWrapper.handle.destroy();\n\t\t\t\t\t\tregistryWrapper.handle = undefined;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n"]}