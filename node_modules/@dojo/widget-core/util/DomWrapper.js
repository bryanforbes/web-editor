var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./../WidgetBase", "../d", "@dojo/core/lang"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WidgetBase_1 = require("./../WidgetBase");
    var d_1 = require("../d");
    var lang_1 = require("@dojo/core/lang");
    var DomWrapper = (function (_super) {
        __extends(DomWrapper, _super);
        function DomWrapper() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DomWrapper.prototype.afterCreate = function () {
            this.handleDomInsertion(this.properties.domNode);
        };
        DomWrapper.prototype.afterUpdate = function () {
            this.handleDomInsertion(this.properties.domNode);
        };
        DomWrapper.prototype.__render__ = function () {
            var vNode = _super.prototype.__render__.call(this);
            if (vNode && typeof vNode !== 'string') {
                if (!this._vNode) {
                    this._vNode = vNode;
                }
            }
            else {
                this._vNode = undefined;
            }
            return vNode;
        };
        DomWrapper.prototype.render = function () {
            var dNode = _super.prototype.render.call(this);
            if (d_1.isHNode(dNode)) {
                var _a = this, afterCreate = _a.afterCreate, afterUpdate = _a.afterUpdate;
                lang_1.assign(dNode.properties, {
                    afterCreate: afterCreate,
                    afterUpdate: afterUpdate
                });
            }
            return dNode;
        };
        DomWrapper.prototype.handleDomInsertion = function (newNode) {
            var notNullNode = newNode;
            if (!notNullNode) {
                notNullNode = document.createElement('div'); // placeholder element
            }
            if (this._vNode) {
                // replace the vNode domElement with our new element...
                if (this._vNode.domNode && this._vNode.domNode.parentNode) {
                    this._vNode.domNode.parentNode.replaceChild(notNullNode, this._vNode.domNode);
                }
                // and update the reference to our vnode
                this._vNode.domNode = notNullNode;
            }
        };
        return DomWrapper;
    }(WidgetBase_1.WidgetBase));
    exports.DomWrapper = DomWrapper;
    exports.default = DomWrapper;
});
//# sourceMappingURL=DomWrapper.js.map