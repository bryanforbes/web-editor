{"version":3,"file":"Symbol.js","sourceRoot":"","sources":["Symbol.ts"],"names":[],"mappings":"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","sourcesContent":["import has from './support/has';\nimport global from './support/global';\nimport { getValueDescriptor } from './support/util';\n\ndeclare global {\n\tinterface SymbolConstructor {\n\t\tobservable: symbol;\n\t}\n}\n\nexport namespace Shim {\n\t/* tslint:disable-next-line:variable-name */\n\tlet Symbol: SymbolConstructor;\n\t/* tslint:disable-next-line:variable-name */\n\tlet InternalSymbol: SymbolConstructor;\n\n\tconst defineProperties = Object.defineProperties;\n\tconst defineProperty = Object.defineProperty;\n\tconst create = Object.create;\n\n\tconst objPrototype = Object.prototype;\n\n\tinterface GlobalSymbols {\n\t\t[key: string]: symbol;\n\t}\n\n\tconst globalSymbols: GlobalSymbols = {};\n\n\tinterface TypedPropertyDescriptor<T> extends PropertyDescriptor {\n\t\tvalue?: T;\n\t\tget? (): T;\n\t\tset? (v: T): void;\n\t}\n\n\tconst getSymbolName = (function () {\n\t\tconst created = create(null);\n\t\treturn function (desc: string|number): string {\n\t\t\tlet postfix = 0;\n\t\t\tlet name: string;\n\t\t\twhile (created[String(desc) + (postfix || '')]) {\n\t\t\t\t++postfix;\n\t\t\t}\n\t\t\tdesc += String(postfix || '');\n\t\t\tcreated[desc] = true;\n\t\t\tname = '@@' + desc;\n\n\t\t\t// FIXME: Temporary guard until the duplicate execution when testing can be\n\t\t\t// pinned down.\n\t\t\tif (!Object.getOwnPropertyDescriptor(objPrototype, name)) {\n\t\t\t\tdefineProperty(objPrototype, name, {\n\t\t\t\t\tset: function (this: Symbol, value: any) {\n\t\t\t\t\t\tdefineProperty(this, name, getValueDescriptor(value));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn name;\n\t\t};\n\t}());\n\n\tInternalSymbol = function Symbol(this: any, description?: string|number): symbol {\n\t\tif (this instanceof InternalSymbol) {\n\t\t\tthrow new TypeError('TypeError: Symbol is not a constructor');\n\t\t}\n\t\treturn Symbol(description);\n\t} as SymbolConstructor;\n\n\tSymbol = function Symbol(this: Symbol, description?: string|number): symbol {\n\t\tif (this instanceof Symbol) {\n\t\t\tthrow new TypeError('TypeError: Symbol is not a constructor');\n\t\t}\n\t\tconst sym = Object.create(InternalSymbol.prototype);\n\t\tdescription = (description === undefined ? '' : String(description));\n\t\treturn defineProperties(sym, {\n\t\t\t__description__: getValueDescriptor(description),\n\t\t\t__name__: getValueDescriptor(getSymbolName(description))\n\t\t});\n\t} as SymbolConstructor;\n\n\t/**\n\t * A custom guard function that determines if an object is a symbol or not\n\t * @param  {any}       value The value to check to see if it is a symbol or not\n\t * @return {is symbol}       Returns true if a symbol or not (and narrows the type guard)\n\t */\n\texport function isSymbol(value: any): value is symbol {\n\t\treturn (value && ((typeof value === 'symbol') || (value['@@toStringTag'] === 'Symbol'))) || false;\n\t}\n\n\t/**\n\t * Throws if the value is not a symbol, used internally within the Shim\n\t * @param  {any}    value The value to check\n\t * @return {symbol}       Returns the symbol or throws\n\t */\n\tfunction validateSymbol(value: any): symbol {\n\t\tif (!isSymbol(value)) {\n\t\t\tthrow new TypeError(value + ' is not a symbol');\n\t\t}\n\t\treturn value;\n\t}\n\n\t/* Decorate the Symbol function with the appropriate properties */\n\tdefineProperty(Symbol, 'for', getValueDescriptor(function (key: string): symbol {\n\t\tif (globalSymbols[key]) {\n\t\t\treturn globalSymbols[key];\n\t\t}\n\t\treturn (globalSymbols[key] = Symbol(String(key)));\n\t}));\n\tdefineProperties(Symbol, {\n\t\tkeyFor: getValueDescriptor(function (sym: symbol): string | undefined {\n\t\t\tlet key: string;\n\t\t\tvalidateSymbol(sym);\n\t\t\tfor (key in globalSymbols) {\n\t\t\t\tif (globalSymbols[key] === sym) {\n\t\t\t\t\treturn key;\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\thasInstance: getValueDescriptor(Symbol.for('hasInstance'), false, false),\n\t\tisConcatSpreadable: getValueDescriptor(Symbol.for('isConcatSpreadable'), false, false),\n\t\titerator: getValueDescriptor(Symbol.for('iterator'), false, false),\n\t\tmatch: getValueDescriptor(Symbol.for('match'), false, false),\n\t\tobservable: getValueDescriptor(Symbol.for('observable'), false, false),\n\t\treplace: getValueDescriptor(Symbol.for('replace'), false, false),\n\t\tsearch: getValueDescriptor(Symbol.for('search'), false, false),\n\t\tspecies: getValueDescriptor(Symbol.for('species'), false, false),\n\t\tsplit: getValueDescriptor(Symbol.for('split'), false, false),\n\t\ttoPrimitive: getValueDescriptor(Symbol.for('toPrimitive'), false, false),\n\t\ttoStringTag: getValueDescriptor(Symbol.for('toStringTag'), false, false),\n\t\tunscopables: getValueDescriptor(Symbol.for('unscopables'), false, false)\n\t});\n\n\t/* Decorate the InternalSymbol object */\n\tdefineProperties(InternalSymbol.prototype, {\n\t\tconstructor: getValueDescriptor(Symbol),\n\t\ttoString: getValueDescriptor(function (this: { __name__: string }) { return this.__name__; }, false, false)\n\t});\n\n\t/* Decorate the Symbol.prototype */\n\tdefineProperties(Symbol.prototype, {\n\t\ttoString: getValueDescriptor(function (this: Symbol) { return 'Symbol (' + (<any> validateSymbol(this)).__description__ + ')'; }),\n\t\tvalueOf: getValueDescriptor(function (this: Symbol) { return validateSymbol(this); })\n\t});\n\n\tdefineProperty(Symbol.prototype, <any> Symbol.toPrimitive, getValueDescriptor(function (this: Symbol) { return validateSymbol(this); }));\n\tdefineProperty(Symbol.prototype, <any> Symbol.toStringTag, getValueDescriptor('Symbol', false, false, true));\n\n\tdefineProperty(InternalSymbol.prototype, <any> Symbol.toPrimitive, getValueDescriptor((<any> Symbol).prototype[Symbol.toPrimitive], false, false, true));\n\tdefineProperty(InternalSymbol.prototype, <any> Symbol.toStringTag, getValueDescriptor((<any> Symbol).prototype[Symbol.toStringTag], false, false, true));\n\n\t/* tslint:disable-next-line:variable-name */\n\texport const Exposed = Symbol;\n}\n\n/* tslint:disable-next-line:variable-name */\nconst SymbolShim: SymbolConstructor = has('es6-symbol') ? global.Symbol : global.Symbol = Shim.Exposed;\n\n/**\n * Fill any missing well known symbols if the native Symbol is missing them\n */\n[ 'hasInstance', 'isConcatSpreadable', 'iterator', 'species', 'replace', 'search', 'split', 'match', 'toPrimitive',\n\t'toStringTag', 'unscopables', 'observable' ].forEach((wellKnown) => {\n\t\tif (!(<any> Symbol)[wellKnown]) {\n\t\t\tObject.defineProperty(Symbol, wellKnown, getValueDescriptor(Symbol.for(wellKnown), false, false));\n\t\t}\n\t});\n\nexport const isSymbol = Shim.isSymbol;\n\nexport default SymbolShim;\n"]}