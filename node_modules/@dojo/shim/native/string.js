(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../support/util"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var util_1 = require("../support/util");
    /**
     * The minimum location of high surrogates
     */
    exports.HIGH_SURROGATE_MIN = 0xD800;
    /**
     * The maximum location of high surrogates
     */
    exports.HIGH_SURROGATE_MAX = 0xDBFF;
    /**
     * The minimum location of low surrogates
     */
    exports.LOW_SURROGATE_MIN = 0xDC00;
    /**
     * The maximum location of low surrogates
     */
    exports.LOW_SURROGATE_MAX = 0xDFFF;
    /**
     * A tag function for template strings to get the template string's raw string form.
     *
     * @param callSite Call site object (or a template string in TypeScript, which will transpile to one)
     * @param substitutions Values to substitute within the template string (TypeScript will generate these automatically)
     * @return String containing the raw template string with variables substituted
     *
     * @example
     * // Within TypeScript; logs 'The answer is:\\n42'
     * let answer = 42;
     * console.log(string.raw`The answer is:\n${answer}`);
     *
     * @example
     * // The same example as above, but directly specifying a JavaScript object and substitution
     * console.log(string.raw({ raw: [ 'The answer is:\\n', '' ] }, 42));
     */
    exports.raw = String.raw;
    /**
     * Returns the UTF-16 encoded code point value of a given position in a string.
     *
     * @param text The string containing the element whose code point is to be determined
     * @param position Position of an element within the string to retrieve the code point value from
     * @return A non-negative integer representing the UTF-16 encoded code point value
     */
    exports.fromCodePoint = String.fromCodePoint;
    /**
     * Returns the UTF-16 encoded code point value of a given position in a string.
     *
     * @param text The string containing the element whose code point is to be determined
     * @param position Position of an element within the string to retrieve the code point value from
     * @return A non-negative integer representing the UTF-16 encoded code point value
     */
    exports.codePointAt = util_1.wrapNative(String.prototype.codePointAt);
    /**
     * Returns a string containing the given string repeated the specified number of times.
     *
     * @param text The string to repeat
     * @param count The number of times to repeat the string
     * @return A string containing the input string repeated count times
     */
    exports.repeat = util_1.wrapNative(String.prototype.repeat);
    /**
     * Determines whether a string begins with the given substring (optionally starting from a given index).
     *
     * @param text The string to look for the search string within
     * @param search The string to search for
     * @param position The index to begin searching at
     * @return Boolean indicating if the search string was found at the beginning of the given string
     */
    exports.startsWith = util_1.wrapNative(String.prototype.startsWith);
    /**
     * Determines whether a string ends with the given substring.
     *
     * @param text The string to look for the search string within
     * @param search The string to search for
     * @param endPosition The index searching should stop before (defaults to text.length)
     * @return Boolean indicating if the search string was found at the end of the given string
     */
    exports.endsWith = util_1.wrapNative(String.prototype.endsWith);
    /**
     * Determines whether a string includes the given substring (optionally starting from a given index).
     *
     * @param text The string to look for the search string within
     * @param search The string to search for
     * @param position The index to begin searching at
     * @return Boolean indicating if the search string was found within the given string
     */
    exports.includes = util_1.wrapNative(String.prototype.includes);
});
//# sourceMappingURL=string.js.map