{"version":3,"file":"Map.js","sourceRoot":"","sources":["Map.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,4CAAuC;IAkBvC,4CAA4C;IAC5C,IAAM,GAAG,GAAmB,gBAAM,CAAC,GAAG,CAAC;IAEvC,kBAAe,GAAG,CAAC","sourcesContent":["import global from '../support/global';\n\nexport interface Map<K, V> {\n\tclear(): void;\n\tdelete(key: K): boolean;\n\tforEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void;\n\tget(key: K): V | undefined;\n\thas(key: K): boolean;\n\tset(key: K, value?: V): this;\n\treadonly size: number;\n}\n\nexport interface MapConstructor {\n\tnew (): Map<any, any>;\n\tnew <K, V>(entries?: [K, V][]): Map<K, V>;\n\tprototype: Map<any, any>;\n}\n\n/* tslint:disable-next-line:variable-name */\nconst Map: MapConstructor = global.Map;\n\nexport default Map;\n"]}