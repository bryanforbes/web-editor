(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    /**
     * Determines whether two values are the same value.
     *
     * @param value1 The first value to compare
     * @param value2 The second value to compare
     * @return true if the values are the same; false otherwise
     */
    exports.is = Object.is;
    /**
     * Returns an array of own properties who key is a symbol
     *
     * @param o The object to return the properties for
     */
    exports.getOwnPropertySymbols = Object.getOwnPropertySymbols;
    /**
     * Returns an array of own properties who key is a string
     *
     * @param o The object to return the properties for
     */
    exports.getOwnPropertyNames = Object.getOwnPropertyNames;
    /**
     * Returns the names of the enumerable properties and methods of an object.
     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.
     */
    exports.keys = Object.keys;
});
//# sourceMappingURL=object.js.map