export interface Set<T> {
    add(value: T): this;
    clear(): void;
    delete(value: T): boolean;
    forEach(callbackfn: (value: T, index: T, set: Set<T>) => void, thisArg?: any): void;
    has(value: T): boolean;
    readonly size: number;
}
export interface SetConstructor {
    new (): Set<any>;
    new <T>(values?: T[]): Set<T>;
    prototype: Set<any>;
}
declare const Set: SetConstructor;
export default Set;
