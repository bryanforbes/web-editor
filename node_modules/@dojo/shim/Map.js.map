{"version":3,"file":"Map.js","sourceRoot":"","sources":["Map.ts"],"names":[],"mappings":"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","sourcesContent":["import { ArrayLike } from './interfaces';\nimport { hasClass } from './support/decorators';\nimport global from './support/global';\nimport { forOf, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport { is as objectIs } from './object';\nimport './Symbol';\n\nexport namespace Shim {\n\t/**\n\t * An implementation analogous to the Map specification in ES2015.\n\t */\n\texport class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\t/**\n\t\t * Creates a new Map\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param iterator\n\t\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t\t * The first item in each tuple corresponds to the key of the map entry.\n\t\t * The second item corresponds to the value of the map entry.\n\t\t */\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tforOf(iterable, (value: [K, V]) => {\n\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns the number of key / value pairs in the Map.\n\t\t *\n\t\t * @return the number of key / value pairs in the Map\n\t\t */\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\t/**\n\t\t * Deletes all keys and their associated values.\n\t\t */\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\t/**\n\t\t * Deletes a given key and its associated value.\n\t\t *\n\t\t * @param key The key to delete\n\t\t * @return true if the key exists, false if it does not\n\t\t */\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n\t\t * Returns an iterator that yields each key/value pair as an array.\n\t\t *\n\t\t * @return An iterator for each key/value pair in the instance.\n\t\t */\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map((key: K, i: number): [K, V] => {\n\t\t\t\treturn [ key, this._values[i] ];\n\t\t\t});\n\n\t\t\treturn new ShimIterator<[K, V]>(values);\n\t\t}\n\n\t\t/**\n\t\t * Executes a given function for each map entry. The function\n\t\t * is invoked with three arguments: the element value, the\n\t\t * element key, and the associated Map instance.\n\t\t *\n\t\t * @param callback The function to execute for each map entry,\n\t\t * @param context The value to use for `this` for each execution of the calback\n\t\t */\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Returns the value associated with a given key.\n\t\t *\n\t\t * @param key The key to look up\n\t\t * @return The value if one exists or undefined\n\t\t */\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\t/**\n\t\t * Checks for the presence of a given key.\n\t\t *\n\t\t * @param key The key to check for\n\t\t * @return true if the key exists, false if it does not\n\t\t */\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\t/**\n\t\t * Returns an iterator that yields each key in the map.\n\t\t *\n\t\t * @return An iterator containing the instance's keys.\n\t\t */\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator<K>(this._keys);\n\t\t}\n\n\t\t/**\n\t\t * Sets the value associated with a given key.\n\t\t *\n\t\t * @param key The key to define a value to\n\t\t * @param value The value to assign\n\t\t * @return The Map instance\n\t\t */\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n\t\t * Returns an iterator that yields each value in the map.\n\t\t *\n\t\t * @return An iterator containing the instance's values.\n\t\t */\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator<V>(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag] = 'Map';\n\t}\n}\n\n@hasClass('es6-map', global.Map, Shim.Map)\nexport default class Map<K, V> {\n\t/* istanbul ignore next */\n\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) { };\n\n\t/* istanbul ignore next */\n\tget size(): number { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tclear(): void { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tdelete(key: K): boolean { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tentries(): IterableIterator<[K, V]> { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}): void { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tget(key: K): V | undefined { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\thas(key: K): boolean { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tkeys(): IterableIterator<K> { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tset(key: K, value: V): Map<K, V> { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\tvalues(): IterableIterator<V> { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\t[Symbol.iterator](): IterableIterator<[K, V]> { throw new Error('Abstract method'); };\n\t/* istanbul ignore next */\n\t[Symbol.toStringTag] = 'Map';\n}\n"]}