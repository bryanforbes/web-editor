{"version":3,"file":"object.js","sourceRoot":"","sources":["object.ts"],"names":[],"mappings":"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","sourcesContent":["import has from './support/has';\nimport { isSymbol } from './Symbol';\n\nnamespace Shim {\n\texport function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t}\n\n\texport function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t}\n\n\texport function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t}\n\n\texport function symbolAwareKeys(o: any): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t}\n\n\texport function getOwnPropertyDescriptor(o: any, prop: string | symbol): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn (<any> Object).getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t}\n\n\texport function values(o: any): any[] {\n\t\treturn keys(o).map(key => o[ key ]);\n\t}\n\n\texport function entries(o: any): any[] {\n\t\treturn keys(o).map(key => [ key, o[ key ] ]);\n\t}\n}\n\n/**\n * Determines whether two values are the same value.\n *\n * @param value1 The first value to compare\n * @param value2 The second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport const is: (value1: any, value2: any) => boolean = 'is' in Object\n\t? (<any> Object).is\n\t: Shim.is;\n\n/**\n * Detect if there is native support for Symbol properties in Object\n */\nconst hasGetOwnPropertySymbols = has('es6-symbol') && 'getOwnPropertySymbols' in Object;\n\n/**\n * Returns an array of own properties who key is a symbol\n *\n * @param o The object to return the properties for\n */\nexport const getOwnPropertySymbols: (o: any) => symbol[] = hasGetOwnPropertySymbols\n\t? (<any> Object).getOwnPropertySymbols\n\t: Shim.getOwnPropertySymbols;\n\n/**\n * Returns an array of own properties who key is a string\n *\n * @param o The object to return the properties for\n */\n/* intentionally detecting `getOwnPropertySymbols` because we should should provide the shim\n * when there is no support for symbols */\nexport const getOwnPropertyNames: (o: any) => string[] = hasGetOwnPropertySymbols\n\t? Object.getOwnPropertyNames\n\t: Shim.getOwnPropertyNames;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\n/* intentionally detecting `getOwnPropertySymbols` because we should should provide the shim\n * when there is no support for symbols */\nexport const keys: (o: any) => string[] = hasGetOwnPropertySymbols\n\t? Object.keys\n\t: Shim.symbolAwareKeys;\n\n/**\n * Returns the values of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods.\n */\nexport const values: (o: any) => any[] = 'values' in Object\n\t? (<any> Object).values\n\t: Shim.values;\n\n/**\n * Returns the keys and values of the enumerable properties and methods of an object. Each entry will be returned as an\n * array holding the [key, value].\n * @param o Object that contains the properties and methods.\n */\nexport const entries: (o: any) => any[] = 'entries' in Object\n\t? (<any> Object).entries\n\t: Shim.entries;\n\nexport const getOwnPropertyDescriptor: (o: any, property: string | symbol) => PropertyDescriptor | undefined = hasGetOwnPropertySymbols\n\t? Object.getOwnPropertyDescriptor\n\t: Shim.getOwnPropertyDescriptor;\n\nfunction getOwnPropertyDescriptorsWrapper(o: any): any {\n\tlet descriptors: {[_: string]: PropertyDescriptor} = getOwnPropertyNames(o).reduce((descriptors: {[_: string]: PropertyDescriptor}, key: string) => {\n\t\tdescriptors[ key ] = <PropertyDescriptor> getOwnPropertyDescriptor(o, key);\n\t\treturn descriptors;\n\t}, {});\n\n\tgetOwnPropertySymbols(o).forEach((sym: symbol) => {\n\t\tdescriptors[ sym ] = <PropertyDescriptor> getOwnPropertyDescriptor(o, sym);\n\t});\n\n\treturn descriptors;\n}\n\n/* Return descriptors for enumerable and non enumerable properties on an object */\nexport const getOwnPropertyDescriptors: (o: any) => any = 'getOwnPropertyDescriptors' in Object\n\t? (<any> Object).getOwnPropertyDescriptors\n\t: getOwnPropertyDescriptorsWrapper;\n"]}