{"version":3,"file":"decorators.js","sourceRoot":"","sources":["decorators.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,6BAAwB;IAExB;;;;;;OAMG;IACH,kBAAyB,OAAe,EAAE,SAAmB,EAAE,UAAoB;QAClF,MAAM,CAAC,UAAU,MAAgB;YAChC,MAAM,CAAC,aAAG,CAAC,OAAO,CAAC,GAAG,SAAS,GAAG,UAAU,CAAC;QAC9C,CAAC,CAAC;IACH,CAAC;IAJD,4BAIC","sourcesContent":["import has from './has';\n\n/**\n * A class decorator that provides either a native class or a shimmed class based on a feature\n * test\n * @param feature The has feature to check\n * @param trueClass The class to use if feature test returns `true`\n * @param falseClass The class to use if the feature test returns `false` or is not defined\n */\nexport function hasClass(feature: string, trueClass: Function, falseClass: Function): ClassDecorator {\n\treturn function (target: Function): Function {\n\t\treturn has(feature) ? trueClass : falseClass;\n\t};\n}\n"]}