{"version":3,"file":"ScrollBar.js","sourceRoot":"","sources":["../../src/support/ScrollBar.ts"],"names":[],"mappings":"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","sourcesContent":["import { v } from '@dojo/widget-core/d';\nimport WidgetBase from '@dojo/widget-core/WidgetBase';\nimport { theme, ThemeableMixin, ThemeableProperties } from '@dojo/widget-core/mixins/Themeable';\nimport * as css from '../styles/scrollbar.m.css';\nimport { getAbsolutePosition } from '../support/events';\n\n/**\n * Properties that can be set `ScrollBar`\n */\nexport interface ScrollBarProperties extends ThemeableProperties {\n\t/**\n\t * Is the scroll bar horizontal?  Defaults to `false`.\n\t */\n\thorizontal?: boolean;\n\n\t/**\n\t * The relative position of the top of slider to the scroll area\n\t */\n\tposition: number;\n\n\t/**\n\t * The relative size of the scroll area\n\t */\n\tsize?: number;\n\n\t/**\n\t * The minimum number of pixels of the slider\n\t */\n\tsliderMin?: number;\n\n\t/**\n\t * The relative size of the slider\n\t */\n\tsliderSize?: number;\n\n\t/**\n\t * Is the slider visible?\n\t */\n\tvisible?: boolean;\n\n\t/**\n\t * Called when the widget wants to scroll\n\t * @param delta The relative size of the requested scroll, negative values are a scroll up and positive values are\n\t *              a scroll down.\n\t */\n\tonScroll?(delta: number): void;\n}\n\nconst DEFAULT_KEY = 'scrollbar';\n\nconst ThemeableBase = ThemeableMixin(WidgetBase);\n\n/**\n * A class that provides a visualization of scrolling as well as emits events when the user interacts with\n * the scroll bar.  The properties of the scroll widget are relative, thereby not needing to translate from\n * the real DOM size of the scroll bar or scroll area it represents.\n */\n@theme(css)\nexport default class ScrollBar extends ThemeableBase<ScrollBarProperties> {\n\tprivate _domSize = 0;\n\tprivate _dragging = false;\n\tprivate _dragPosition: number;\n\tprivate _visible = false;\n\n\tprivate _getSize(): number {\n\t\treturn this.properties.size || this._domSize;\n\t}\n\n\tprivate _fromRelative = (relative: number): number => {\n\t\tconst size = this._getSize();\n\t\treturn this._domSize * (size ? relative / size : 0);\n\t}\n\n\tprivate _toRelative = (absolute: number): number => {\n\t\tconst size = this._getSize();\n\t\treturn this._domSize ? (absolute / this._domSize) * size : 0;\n\t}\n\n\tprivate _onDomUpdate(element: HTMLElement, key: string) {\n\t\tconst { horizontal = false, key: widgetKey = DEFAULT_KEY } = this.properties;\n\t\tif (key === widgetKey) {\n\t\t\tthis._domSize = horizontal ? element.clientWidth : element.clientHeight;\n\t\t}\n\t}\n\n\tprivate _onmouseenter(evt: MouseEvent) {\n\t\tevt.preventDefault();\n\t\tif (!this._visible) {\n\t\t\tthis._visible = true;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _onmouseleave(evt: MouseEvent) {\n\t\tevt.preventDefault();\n\t\tif (this._visible) {\n\t\t\tthis._visible = false;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _onSliderDragStart = (evt: MouseEvent & TouchEvent) => {\n\t\tevt.preventDefault();\n\t\tconst { horizontal } = this.properties;\n\t\tthis._dragging = true;\n\t\tthis._dragPosition = getAbsolutePosition(evt, horizontal);\n\t}\n\n\tprivate _onSliderDrag = (evt: MouseEvent & TouchEvent) => {\n\t\tconst {\n\t\t\t_dragging,\n\t\t\t_dragPosition,\n\t\t\tproperties: {\n\t\t\t\thorizontal,\n\t\t\t\tonScroll\n\t\t\t}\n\t\t} = this;\n\t\tif (_dragging) {\n\t\t\tevt.preventDefault();\n\t\t\tconst delta = this._toRelative(getAbsolutePosition(evt, horizontal) - _dragPosition);\n\t\t\tonScroll && onScroll(delta);\n\t\t\tthis._dragPosition = getAbsolutePosition(evt, horizontal);\n\t\t}\n\t}\n\n\tprivate _onSliderDragStop = (evt: MouseEvent & TouchEvent) => {\n\t\tevt.preventDefault();\n\t\tthis._dragging = false;\n\t}\n\n\tpublic onElementCreated(element: HTMLElement, key: string) {\n\t\tthis._onDomUpdate(element, key);\n\t}\n\n\tpublic onElementUpdated(element: HTMLElement, key: string) {\n\t\tthis._onDomUpdate(element, key);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\thorizontal = false,\n\t\t\tkey = DEFAULT_KEY,\n\t\t\tposition,\n\t\t\tsize = 0,\n\t\t\tsliderMin = 10,\n\t\t\tsliderSize = 0,\n\t\t\tvisible: propsVisible\n\t\t} = this.properties;\n\t\tconst renderPosition = String(this._fromRelative(position)) + 'px';\n\t\tconst relativeSliderSize = this._fromRelative(sliderSize);\n\t\tconst renderSliderSize = String(relativeSliderSize > sliderMin ? relativeSliderSize : sliderMin) + 'px';\n\t\tconst visible = sliderSize >= size ? false : propsVisible !== undefined ? propsVisible : this._visible;\n\t\tconst styles = horizontal ? {\n\t\t\tleft: renderPosition,\n\t\t\twidth: renderSliderSize\n\t\t} : {\n\t\t\ttop: renderPosition,\n\t\t\theight: renderSliderSize\n\t\t};\n\n\t\treturn v('div', {\n\t\t\tclasses: this.classes(css.root, css.vertical, visible ? css.visible : css.invisible),\n\t\t\tkey,\n\n\t\t\tonmouseenter: this._onmouseenter,\n\t\t\tonmouseleave: this._onmouseleave\n\t\t}, [\n\t\t\tv('div', {\n\t\t\t\tclasses: this.classes(css.slider),\n\t\t\t\tkey: 'slider',\n\t\t\t\tstyles,\n\n\t\t\t\tonmousedown: this._onSliderDragStart,\n\t\t\t\tonmousemove: this._onSliderDrag,\n\t\t\t\tonmouseup: this._onSliderDragStop,\n\t\t\t\tontouchstart: this._onSliderDragStart,\n\t\t\t\tontouchmove: this._onSliderDrag,\n\t\t\t\tontouchend: this._onSliderDragStop\n\t\t\t})\n\t\t]);\n\t}\n}\n"]}