{"version":3,"file":"themes.js","sourceRoot":"","sources":["../../src/support/themes.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,8CAAyC;IASzC,uBAA6B,QAAgB;;;;4BACpC,qBAAM,iBAAO,CAAC,QAAQ,CAAC,EAAA;4BAA/B,sBAAO,CAAC,SAAuB,CAAC,CAAC,IAAI,EAAa,EAAC;;;;KACnD;IAED,wBAAwB,KAAgB;QACvC,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,KAAK,MAAM,GAAG,SAAS,GAAG,KAAK,CAAC,IAAI,KAAK,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC;QACzF,MAAM,CAAC;YACN,IAAI,MAAA;YACJ,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,KAAK,CAAC,KAAK;SAClB,CAAC;IACH,CAAC;IAED,cAA2B,QAAgB;;;;;4BAC5B,qBAAM,aAAa,CAAC,QAAQ,CAAC,EAAA;;gCAA7B,SAA6B;wBAC3C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,EAAE,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC7D,sBAAO,KAAK,CAAC,IAAI,EAAC;;;;KAClB;IAJD,oBAIC","sourcesContent":["import request from '@dojo/core/request';\n\nexport interface ThemeJson {\n\tname: string;\n\ttype: string;\n\tcolors: { [color: string]: string };\n\trules: monaco.editor.IThemeRule[];\n}\n\nasync function loadThemeFile(filename: string): Promise<ThemeJson> {\n\treturn (await request(filename)).json<ThemeJson>();\n}\n\nfunction getEditorTheme(theme: ThemeJson): monaco.editor.ITheme {\n\tconst base = theme.type === 'dark' ? 'vs-dark' : theme.type === 'hc' ? 'hc-black' : 'vs';\n\treturn {\n\t\tbase,\n\t\tinherit: true,\n\t\trules: theme.rules\n\t};\n}\n\nexport async function load(filename: string): Promise<string> {\n\tconst theme = await loadThemeFile(filename);\n\tmonaco.editor.defineTheme(theme.name, getEditorTheme(theme));\n\treturn theme.name;\n}\n"]}